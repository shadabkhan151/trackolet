// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OmnicommMessage.proto

// Protobuf Java Version: 3.25.2
package org.traccar.protobuf.omnicomm;

public final class OmnicommMessageOuterClass {
  private OmnicommMessageOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OmnicommMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * идентификатор события (возможно несколько событий в одном сообщении.)
     * </pre>
     *
     * <code>repeated uint32 mID = 1 [packed = true];</code>
     * @return A list containing the mID.
     */
    java.util.List<java.lang.Integer> getMIDList();
    /**
     * <pre>
     * идентификатор события (возможно несколько событий в одном сообщении.)
     * </pre>
     *
     * <code>repeated uint32 mID = 1 [packed = true];</code>
     * @return The count of mID.
     */
    int getMIDCount();
    /**
     * <pre>
     * идентификатор события (возможно несколько событий в одном сообщении.)
     * </pre>
     *
     * <code>repeated uint32 mID = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The mID at the given index.
     */
    int getMID(int index);

    /**
     * <code>optional group General = 2 { ... }</code>
     * @return Whether the general field is set.
     */
    boolean hasGeneral();
    /**
     * <code>optional group General = 2 { ... }</code>
     * @return The general.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General getGeneral();
    /**
     * <code>optional group General = 2 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder getGeneralOrBuilder();

    /**
     * <code>optional group Photo = 4 { ... }</code>
     * @return Whether the photo field is set.
     */
    boolean hasPhoto();
    /**
     * <code>optional group Photo = 4 { ... }</code>
     * @return The photo.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo getPhoto();
    /**
     * <code>optional group Photo = 4 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder getPhotoOrBuilder();

    /**
     * <code>optional group NAV = 5 { ... }</code>
     * @return Whether the nav field is set.
     */
    boolean hasNAV();
    /**
     * <code>optional group NAV = 5 { ... }</code>
     * @return The nav.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV getNAV();
    /**
     * <code>optional group NAV = 5 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder getNAVOrBuilder();

    /**
     * <code>optional group UniDt = 6 { ... }</code>
     * @return Whether the unidt field is set.
     */
    boolean hasUniDt();
    /**
     * <code>optional group UniDt = 6 { ... }</code>
     * @return The unidt.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt getUniDt();
    /**
     * <code>optional group UniDt = 6 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder getUniDtOrBuilder();

    /**
     * <code>optional group CanDt_J1939 = 7 { ... }</code>
     * @return Whether the candtJ1939 field is set.
     */
    boolean hasCanDtJ1939();
    /**
     * <code>optional group CanDt_J1939 = 7 { ... }</code>
     * @return The candtJ1939.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getCanDtJ1939();
    /**
     * <code>optional group CanDt_J1939 = 7 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder getCanDtJ1939OrBuilder();

    /**
     * <code>optional group LLSDt = 8 { ... }</code>
     * @return Whether the llsdt field is set.
     */
    boolean hasLLSDt();
    /**
     * <code>optional group LLSDt = 8 { ... }</code>
     * @return The llsdt.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt getLLSDt();
    /**
     * <code>optional group LLSDt = 8 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder getLLSDtOrBuilder();

    /**
     * <code>optional group Other = 9 { ... }</code>
     * @return Whether the other field is set.
     */
    boolean hasOther();
    /**
     * <code>optional group Other = 9 { ... }</code>
     * @return The other.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other getOther();
    /**
     * <code>optional group Other = 9 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder getOtherOrBuilder();

    /**
     * <code>optional group ICONDt = 10 { ... }</code>
     * @return Whether the icondt field is set.
     */
    boolean hasICONDt();
    /**
     * <code>optional group ICONDt = 10 { ... }</code>
     * @return The icondt.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt getICONDt();
    /**
     * <code>optional group ICONDt = 10 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder getICONDtOrBuilder();

    /**
     * <code>optional group OBDDt_J1979 = 11 { ... }</code>
     * @return Whether the obddtJ1979 field is set.
     */
    boolean hasOBDDtJ1979();
    /**
     * <code>optional group OBDDt_J1979 = 11 { ... }</code>
     * @return The obddtJ1979.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getOBDDtJ1979();
    /**
     * <code>optional group OBDDt_J1979 = 11 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder getOBDDtJ1979OrBuilder();

    /**
     * <code>optional group LOG = 16 { ... }</code>
     * @return Whether the log field is set.
     */
    boolean hasLOG();
    /**
     * <code>optional group LOG = 16 { ... }</code>
     * @return The log.
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG getLOG();
    /**
     * <code>optional group LOG = 16 { ... }</code>
     */
    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder getLOGOrBuilder();
  }
  /**
   * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage}
   */
  public static final class OmnicommMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage)
      OmnicommMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OmnicommMessage.newBuilder() to construct.
    private OmnicommMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OmnicommMessage() {
      mID_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OmnicommMessage();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Builder.class);
    }

    public interface GeneralOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.General)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[4] Время/дата события (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 Time = 1;</code>
       * @return Whether the time field is set.
       */
      boolean hasTime();
      /**
       * <pre>
       *[4] Время/дата события (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 Time = 1;</code>
       * @return The time.
       */
      int getTime();

      /**
       * <pre>
       *[4] Идентификатор бортового оборудования
       * </pre>
       *
       * <code>optional uint32 IDFAS = 2;</code>
       * @return Whether the iDFAS field is set.
       */
      boolean hasIDFAS();
      /**
       * <pre>
       *[4] Идентификатор бортового оборудования
       * </pre>
       *
       * <code>optional uint32 IDFAS = 2;</code>
       * @return The iDFAS.
       */
      int getIDFAS();

      /**
       * <pre>
       *[8] ID iButton (8 байт)
       * </pre>
       *
       * <code>optional bytes IDDrv = 3;</code>
       * @return Whether the iDDrv field is set.
       */
      boolean hasIDDrv();
      /**
       * <pre>
       *[8] ID iButton (8 байт)
       * </pre>
       *
       * <code>optional bytes IDDrv = 3;</code>
       * @return The iDDrv.
       */
      com.google.protobuf.ByteString getIDDrv();

      /**
       * <pre>
       *[1] Общие флаги состояния
       * </pre>
       *
       * <code>optional uint32 FLG = 4;</code>
       * @return Whether the fLG field is set.
       */
      boolean hasFLG();
      /**
       * <pre>
       *[1] Общие флаги состояния
       * </pre>
       *
       * <code>optional uint32 FLG = 4;</code>
       * @return The fLG.
       */
      int getFLG();

      /**
       * <pre>
       * Битовая маска:
       *0 бит = Положение ключа зажигания
       *0 – зажигание выключено, 
       *1 – зажигание включено.
       *1 бит = Наличие связи GSM	
       *0 – Нет связи,
       *1 – Есть связь.
       *2 бит = Корректность данных GPS	
       *0 – Данные некорректны, 
       *1 – Данные корректны.
       *3 бит = Нахождение в роуминге	
       *0 – В домашней сети, 
       *1 – В роуминге.
       *4 бит = Состояние питания	
       *0 – Внешнее питание, 
       *1 – Резервное питание.
       *5 бит = Тревожная кнопка (текущее состояние кнопки)	
       *0 – Кнопка отжата, 
       *1 – Кнопка нажата.
       *6 бит = Вскрытие устройства	
       *0 – Устройство закрыто, 
       *1 – Устройство открыто.
       *7 бит = Состояние дискретного выхода	
       *0 – Выключен, 
       *1 – Включен.
       *8 бит = Кнопка голосового вызова
       *0 - Кнопка отжата
       *1 - Кнопка нажата
       *9 бит = глушение GPS
       *0 – Выключен, 
       *1 – Включен.                    
       *10 бит = глушение GSM
       *0 – Выключен, 
       *1 – Включен.
       *11 бит = неисправность аккумулятора
       *0 – Нет, 
       *1 – Да.
       * </pre>
       *
       * <code>optional uint32 Mileage = 5;</code>
       * @return Whether the mileage field is set.
       */
      boolean hasMileage();
      /**
       * <pre>
       * Битовая маска:
       *0 бит = Положение ключа зажигания
       *0 – зажигание выключено, 
       *1 – зажигание включено.
       *1 бит = Наличие связи GSM	
       *0 – Нет связи,
       *1 – Есть связь.
       *2 бит = Корректность данных GPS	
       *0 – Данные некорректны, 
       *1 – Данные корректны.
       *3 бит = Нахождение в роуминге	
       *0 – В домашней сети, 
       *1 – В роуминге.
       *4 бит = Состояние питания	
       *0 – Внешнее питание, 
       *1 – Резервное питание.
       *5 бит = Тревожная кнопка (текущее состояние кнопки)	
       *0 – Кнопка отжата, 
       *1 – Кнопка нажата.
       *6 бит = Вскрытие устройства	
       *0 – Устройство закрыто, 
       *1 – Устройство открыто.
       *7 бит = Состояние дискретного выхода	
       *0 – Выключен, 
       *1 – Включен.
       *8 бит = Кнопка голосового вызова
       *0 - Кнопка отжата
       *1 - Кнопка нажата
       *9 бит = глушение GPS
       *0 – Выключен, 
       *1 – Включен.                    
       *10 бит = глушение GSM
       *0 – Выключен, 
       *1 – Включен.
       *11 бит = неисправность аккумулятора
       *0 – Нет, 
       *1 – Да.
       * </pre>
       *
       * <code>optional uint32 Mileage = 5;</code>
       * @return The mileage.
       */
      int getMileage();

      /**
       * <pre>
       *[2] Скорость по датчику (1LSB = 1км/ч)
       * </pre>
       *
       * <code>optional uint32 VImp = 6;</code>
       * @return Whether the vImp field is set.
       */
      boolean hasVImp();
      /**
       * <pre>
       *[2] Скорость по датчику (1LSB = 1км/ч)
       * </pre>
       *
       * <code>optional uint32 VImp = 6;</code>
       * @return The vImp.
       */
      int getVImp();

      /**
       * <pre>
       *[2] Обороты по датчику (1LSB = 1об./мин.)
       * </pre>
       *
       * <code>optional uint32 TImp = 7;</code>
       * @return Whether the tImp field is set.
       */
      boolean hasTImp();
      /**
       * <pre>
       *[2] Обороты по датчику (1LSB = 1об./мин.)
       * </pre>
       *
       * <code>optional uint32 TImp = 7;</code>
       * @return The tImp.
       */
      int getTImp();

      /**
       * <pre>
       *[4] Напряжение питания (1LSB = 0.1В)
       * </pre>
       *
       * <code>optional uint32 Uboard = 8;</code>
       * @return Whether the uboard field is set.
       */
      boolean hasUboard();
      /**
       * <pre>
       *[4] Напряжение питания (1LSB = 0.1В)
       * </pre>
       *
       * <code>optional uint32 Uboard = 8;</code>
       * @return The uboard.
       */
      int getUboard();

      /**
       * <pre>
       *[4] Уровень заряда аккумулятора (1LSB = 1%)
       * </pre>
       *
       * <code>optional uint32 BatLife = 9;</code>
       * @return Whether the batLife field is set.
       */
      boolean hasBatLife();
      /**
       * <pre>
       *[4] Уровень заряда аккумулятора (1LSB = 1%)
       * </pre>
       *
       * <code>optional uint32 BatLife = 9;</code>
       * @return The batLife.
       */
      int getBatLife();

      /**
       * <pre>
       *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
       * </pre>
       *
       * <code>optional sint32 SumAcc = 10;</code>
       * @return Whether the sumAcc field is set.
       */
      boolean hasSumAcc();
      /**
       * <pre>
       *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
       * </pre>
       *
       * <code>optional sint32 SumAcc = 10;</code>
       * @return The sumAcc.
       */
      int getSumAcc();

      /**
       * <pre>
       *[6] Номер вызывающего или вызываемого абонента
       * </pre>
       *
       * <code>optional bytes Phone = 11;</code>
       * @return Whether the phone field is set.
       */
      boolean hasPhone();
      /**
       * <pre>
       *[6] Номер вызывающего или вызываемого абонента
       * </pre>
       *
       * <code>optional bytes Phone = 11;</code>
       * @return The phone.
       */
      com.google.protobuf.ByteString getPhone();

      /**
       * <pre>
       *[4] Ускорение по оси X
       * </pre>
       *
       * <code>optional sint32 AmtrX = 12;</code>
       * @return Whether the amtrX field is set.
       */
      boolean hasAmtrX();
      /**
       * <pre>
       *[4] Ускорение по оси X
       * </pre>
       *
       * <code>optional sint32 AmtrX = 12;</code>
       * @return The amtrX.
       */
      int getAmtrX();

      /**
       * <pre>
       *[4] Ускорение по оси Y
       * </pre>
       *
       * <code>optional sint32 AmtrY = 13;</code>
       * @return Whether the amtrY field is set.
       */
      boolean hasAmtrY();
      /**
       * <pre>
       *[4] Ускорение по оси Y
       * </pre>
       *
       * <code>optional sint32 AmtrY = 13;</code>
       * @return The amtrY.
       */
      int getAmtrY();

      /**
       * <pre>
       *[4] Ускорение по оси Z
       * </pre>
       *
       * <code>optional sint32 AmtrZ = 14;</code>
       * @return Whether the amtrZ field is set.
       */
      boolean hasAmtrZ();
      /**
       * <pre>
       *[4] Ускорение по оси Z
       * </pre>
       *
       * <code>optional sint32 AmtrZ = 14;</code>
       * @return The amtrZ.
       */
      int getAmtrZ();

      /**
       * <pre>
       *[16] ID карты тахографа (16 байт)
       * </pre>
       *
       * <code>optional bytes TachoCardID = 15;</code>
       * @return Whether the tachoCardID field is set.
       */
      boolean hasTachoCardID();
      /**
       * <pre>
       *[16] ID карты тахографа (16 байт)
       * </pre>
       *
       * <code>optional bytes TachoCardID = 15;</code>
       * @return The tachoCardID.
       */
      com.google.protobuf.ByteString getTachoCardID();

      /**
       * <pre>
       *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
       * </pre>
       *
       * <code>optional uint32 AccelStatus = 16;</code>
       * @return Whether the accelStatus field is set.
       */
      boolean hasAccelStatus();
      /**
       * <pre>
       *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
       * </pre>
       *
       * <code>optional uint32 AccelStatus = 16;</code>
       * @return The accelStatus.
       */
      int getAccelStatus();

      /**
       * <pre>
       * Моточасы с использование коэффициента
       * </pre>
       *
       * <code>optional uint32 HoursKoef = 17;</code>
       * @return Whether the hoursKoef field is set.
       */
      boolean hasHoursKoef();
      /**
       * <pre>
       * Моточасы с использование коэффициента
       * </pre>
       *
       * <code>optional uint32 HoursKoef = 17;</code>
       * @return The hoursKoef.
       */
      int getHoursKoef();

      /**
       * <pre>
       * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 GsmSignalQuality = 18;</code>
       * @return Whether the gsmSignalQuality field is set.
       */
      boolean hasGsmSignalQuality();
      /**
       * <pre>
       * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 GsmSignalQuality = 18;</code>
       * @return The gsmSignalQuality.
       */
      int getGsmSignalQuality();

      /**
       * <pre>
       * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 WifiSignalQuality = 19;</code>
       * @return Whether the wifiSignalQuality field is set.
       */
      boolean hasWifiSignalQuality();
      /**
       * <pre>
       * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 WifiSignalQuality = 19;</code>
       * @return The wifiSignalQuality.
       */
      int getWifiSignalQuality();
    }
    /**
     * <pre>
     * Основные параметры
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.General}
     */
    public static final class General extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.General)
        GeneralOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use General.newBuilder() to construct.
      private General(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private General() {
        iDDrv_ = com.google.protobuf.ByteString.EMPTY;
        phone_ = com.google.protobuf.ByteString.EMPTY;
        tachoCardID_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new General();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder.class);
      }

      private int bitField0_;
      public static final int TIME_FIELD_NUMBER = 1;
      private int time_ = 0;
      /**
       * <pre>
       *[4] Время/дата события (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 Time = 1;</code>
       * @return Whether the time field is set.
       */
      @java.lang.Override
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[4] Время/дата события (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 Time = 1;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return time_;
      }

      public static final int IDFAS_FIELD_NUMBER = 2;
      private int iDFAS_ = 0;
      /**
       * <pre>
       *[4] Идентификатор бортового оборудования
       * </pre>
       *
       * <code>optional uint32 IDFAS = 2;</code>
       * @return Whether the iDFAS field is set.
       */
      @java.lang.Override
      public boolean hasIDFAS() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *[4] Идентификатор бортового оборудования
       * </pre>
       *
       * <code>optional uint32 IDFAS = 2;</code>
       * @return The iDFAS.
       */
      @java.lang.Override
      public int getIDFAS() {
        return iDFAS_;
      }

      public static final int IDDRV_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString iDDrv_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *[8] ID iButton (8 байт)
       * </pre>
       *
       * <code>optional bytes IDDrv = 3;</code>
       * @return Whether the iDDrv field is set.
       */
      @java.lang.Override
      public boolean hasIDDrv() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *[8] ID iButton (8 байт)
       * </pre>
       *
       * <code>optional bytes IDDrv = 3;</code>
       * @return The iDDrv.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIDDrv() {
        return iDDrv_;
      }

      public static final int FLG_FIELD_NUMBER = 4;
      private int fLG_ = 0;
      /**
       * <pre>
       *[1] Общие флаги состояния
       * </pre>
       *
       * <code>optional uint32 FLG = 4;</code>
       * @return Whether the fLG field is set.
       */
      @java.lang.Override
      public boolean hasFLG() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[1] Общие флаги состояния
       * </pre>
       *
       * <code>optional uint32 FLG = 4;</code>
       * @return The fLG.
       */
      @java.lang.Override
      public int getFLG() {
        return fLG_;
      }

      public static final int MILEAGE_FIELD_NUMBER = 5;
      private int mileage_ = 0;
      /**
       * <pre>
       * Битовая маска:
       *0 бит = Положение ключа зажигания
       *0 – зажигание выключено, 
       *1 – зажигание включено.
       *1 бит = Наличие связи GSM	
       *0 – Нет связи,
       *1 – Есть связь.
       *2 бит = Корректность данных GPS	
       *0 – Данные некорректны, 
       *1 – Данные корректны.
       *3 бит = Нахождение в роуминге	
       *0 – В домашней сети, 
       *1 – В роуминге.
       *4 бит = Состояние питания	
       *0 – Внешнее питание, 
       *1 – Резервное питание.
       *5 бит = Тревожная кнопка (текущее состояние кнопки)	
       *0 – Кнопка отжата, 
       *1 – Кнопка нажата.
       *6 бит = Вскрытие устройства	
       *0 – Устройство закрыто, 
       *1 – Устройство открыто.
       *7 бит = Состояние дискретного выхода	
       *0 – Выключен, 
       *1 – Включен.
       *8 бит = Кнопка голосового вызова
       *0 - Кнопка отжата
       *1 - Кнопка нажата
       *9 бит = глушение GPS
       *0 – Выключен, 
       *1 – Включен.                    
       *10 бит = глушение GSM
       *0 – Выключен, 
       *1 – Включен.
       *11 бит = неисправность аккумулятора
       *0 – Нет, 
       *1 – Да.
       * </pre>
       *
       * <code>optional uint32 Mileage = 5;</code>
       * @return Whether the mileage field is set.
       */
      @java.lang.Override
      public boolean hasMileage() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Битовая маска:
       *0 бит = Положение ключа зажигания
       *0 – зажигание выключено, 
       *1 – зажигание включено.
       *1 бит = Наличие связи GSM	
       *0 – Нет связи,
       *1 – Есть связь.
       *2 бит = Корректность данных GPS	
       *0 – Данные некорректны, 
       *1 – Данные корректны.
       *3 бит = Нахождение в роуминге	
       *0 – В домашней сети, 
       *1 – В роуминге.
       *4 бит = Состояние питания	
       *0 – Внешнее питание, 
       *1 – Резервное питание.
       *5 бит = Тревожная кнопка (текущее состояние кнопки)	
       *0 – Кнопка отжата, 
       *1 – Кнопка нажата.
       *6 бит = Вскрытие устройства	
       *0 – Устройство закрыто, 
       *1 – Устройство открыто.
       *7 бит = Состояние дискретного выхода	
       *0 – Выключен, 
       *1 – Включен.
       *8 бит = Кнопка голосового вызова
       *0 - Кнопка отжата
       *1 - Кнопка нажата
       *9 бит = глушение GPS
       *0 – Выключен, 
       *1 – Включен.                    
       *10 бит = глушение GSM
       *0 – Выключен, 
       *1 – Включен.
       *11 бит = неисправность аккумулятора
       *0 – Нет, 
       *1 – Да.
       * </pre>
       *
       * <code>optional uint32 Mileage = 5;</code>
       * @return The mileage.
       */
      @java.lang.Override
      public int getMileage() {
        return mileage_;
      }

      public static final int VIMP_FIELD_NUMBER = 6;
      private int vImp_ = 0;
      /**
       * <pre>
       *[2] Скорость по датчику (1LSB = 1км/ч)
       * </pre>
       *
       * <code>optional uint32 VImp = 6;</code>
       * @return Whether the vImp field is set.
       */
      @java.lang.Override
      public boolean hasVImp() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *[2] Скорость по датчику (1LSB = 1км/ч)
       * </pre>
       *
       * <code>optional uint32 VImp = 6;</code>
       * @return The vImp.
       */
      @java.lang.Override
      public int getVImp() {
        return vImp_;
      }

      public static final int TIMP_FIELD_NUMBER = 7;
      private int tImp_ = 0;
      /**
       * <pre>
       *[2] Обороты по датчику (1LSB = 1об./мин.)
       * </pre>
       *
       * <code>optional uint32 TImp = 7;</code>
       * @return Whether the tImp field is set.
       */
      @java.lang.Override
      public boolean hasTImp() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *[2] Обороты по датчику (1LSB = 1об./мин.)
       * </pre>
       *
       * <code>optional uint32 TImp = 7;</code>
       * @return The tImp.
       */
      @java.lang.Override
      public int getTImp() {
        return tImp_;
      }

      public static final int UBOARD_FIELD_NUMBER = 8;
      private int uboard_ = 0;
      /**
       * <pre>
       *[4] Напряжение питания (1LSB = 0.1В)
       * </pre>
       *
       * <code>optional uint32 Uboard = 8;</code>
       * @return Whether the uboard field is set.
       */
      @java.lang.Override
      public boolean hasUboard() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *[4] Напряжение питания (1LSB = 0.1В)
       * </pre>
       *
       * <code>optional uint32 Uboard = 8;</code>
       * @return The uboard.
       */
      @java.lang.Override
      public int getUboard() {
        return uboard_;
      }

      public static final int BATLIFE_FIELD_NUMBER = 9;
      private int batLife_ = 0;
      /**
       * <pre>
       *[4] Уровень заряда аккумулятора (1LSB = 1%)
       * </pre>
       *
       * <code>optional uint32 BatLife = 9;</code>
       * @return Whether the batLife field is set.
       */
      @java.lang.Override
      public boolean hasBatLife() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *[4] Уровень заряда аккумулятора (1LSB = 1%)
       * </pre>
       *
       * <code>optional uint32 BatLife = 9;</code>
       * @return The batLife.
       */
      @java.lang.Override
      public int getBatLife() {
        return batLife_;
      }

      public static final int SUMACC_FIELD_NUMBER = 10;
      private int sumAcc_ = 0;
      /**
       * <pre>
       *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
       * </pre>
       *
       * <code>optional sint32 SumAcc = 10;</code>
       * @return Whether the sumAcc field is set.
       */
      @java.lang.Override
      public boolean hasSumAcc() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
       * </pre>
       *
       * <code>optional sint32 SumAcc = 10;</code>
       * @return The sumAcc.
       */
      @java.lang.Override
      public int getSumAcc() {
        return sumAcc_;
      }

      public static final int PHONE_FIELD_NUMBER = 11;
      private com.google.protobuf.ByteString phone_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *[6] Номер вызывающего или вызываемого абонента
       * </pre>
       *
       * <code>optional bytes Phone = 11;</code>
       * @return Whether the phone field is set.
       */
      @java.lang.Override
      public boolean hasPhone() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *[6] Номер вызывающего или вызываемого абонента
       * </pre>
       *
       * <code>optional bytes Phone = 11;</code>
       * @return The phone.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPhone() {
        return phone_;
      }

      public static final int AMTRX_FIELD_NUMBER = 12;
      private int amtrX_ = 0;
      /**
       * <pre>
       *[4] Ускорение по оси X
       * </pre>
       *
       * <code>optional sint32 AmtrX = 12;</code>
       * @return Whether the amtrX field is set.
       */
      @java.lang.Override
      public boolean hasAmtrX() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *[4] Ускорение по оси X
       * </pre>
       *
       * <code>optional sint32 AmtrX = 12;</code>
       * @return The amtrX.
       */
      @java.lang.Override
      public int getAmtrX() {
        return amtrX_;
      }

      public static final int AMTRY_FIELD_NUMBER = 13;
      private int amtrY_ = 0;
      /**
       * <pre>
       *[4] Ускорение по оси Y
       * </pre>
       *
       * <code>optional sint32 AmtrY = 13;</code>
       * @return Whether the amtrY field is set.
       */
      @java.lang.Override
      public boolean hasAmtrY() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       *[4] Ускорение по оси Y
       * </pre>
       *
       * <code>optional sint32 AmtrY = 13;</code>
       * @return The amtrY.
       */
      @java.lang.Override
      public int getAmtrY() {
        return amtrY_;
      }

      public static final int AMTRZ_FIELD_NUMBER = 14;
      private int amtrZ_ = 0;
      /**
       * <pre>
       *[4] Ускорение по оси Z
       * </pre>
       *
       * <code>optional sint32 AmtrZ = 14;</code>
       * @return Whether the amtrZ field is set.
       */
      @java.lang.Override
      public boolean hasAmtrZ() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       *[4] Ускорение по оси Z
       * </pre>
       *
       * <code>optional sint32 AmtrZ = 14;</code>
       * @return The amtrZ.
       */
      @java.lang.Override
      public int getAmtrZ() {
        return amtrZ_;
      }

      public static final int TACHOCARDID_FIELD_NUMBER = 15;
      private com.google.protobuf.ByteString tachoCardID_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *[16] ID карты тахографа (16 байт)
       * </pre>
       *
       * <code>optional bytes TachoCardID = 15;</code>
       * @return Whether the tachoCardID field is set.
       */
      @java.lang.Override
      public boolean hasTachoCardID() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       *[16] ID карты тахографа (16 байт)
       * </pre>
       *
       * <code>optional bytes TachoCardID = 15;</code>
       * @return The tachoCardID.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTachoCardID() {
        return tachoCardID_;
      }

      public static final int ACCELSTATUS_FIELD_NUMBER = 16;
      private int accelStatus_ = 0;
      /**
       * <pre>
       *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
       * </pre>
       *
       * <code>optional uint32 AccelStatus = 16;</code>
       * @return Whether the accelStatus field is set.
       */
      @java.lang.Override
      public boolean hasAccelStatus() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
       * </pre>
       *
       * <code>optional uint32 AccelStatus = 16;</code>
       * @return The accelStatus.
       */
      @java.lang.Override
      public int getAccelStatus() {
        return accelStatus_;
      }

      public static final int HOURSKOEF_FIELD_NUMBER = 17;
      private int hoursKoef_ = 0;
      /**
       * <pre>
       * Моточасы с использование коэффициента
       * </pre>
       *
       * <code>optional uint32 HoursKoef = 17;</code>
       * @return Whether the hoursKoef field is set.
       */
      @java.lang.Override
      public boolean hasHoursKoef() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       * Моточасы с использование коэффициента
       * </pre>
       *
       * <code>optional uint32 HoursKoef = 17;</code>
       * @return The hoursKoef.
       */
      @java.lang.Override
      public int getHoursKoef() {
        return hoursKoef_;
      }

      public static final int GSMSIGNALQUALITY_FIELD_NUMBER = 18;
      private int gsmSignalQuality_ = 0;
      /**
       * <pre>
       * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 GsmSignalQuality = 18;</code>
       * @return Whether the gsmSignalQuality field is set.
       */
      @java.lang.Override
      public boolean hasGsmSignalQuality() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 GsmSignalQuality = 18;</code>
       * @return The gsmSignalQuality.
       */
      @java.lang.Override
      public int getGsmSignalQuality() {
        return gsmSignalQuality_;
      }

      public static final int WIFISIGNALQUALITY_FIELD_NUMBER = 19;
      private int wifiSignalQuality_ = 0;
      /**
       * <pre>
       * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 WifiSignalQuality = 19;</code>
       * @return Whether the wifiSignalQuality field is set.
       */
      @java.lang.Override
      public boolean hasWifiSignalQuality() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
       * </pre>
       *
       * <code>optional uint32 WifiSignalQuality = 19;</code>
       * @return The wifiSignalQuality.
       */
      @java.lang.Override
      public int getWifiSignalQuality() {
        return wifiSignalQuality_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, time_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, iDFAS_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBytes(3, iDDrv_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, fLG_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, mileage_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, vImp_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(7, tImp_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(8, uboard_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeUInt32(9, batLife_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeSInt32(10, sumAcc_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeBytes(11, phone_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeSInt32(12, amtrX_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeSInt32(13, amtrY_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          output.writeSInt32(14, amtrZ_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          output.writeBytes(15, tachoCardID_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          output.writeUInt32(16, accelStatus_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          output.writeUInt32(17, hoursKoef_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          output.writeUInt32(18, gsmSignalQuality_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          output.writeUInt32(19, wifiSignalQuality_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, time_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, iDFAS_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, iDDrv_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, fLG_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, mileage_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, vImp_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, tImp_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, uboard_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, batLife_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(10, sumAcc_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(11, phone_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(12, amtrX_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(13, amtrY_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(14, amtrZ_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(15, tachoCardID_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(16, accelStatus_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(17, hoursKoef_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(18, gsmSignalQuality_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(19, wifiSignalQuality_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General) obj;

        if (hasTime() != other.hasTime()) return false;
        if (hasTime()) {
          if (getTime()
              != other.getTime()) return false;
        }
        if (hasIDFAS() != other.hasIDFAS()) return false;
        if (hasIDFAS()) {
          if (getIDFAS()
              != other.getIDFAS()) return false;
        }
        if (hasIDDrv() != other.hasIDDrv()) return false;
        if (hasIDDrv()) {
          if (!getIDDrv()
              .equals(other.getIDDrv())) return false;
        }
        if (hasFLG() != other.hasFLG()) return false;
        if (hasFLG()) {
          if (getFLG()
              != other.getFLG()) return false;
        }
        if (hasMileage() != other.hasMileage()) return false;
        if (hasMileage()) {
          if (getMileage()
              != other.getMileage()) return false;
        }
        if (hasVImp() != other.hasVImp()) return false;
        if (hasVImp()) {
          if (getVImp()
              != other.getVImp()) return false;
        }
        if (hasTImp() != other.hasTImp()) return false;
        if (hasTImp()) {
          if (getTImp()
              != other.getTImp()) return false;
        }
        if (hasUboard() != other.hasUboard()) return false;
        if (hasUboard()) {
          if (getUboard()
              != other.getUboard()) return false;
        }
        if (hasBatLife() != other.hasBatLife()) return false;
        if (hasBatLife()) {
          if (getBatLife()
              != other.getBatLife()) return false;
        }
        if (hasSumAcc() != other.hasSumAcc()) return false;
        if (hasSumAcc()) {
          if (getSumAcc()
              != other.getSumAcc()) return false;
        }
        if (hasPhone() != other.hasPhone()) return false;
        if (hasPhone()) {
          if (!getPhone()
              .equals(other.getPhone())) return false;
        }
        if (hasAmtrX() != other.hasAmtrX()) return false;
        if (hasAmtrX()) {
          if (getAmtrX()
              != other.getAmtrX()) return false;
        }
        if (hasAmtrY() != other.hasAmtrY()) return false;
        if (hasAmtrY()) {
          if (getAmtrY()
              != other.getAmtrY()) return false;
        }
        if (hasAmtrZ() != other.hasAmtrZ()) return false;
        if (hasAmtrZ()) {
          if (getAmtrZ()
              != other.getAmtrZ()) return false;
        }
        if (hasTachoCardID() != other.hasTachoCardID()) return false;
        if (hasTachoCardID()) {
          if (!getTachoCardID()
              .equals(other.getTachoCardID())) return false;
        }
        if (hasAccelStatus() != other.hasAccelStatus()) return false;
        if (hasAccelStatus()) {
          if (getAccelStatus()
              != other.getAccelStatus()) return false;
        }
        if (hasHoursKoef() != other.hasHoursKoef()) return false;
        if (hasHoursKoef()) {
          if (getHoursKoef()
              != other.getHoursKoef()) return false;
        }
        if (hasGsmSignalQuality() != other.hasGsmSignalQuality()) return false;
        if (hasGsmSignalQuality()) {
          if (getGsmSignalQuality()
              != other.getGsmSignalQuality()) return false;
        }
        if (hasWifiSignalQuality() != other.hasWifiSignalQuality()) return false;
        if (hasWifiSignalQuality()) {
          if (getWifiSignalQuality()
              != other.getWifiSignalQuality()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTime()) {
          hash = (37 * hash) + TIME_FIELD_NUMBER;
          hash = (53 * hash) + getTime();
        }
        if (hasIDFAS()) {
          hash = (37 * hash) + IDFAS_FIELD_NUMBER;
          hash = (53 * hash) + getIDFAS();
        }
        if (hasIDDrv()) {
          hash = (37 * hash) + IDDRV_FIELD_NUMBER;
          hash = (53 * hash) + getIDDrv().hashCode();
        }
        if (hasFLG()) {
          hash = (37 * hash) + FLG_FIELD_NUMBER;
          hash = (53 * hash) + getFLG();
        }
        if (hasMileage()) {
          hash = (37 * hash) + MILEAGE_FIELD_NUMBER;
          hash = (53 * hash) + getMileage();
        }
        if (hasVImp()) {
          hash = (37 * hash) + VIMP_FIELD_NUMBER;
          hash = (53 * hash) + getVImp();
        }
        if (hasTImp()) {
          hash = (37 * hash) + TIMP_FIELD_NUMBER;
          hash = (53 * hash) + getTImp();
        }
        if (hasUboard()) {
          hash = (37 * hash) + UBOARD_FIELD_NUMBER;
          hash = (53 * hash) + getUboard();
        }
        if (hasBatLife()) {
          hash = (37 * hash) + BATLIFE_FIELD_NUMBER;
          hash = (53 * hash) + getBatLife();
        }
        if (hasSumAcc()) {
          hash = (37 * hash) + SUMACC_FIELD_NUMBER;
          hash = (53 * hash) + getSumAcc();
        }
        if (hasPhone()) {
          hash = (37 * hash) + PHONE_FIELD_NUMBER;
          hash = (53 * hash) + getPhone().hashCode();
        }
        if (hasAmtrX()) {
          hash = (37 * hash) + AMTRX_FIELD_NUMBER;
          hash = (53 * hash) + getAmtrX();
        }
        if (hasAmtrY()) {
          hash = (37 * hash) + AMTRY_FIELD_NUMBER;
          hash = (53 * hash) + getAmtrY();
        }
        if (hasAmtrZ()) {
          hash = (37 * hash) + AMTRZ_FIELD_NUMBER;
          hash = (53 * hash) + getAmtrZ();
        }
        if (hasTachoCardID()) {
          hash = (37 * hash) + TACHOCARDID_FIELD_NUMBER;
          hash = (53 * hash) + getTachoCardID().hashCode();
        }
        if (hasAccelStatus()) {
          hash = (37 * hash) + ACCELSTATUS_FIELD_NUMBER;
          hash = (53 * hash) + getAccelStatus();
        }
        if (hasHoursKoef()) {
          hash = (37 * hash) + HOURSKOEF_FIELD_NUMBER;
          hash = (53 * hash) + getHoursKoef();
        }
        if (hasGsmSignalQuality()) {
          hash = (37 * hash) + GSMSIGNALQUALITY_FIELD_NUMBER;
          hash = (53 * hash) + getGsmSignalQuality();
        }
        if (hasWifiSignalQuality()) {
          hash = (37 * hash) + WIFISIGNALQUALITY_FIELD_NUMBER;
          hash = (53 * hash) + getWifiSignalQuality();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Основные параметры
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.General}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.General)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          time_ = 0;
          iDFAS_ = 0;
          iDDrv_ = com.google.protobuf.ByteString.EMPTY;
          fLG_ = 0;
          mileage_ = 0;
          vImp_ = 0;
          tImp_ = 0;
          uboard_ = 0;
          batLife_ = 0;
          sumAcc_ = 0;
          phone_ = com.google.protobuf.ByteString.EMPTY;
          amtrX_ = 0;
          amtrY_ = 0;
          amtrZ_ = 0;
          tachoCardID_ = com.google.protobuf.ByteString.EMPTY;
          accelStatus_ = 0;
          hoursKoef_ = 0;
          gsmSignalQuality_ = 0;
          wifiSignalQuality_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.time_ = time_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.iDFAS_ = iDFAS_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.iDDrv_ = iDDrv_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.fLG_ = fLG_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.mileage_ = mileage_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.vImp_ = vImp_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.tImp_ = tImp_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.uboard_ = uboard_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.batLife_ = batLife_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.sumAcc_ = sumAcc_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.phone_ = phone_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.amtrX_ = amtrX_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.amtrY_ = amtrY_;
            to_bitField0_ |= 0x00001000;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.amtrZ_ = amtrZ_;
            to_bitField0_ |= 0x00002000;
          }
          if (((from_bitField0_ & 0x00004000) != 0)) {
            result.tachoCardID_ = tachoCardID_;
            to_bitField0_ |= 0x00004000;
          }
          if (((from_bitField0_ & 0x00008000) != 0)) {
            result.accelStatus_ = accelStatus_;
            to_bitField0_ |= 0x00008000;
          }
          if (((from_bitField0_ & 0x00010000) != 0)) {
            result.hoursKoef_ = hoursKoef_;
            to_bitField0_ |= 0x00010000;
          }
          if (((from_bitField0_ & 0x00020000) != 0)) {
            result.gsmSignalQuality_ = gsmSignalQuality_;
            to_bitField0_ |= 0x00020000;
          }
          if (((from_bitField0_ & 0x00040000) != 0)) {
            result.wifiSignalQuality_ = wifiSignalQuality_;
            to_bitField0_ |= 0x00040000;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance()) return this;
          if (other.hasTime()) {
            setTime(other.getTime());
          }
          if (other.hasIDFAS()) {
            setIDFAS(other.getIDFAS());
          }
          if (other.hasIDDrv()) {
            setIDDrv(other.getIDDrv());
          }
          if (other.hasFLG()) {
            setFLG(other.getFLG());
          }
          if (other.hasMileage()) {
            setMileage(other.getMileage());
          }
          if (other.hasVImp()) {
            setVImp(other.getVImp());
          }
          if (other.hasTImp()) {
            setTImp(other.getTImp());
          }
          if (other.hasUboard()) {
            setUboard(other.getUboard());
          }
          if (other.hasBatLife()) {
            setBatLife(other.getBatLife());
          }
          if (other.hasSumAcc()) {
            setSumAcc(other.getSumAcc());
          }
          if (other.hasPhone()) {
            setPhone(other.getPhone());
          }
          if (other.hasAmtrX()) {
            setAmtrX(other.getAmtrX());
          }
          if (other.hasAmtrY()) {
            setAmtrY(other.getAmtrY());
          }
          if (other.hasAmtrZ()) {
            setAmtrZ(other.getAmtrZ());
          }
          if (other.hasTachoCardID()) {
            setTachoCardID(other.getTachoCardID());
          }
          if (other.hasAccelStatus()) {
            setAccelStatus(other.getAccelStatus());
          }
          if (other.hasHoursKoef()) {
            setHoursKoef(other.getHoursKoef());
          }
          if (other.hasGsmSignalQuality()) {
            setGsmSignalQuality(other.getGsmSignalQuality());
          }
          if (other.hasWifiSignalQuality()) {
            setWifiSignalQuality(other.getWifiSignalQuality());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  time_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  iDFAS_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 26: {
                  iDDrv_ = input.readBytes();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                case 32: {
                  fLG_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  mileage_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  vImp_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  tImp_ = input.readUInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  uboard_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                case 72: {
                  batLife_ = input.readUInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                case 80: {
                  sumAcc_ = input.readSInt32();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 80
                case 90: {
                  phone_ = input.readBytes();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 90
                case 96: {
                  amtrX_ = input.readSInt32();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 96
                case 104: {
                  amtrY_ = input.readSInt32();
                  bitField0_ |= 0x00001000;
                  break;
                } // case 104
                case 112: {
                  amtrZ_ = input.readSInt32();
                  bitField0_ |= 0x00002000;
                  break;
                } // case 112
                case 122: {
                  tachoCardID_ = input.readBytes();
                  bitField0_ |= 0x00004000;
                  break;
                } // case 122
                case 128: {
                  accelStatus_ = input.readUInt32();
                  bitField0_ |= 0x00008000;
                  break;
                } // case 128
                case 136: {
                  hoursKoef_ = input.readUInt32();
                  bitField0_ |= 0x00010000;
                  break;
                } // case 136
                case 144: {
                  gsmSignalQuality_ = input.readUInt32();
                  bitField0_ |= 0x00020000;
                  break;
                } // case 144
                case 152: {
                  wifiSignalQuality_ = input.readUInt32();
                  bitField0_ |= 0x00040000;
                  break;
                } // case 152
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int time_ ;
        /**
         * <pre>
         *[4] Время/дата события (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 Time = 1;</code>
         * @return Whether the time field is set.
         */
        @java.lang.Override
        public boolean hasTime() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[4] Время/дата события (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 Time = 1;</code>
         * @return The time.
         */
        @java.lang.Override
        public int getTime() {
          return time_;
        }
        /**
         * <pre>
         *[4] Время/дата события (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 Time = 1;</code>
         * @param value The time to set.
         * @return This builder for chaining.
         */
        public Builder setTime(int value) {

          time_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Время/дата события (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 Time = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          time_ = 0;
          onChanged();
          return this;
        }

        private int iDFAS_ ;
        /**
         * <pre>
         *[4] Идентификатор бортового оборудования
         * </pre>
         *
         * <code>optional uint32 IDFAS = 2;</code>
         * @return Whether the iDFAS field is set.
         */
        @java.lang.Override
        public boolean hasIDFAS() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[4] Идентификатор бортового оборудования
         * </pre>
         *
         * <code>optional uint32 IDFAS = 2;</code>
         * @return The iDFAS.
         */
        @java.lang.Override
        public int getIDFAS() {
          return iDFAS_;
        }
        /**
         * <pre>
         *[4] Идентификатор бортового оборудования
         * </pre>
         *
         * <code>optional uint32 IDFAS = 2;</code>
         * @param value The iDFAS to set.
         * @return This builder for chaining.
         */
        public Builder setIDFAS(int value) {

          iDFAS_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Идентификатор бортового оборудования
         * </pre>
         *
         * <code>optional uint32 IDFAS = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearIDFAS() {
          bitField0_ = (bitField0_ & ~0x00000002);
          iDFAS_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString iDDrv_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[8] ID iButton (8 байт)
         * </pre>
         *
         * <code>optional bytes IDDrv = 3;</code>
         * @return Whether the iDDrv field is set.
         */
        @java.lang.Override
        public boolean hasIDDrv() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[8] ID iButton (8 байт)
         * </pre>
         *
         * <code>optional bytes IDDrv = 3;</code>
         * @return The iDDrv.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getIDDrv() {
          return iDDrv_;
        }
        /**
         * <pre>
         *[8] ID iButton (8 байт)
         * </pre>
         *
         * <code>optional bytes IDDrv = 3;</code>
         * @param value The iDDrv to set.
         * @return This builder for chaining.
         */
        public Builder setIDDrv(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          iDDrv_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[8] ID iButton (8 байт)
         * </pre>
         *
         * <code>optional bytes IDDrv = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearIDDrv() {
          bitField0_ = (bitField0_ & ~0x00000004);
          iDDrv_ = getDefaultInstance().getIDDrv();
          onChanged();
          return this;
        }

        private int fLG_ ;
        /**
         * <pre>
         *[1] Общие флаги состояния
         * </pre>
         *
         * <code>optional uint32 FLG = 4;</code>
         * @return Whether the fLG field is set.
         */
        @java.lang.Override
        public boolean hasFLG() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[1] Общие флаги состояния
         * </pre>
         *
         * <code>optional uint32 FLG = 4;</code>
         * @return The fLG.
         */
        @java.lang.Override
        public int getFLG() {
          return fLG_;
        }
        /**
         * <pre>
         *[1] Общие флаги состояния
         * </pre>
         *
         * <code>optional uint32 FLG = 4;</code>
         * @param value The fLG to set.
         * @return This builder for chaining.
         */
        public Builder setFLG(int value) {

          fLG_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] Общие флаги состояния
         * </pre>
         *
         * <code>optional uint32 FLG = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLG() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fLG_ = 0;
          onChanged();
          return this;
        }

        private int mileage_ ;
        /**
         * <pre>
         * Битовая маска:
         *0 бит = Положение ключа зажигания
         *0 – зажигание выключено, 
         *1 – зажигание включено.
         *1 бит = Наличие связи GSM	
         *0 – Нет связи,
         *1 – Есть связь.
         *2 бит = Корректность данных GPS	
         *0 – Данные некорректны, 
         *1 – Данные корректны.
         *3 бит = Нахождение в роуминге	
         *0 – В домашней сети, 
         *1 – В роуминге.
         *4 бит = Состояние питания	
         *0 – Внешнее питание, 
         *1 – Резервное питание.
         *5 бит = Тревожная кнопка (текущее состояние кнопки)	
         *0 – Кнопка отжата, 
         *1 – Кнопка нажата.
         *6 бит = Вскрытие устройства	
         *0 – Устройство закрыто, 
         *1 – Устройство открыто.
         *7 бит = Состояние дискретного выхода	
         *0 – Выключен, 
         *1 – Включен.
         *8 бит = Кнопка голосового вызова
         *0 - Кнопка отжата
         *1 - Кнопка нажата
         *9 бит = глушение GPS
         *0 – Выключен, 
         *1 – Включен.                    
         *10 бит = глушение GSM
         *0 – Выключен, 
         *1 – Включен.
         *11 бит = неисправность аккумулятора
         *0 – Нет, 
         *1 – Да.
         * </pre>
         *
         * <code>optional uint32 Mileage = 5;</code>
         * @return Whether the mileage field is set.
         */
        @java.lang.Override
        public boolean hasMileage() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Битовая маска:
         *0 бит = Положение ключа зажигания
         *0 – зажигание выключено, 
         *1 – зажигание включено.
         *1 бит = Наличие связи GSM	
         *0 – Нет связи,
         *1 – Есть связь.
         *2 бит = Корректность данных GPS	
         *0 – Данные некорректны, 
         *1 – Данные корректны.
         *3 бит = Нахождение в роуминге	
         *0 – В домашней сети, 
         *1 – В роуминге.
         *4 бит = Состояние питания	
         *0 – Внешнее питание, 
         *1 – Резервное питание.
         *5 бит = Тревожная кнопка (текущее состояние кнопки)	
         *0 – Кнопка отжата, 
         *1 – Кнопка нажата.
         *6 бит = Вскрытие устройства	
         *0 – Устройство закрыто, 
         *1 – Устройство открыто.
         *7 бит = Состояние дискретного выхода	
         *0 – Выключен, 
         *1 – Включен.
         *8 бит = Кнопка голосового вызова
         *0 - Кнопка отжата
         *1 - Кнопка нажата
         *9 бит = глушение GPS
         *0 – Выключен, 
         *1 – Включен.                    
         *10 бит = глушение GSM
         *0 – Выключен, 
         *1 – Включен.
         *11 бит = неисправность аккумулятора
         *0 – Нет, 
         *1 – Да.
         * </pre>
         *
         * <code>optional uint32 Mileage = 5;</code>
         * @return The mileage.
         */
        @java.lang.Override
        public int getMileage() {
          return mileage_;
        }
        /**
         * <pre>
         * Битовая маска:
         *0 бит = Положение ключа зажигания
         *0 – зажигание выключено, 
         *1 – зажигание включено.
         *1 бит = Наличие связи GSM	
         *0 – Нет связи,
         *1 – Есть связь.
         *2 бит = Корректность данных GPS	
         *0 – Данные некорректны, 
         *1 – Данные корректны.
         *3 бит = Нахождение в роуминге	
         *0 – В домашней сети, 
         *1 – В роуминге.
         *4 бит = Состояние питания	
         *0 – Внешнее питание, 
         *1 – Резервное питание.
         *5 бит = Тревожная кнопка (текущее состояние кнопки)	
         *0 – Кнопка отжата, 
         *1 – Кнопка нажата.
         *6 бит = Вскрытие устройства	
         *0 – Устройство закрыто, 
         *1 – Устройство открыто.
         *7 бит = Состояние дискретного выхода	
         *0 – Выключен, 
         *1 – Включен.
         *8 бит = Кнопка голосового вызова
         *0 - Кнопка отжата
         *1 - Кнопка нажата
         *9 бит = глушение GPS
         *0 – Выключен, 
         *1 – Включен.                    
         *10 бит = глушение GSM
         *0 – Выключен, 
         *1 – Включен.
         *11 бит = неисправность аккумулятора
         *0 – Нет, 
         *1 – Да.
         * </pre>
         *
         * <code>optional uint32 Mileage = 5;</code>
         * @param value The mileage to set.
         * @return This builder for chaining.
         */
        public Builder setMileage(int value) {

          mileage_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Битовая маска:
         *0 бит = Положение ключа зажигания
         *0 – зажигание выключено, 
         *1 – зажигание включено.
         *1 бит = Наличие связи GSM	
         *0 – Нет связи,
         *1 – Есть связь.
         *2 бит = Корректность данных GPS	
         *0 – Данные некорректны, 
         *1 – Данные корректны.
         *3 бит = Нахождение в роуминге	
         *0 – В домашней сети, 
         *1 – В роуминге.
         *4 бит = Состояние питания	
         *0 – Внешнее питание, 
         *1 – Резервное питание.
         *5 бит = Тревожная кнопка (текущее состояние кнопки)	
         *0 – Кнопка отжата, 
         *1 – Кнопка нажата.
         *6 бит = Вскрытие устройства	
         *0 – Устройство закрыто, 
         *1 – Устройство открыто.
         *7 бит = Состояние дискретного выхода	
         *0 – Выключен, 
         *1 – Включен.
         *8 бит = Кнопка голосового вызова
         *0 - Кнопка отжата
         *1 - Кнопка нажата
         *9 бит = глушение GPS
         *0 – Выключен, 
         *1 – Включен.                    
         *10 бит = глушение GSM
         *0 – Выключен, 
         *1 – Включен.
         *11 бит = неисправность аккумулятора
         *0 – Нет, 
         *1 – Да.
         * </pre>
         *
         * <code>optional uint32 Mileage = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearMileage() {
          bitField0_ = (bitField0_ & ~0x00000010);
          mileage_ = 0;
          onChanged();
          return this;
        }

        private int vImp_ ;
        /**
         * <pre>
         *[2] Скорость по датчику (1LSB = 1км/ч)
         * </pre>
         *
         * <code>optional uint32 VImp = 6;</code>
         * @return Whether the vImp field is set.
         */
        @java.lang.Override
        public boolean hasVImp() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[2] Скорость по датчику (1LSB = 1км/ч)
         * </pre>
         *
         * <code>optional uint32 VImp = 6;</code>
         * @return The vImp.
         */
        @java.lang.Override
        public int getVImp() {
          return vImp_;
        }
        /**
         * <pre>
         *[2] Скорость по датчику (1LSB = 1км/ч)
         * </pre>
         *
         * <code>optional uint32 VImp = 6;</code>
         * @param value The vImp to set.
         * @return This builder for chaining.
         */
        public Builder setVImp(int value) {

          vImp_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2] Скорость по датчику (1LSB = 1км/ч)
         * </pre>
         *
         * <code>optional uint32 VImp = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearVImp() {
          bitField0_ = (bitField0_ & ~0x00000020);
          vImp_ = 0;
          onChanged();
          return this;
        }

        private int tImp_ ;
        /**
         * <pre>
         *[2] Обороты по датчику (1LSB = 1об./мин.)
         * </pre>
         *
         * <code>optional uint32 TImp = 7;</code>
         * @return Whether the tImp field is set.
         */
        @java.lang.Override
        public boolean hasTImp() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *[2] Обороты по датчику (1LSB = 1об./мин.)
         * </pre>
         *
         * <code>optional uint32 TImp = 7;</code>
         * @return The tImp.
         */
        @java.lang.Override
        public int getTImp() {
          return tImp_;
        }
        /**
         * <pre>
         *[2] Обороты по датчику (1LSB = 1об./мин.)
         * </pre>
         *
         * <code>optional uint32 TImp = 7;</code>
         * @param value The tImp to set.
         * @return This builder for chaining.
         */
        public Builder setTImp(int value) {

          tImp_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2] Обороты по датчику (1LSB = 1об./мин.)
         * </pre>
         *
         * <code>optional uint32 TImp = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearTImp() {
          bitField0_ = (bitField0_ & ~0x00000040);
          tImp_ = 0;
          onChanged();
          return this;
        }

        private int uboard_ ;
        /**
         * <pre>
         *[4] Напряжение питания (1LSB = 0.1В)
         * </pre>
         *
         * <code>optional uint32 Uboard = 8;</code>
         * @return Whether the uboard field is set.
         */
        @java.lang.Override
        public boolean hasUboard() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         *[4] Напряжение питания (1LSB = 0.1В)
         * </pre>
         *
         * <code>optional uint32 Uboard = 8;</code>
         * @return The uboard.
         */
        @java.lang.Override
        public int getUboard() {
          return uboard_;
        }
        /**
         * <pre>
         *[4] Напряжение питания (1LSB = 0.1В)
         * </pre>
         *
         * <code>optional uint32 Uboard = 8;</code>
         * @param value The uboard to set.
         * @return This builder for chaining.
         */
        public Builder setUboard(int value) {

          uboard_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Напряжение питания (1LSB = 0.1В)
         * </pre>
         *
         * <code>optional uint32 Uboard = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearUboard() {
          bitField0_ = (bitField0_ & ~0x00000080);
          uboard_ = 0;
          onChanged();
          return this;
        }

        private int batLife_ ;
        /**
         * <pre>
         *[4] Уровень заряда аккумулятора (1LSB = 1%)
         * </pre>
         *
         * <code>optional uint32 BatLife = 9;</code>
         * @return Whether the batLife field is set.
         */
        @java.lang.Override
        public boolean hasBatLife() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         *[4] Уровень заряда аккумулятора (1LSB = 1%)
         * </pre>
         *
         * <code>optional uint32 BatLife = 9;</code>
         * @return The batLife.
         */
        @java.lang.Override
        public int getBatLife() {
          return batLife_;
        }
        /**
         * <pre>
         *[4] Уровень заряда аккумулятора (1LSB = 1%)
         * </pre>
         *
         * <code>optional uint32 BatLife = 9;</code>
         * @param value The batLife to set.
         * @return This builder for chaining.
         */
        public Builder setBatLife(int value) {

          batLife_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Уровень заряда аккумулятора (1LSB = 1%)
         * </pre>
         *
         * <code>optional uint32 BatLife = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearBatLife() {
          bitField0_ = (bitField0_ & ~0x00000100);
          batLife_ = 0;
          onChanged();
          return this;
        }

        private int sumAcc_ ;
        /**
         * <pre>
         *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
         * </pre>
         *
         * <code>optional sint32 SumAcc = 10;</code>
         * @return Whether the sumAcc field is set.
         */
        @java.lang.Override
        public boolean hasSumAcc() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
         * </pre>
         *
         * <code>optional sint32 SumAcc = 10;</code>
         * @return The sumAcc.
         */
        @java.lang.Override
        public int getSumAcc() {
          return sumAcc_;
        }
        /**
         * <pre>
         *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
         * </pre>
         *
         * <code>optional sint32 SumAcc = 10;</code>
         * @param value The sumAcc to set.
         * @return This builder for chaining.
         */
        public Builder setSumAcc(int value) {

          sumAcc_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Корень суммы квадратов ускорений осей x,y,z (1LSB = 0.01g)
         * </pre>
         *
         * <code>optional sint32 SumAcc = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearSumAcc() {
          bitField0_ = (bitField0_ & ~0x00000200);
          sumAcc_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString phone_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[6] Номер вызывающего или вызываемого абонента
         * </pre>
         *
         * <code>optional bytes Phone = 11;</code>
         * @return Whether the phone field is set.
         */
        @java.lang.Override
        public boolean hasPhone() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         *[6] Номер вызывающего или вызываемого абонента
         * </pre>
         *
         * <code>optional bytes Phone = 11;</code>
         * @return The phone.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getPhone() {
          return phone_;
        }
        /**
         * <pre>
         *[6] Номер вызывающего или вызываемого абонента
         * </pre>
         *
         * <code>optional bytes Phone = 11;</code>
         * @param value The phone to set.
         * @return This builder for chaining.
         */
        public Builder setPhone(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          phone_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[6] Номер вызывающего или вызываемого абонента
         * </pre>
         *
         * <code>optional bytes Phone = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearPhone() {
          bitField0_ = (bitField0_ & ~0x00000400);
          phone_ = getDefaultInstance().getPhone();
          onChanged();
          return this;
        }

        private int amtrX_ ;
        /**
         * <pre>
         *[4] Ускорение по оси X
         * </pre>
         *
         * <code>optional sint32 AmtrX = 12;</code>
         * @return Whether the amtrX field is set.
         */
        @java.lang.Override
        public boolean hasAmtrX() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         *[4] Ускорение по оси X
         * </pre>
         *
         * <code>optional sint32 AmtrX = 12;</code>
         * @return The amtrX.
         */
        @java.lang.Override
        public int getAmtrX() {
          return amtrX_;
        }
        /**
         * <pre>
         *[4] Ускорение по оси X
         * </pre>
         *
         * <code>optional sint32 AmtrX = 12;</code>
         * @param value The amtrX to set.
         * @return This builder for chaining.
         */
        public Builder setAmtrX(int value) {

          amtrX_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Ускорение по оси X
         * </pre>
         *
         * <code>optional sint32 AmtrX = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmtrX() {
          bitField0_ = (bitField0_ & ~0x00000800);
          amtrX_ = 0;
          onChanged();
          return this;
        }

        private int amtrY_ ;
        /**
         * <pre>
         *[4] Ускорение по оси Y
         * </pre>
         *
         * <code>optional sint32 AmtrY = 13;</code>
         * @return Whether the amtrY field is set.
         */
        @java.lang.Override
        public boolean hasAmtrY() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         *[4] Ускорение по оси Y
         * </pre>
         *
         * <code>optional sint32 AmtrY = 13;</code>
         * @return The amtrY.
         */
        @java.lang.Override
        public int getAmtrY() {
          return amtrY_;
        }
        /**
         * <pre>
         *[4] Ускорение по оси Y
         * </pre>
         *
         * <code>optional sint32 AmtrY = 13;</code>
         * @param value The amtrY to set.
         * @return This builder for chaining.
         */
        public Builder setAmtrY(int value) {

          amtrY_ = value;
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Ускорение по оси Y
         * </pre>
         *
         * <code>optional sint32 AmtrY = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmtrY() {
          bitField0_ = (bitField0_ & ~0x00001000);
          amtrY_ = 0;
          onChanged();
          return this;
        }

        private int amtrZ_ ;
        /**
         * <pre>
         *[4] Ускорение по оси Z
         * </pre>
         *
         * <code>optional sint32 AmtrZ = 14;</code>
         * @return Whether the amtrZ field is set.
         */
        @java.lang.Override
        public boolean hasAmtrZ() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         *[4] Ускорение по оси Z
         * </pre>
         *
         * <code>optional sint32 AmtrZ = 14;</code>
         * @return The amtrZ.
         */
        @java.lang.Override
        public int getAmtrZ() {
          return amtrZ_;
        }
        /**
         * <pre>
         *[4] Ускорение по оси Z
         * </pre>
         *
         * <code>optional sint32 AmtrZ = 14;</code>
         * @param value The amtrZ to set.
         * @return This builder for chaining.
         */
        public Builder setAmtrZ(int value) {

          amtrZ_ = value;
          bitField0_ |= 0x00002000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Ускорение по оси Z
         * </pre>
         *
         * <code>optional sint32 AmtrZ = 14;</code>
         * @return This builder for chaining.
         */
        public Builder clearAmtrZ() {
          bitField0_ = (bitField0_ & ~0x00002000);
          amtrZ_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString tachoCardID_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[16] ID карты тахографа (16 байт)
         * </pre>
         *
         * <code>optional bytes TachoCardID = 15;</code>
         * @return Whether the tachoCardID field is set.
         */
        @java.lang.Override
        public boolean hasTachoCardID() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         *[16] ID карты тахографа (16 байт)
         * </pre>
         *
         * <code>optional bytes TachoCardID = 15;</code>
         * @return The tachoCardID.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getTachoCardID() {
          return tachoCardID_;
        }
        /**
         * <pre>
         *[16] ID карты тахографа (16 байт)
         * </pre>
         *
         * <code>optional bytes TachoCardID = 15;</code>
         * @param value The tachoCardID to set.
         * @return This builder for chaining.
         */
        public Builder setTachoCardID(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          tachoCardID_ = value;
          bitField0_ |= 0x00004000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[16] ID карты тахографа (16 байт)
         * </pre>
         *
         * <code>optional bytes TachoCardID = 15;</code>
         * @return This builder for chaining.
         */
        public Builder clearTachoCardID() {
          bitField0_ = (bitField0_ & ~0x00004000);
          tachoCardID_ = getDefaultInstance().getTachoCardID();
          onChanged();
          return this;
        }

        private int accelStatus_ ;
        /**
         * <pre>
         *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
         * </pre>
         *
         * <code>optional uint32 AccelStatus = 16;</code>
         * @return Whether the accelStatus field is set.
         */
        @java.lang.Override
        public boolean hasAccelStatus() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <pre>
         *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
         * </pre>
         *
         * <code>optional uint32 AccelStatus = 16;</code>
         * @return The accelStatus.
         */
        @java.lang.Override
        public int getAccelStatus() {
          return accelStatus_;
        }
        /**
         * <pre>
         *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
         * </pre>
         *
         * <code>optional uint32 AccelStatus = 16;</code>
         * @param value The accelStatus to set.
         * @return This builder for chaining.
         */
        public Builder setAccelStatus(int value) {

          accelStatus_ = value;
          bitField0_ |= 0x00008000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] Статус калибровки акселерометра: 0 - не используется, 1 - калибруется, 2 - откалиброван, 3 - Ошибка определения осей
         * </pre>
         *
         * <code>optional uint32 AccelStatus = 16;</code>
         * @return This builder for chaining.
         */
        public Builder clearAccelStatus() {
          bitField0_ = (bitField0_ & ~0x00008000);
          accelStatus_ = 0;
          onChanged();
          return this;
        }

        private int hoursKoef_ ;
        /**
         * <pre>
         * Моточасы с использование коэффициента
         * </pre>
         *
         * <code>optional uint32 HoursKoef = 17;</code>
         * @return Whether the hoursKoef field is set.
         */
        @java.lang.Override
        public boolean hasHoursKoef() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <pre>
         * Моточасы с использование коэффициента
         * </pre>
         *
         * <code>optional uint32 HoursKoef = 17;</code>
         * @return The hoursKoef.
         */
        @java.lang.Override
        public int getHoursKoef() {
          return hoursKoef_;
        }
        /**
         * <pre>
         * Моточасы с использование коэффициента
         * </pre>
         *
         * <code>optional uint32 HoursKoef = 17;</code>
         * @param value The hoursKoef to set.
         * @return This builder for chaining.
         */
        public Builder setHoursKoef(int value) {

          hoursKoef_ = value;
          bitField0_ |= 0x00010000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Моточасы с использование коэффициента
         * </pre>
         *
         * <code>optional uint32 HoursKoef = 17;</code>
         * @return This builder for chaining.
         */
        public Builder clearHoursKoef() {
          bitField0_ = (bitField0_ & ~0x00010000);
          hoursKoef_ = 0;
          onChanged();
          return this;
        }

        private int gsmSignalQuality_ ;
        /**
         * <pre>
         * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 GsmSignalQuality = 18;</code>
         * @return Whether the gsmSignalQuality field is set.
         */
        @java.lang.Override
        public boolean hasGsmSignalQuality() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <pre>
         * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 GsmSignalQuality = 18;</code>
         * @return The gsmSignalQuality.
         */
        @java.lang.Override
        public int getGsmSignalQuality() {
          return gsmSignalQuality_;
        }
        /**
         * <pre>
         * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 GsmSignalQuality = 18;</code>
         * @param value The gsmSignalQuality to set.
         * @return This builder for chaining.
         */
        public Builder setGsmSignalQuality(int value) {

          gsmSignalQuality_ = value;
          bitField0_ |= 0x00020000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Уровень сигнала GSM, усл.ед.: 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 GsmSignalQuality = 18;</code>
         * @return This builder for chaining.
         */
        public Builder clearGsmSignalQuality() {
          bitField0_ = (bitField0_ & ~0x00020000);
          gsmSignalQuality_ = 0;
          onChanged();
          return this;
        }

        private int wifiSignalQuality_ ;
        /**
         * <pre>
         * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 WifiSignalQuality = 19;</code>
         * @return Whether the wifiSignalQuality field is set.
         */
        @java.lang.Override
        public boolean hasWifiSignalQuality() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <pre>
         * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 WifiSignalQuality = 19;</code>
         * @return The wifiSignalQuality.
         */
        @java.lang.Override
        public int getWifiSignalQuality() {
          return wifiSignalQuality_;
        }
        /**
         * <pre>
         * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 WifiSignalQuality = 19;</code>
         * @param value The wifiSignalQuality to set.
         * @return This builder for chaining.
         */
        public Builder setWifiSignalQuality(int value) {

          wifiSignalQuality_ = value;
          bitField0_ |= 0x00040000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Уровень сигнала Wi-Fi, усл.ед? 0 - нет сигнала, 1 - плохой, 2 - слабый, 3 - удовлетворительный, 4 - хороший, 5 - отличный
         * </pre>
         *
         * <code>optional uint32 WifiSignalQuality = 19;</code>
         * @return This builder for chaining.
         */
        public Builder clearWifiSignalQuality() {
          bitField0_ = (bitField0_ & ~0x00040000);
          wifiSignalQuality_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.General)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.General)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<General>
          PARSER = new com.google.protobuf.AbstractParser<General>() {
        @java.lang.Override
        public General parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<General> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<General> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PhotoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Photo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[4] Позиция текущего блока (в байтах от начала фотографии)
       * </pre>
       *
       * <code>optional uint32 POSBLK = 1;</code>
       * @return Whether the pOSBLK field is set.
       */
      boolean hasPOSBLK();
      /**
       * <pre>
       *[4] Позиция текущего блока (в байтах от начала фотографии)
       * </pre>
       *
       * <code>optional uint32 POSBLK = 1;</code>
       * @return The pOSBLK.
       */
      int getPOSBLK();

      /**
       * <pre>
       *[4] Размер всей фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SZPHOTO = 2;</code>
       * @return Whether the sZPHOTO field is set.
       */
      boolean hasSZPHOTO();
      /**
       * <pre>
       *[4] Размер всей фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SZPHOTO = 2;</code>
       * @return The sZPHOTO.
       */
      int getSZPHOTO();

      /**
       * <pre>
       *[4] Размер текущего блока фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SIZEBLK = 3;</code>
       * @return Whether the sIZEBLK field is set.
       */
      boolean hasSIZEBLK();
      /**
       * <pre>
       *[4] Размер текущего блока фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SIZEBLK = 3;</code>
       * @return The sIZEBLK.
       */
      int getSIZEBLK();

      /**
       * <pre>
       *[2048] Буфер фотографии (данные фотографии)
       * </pre>
       *
       * <code>optional bytes IMGDAT = 4;</code>
       * @return Whether the iMGDAT field is set.
       */
      boolean hasIMGDAT();
      /**
       * <pre>
       *[2048] Буфер фотографии (данные фотографии)
       * </pre>
       *
       * <code>optional bytes IMGDAT = 4;</code>
       * @return The iMGDAT.
       */
      com.google.protobuf.ByteString getIMGDAT();

      /**
       * <pre>
       *[4] Идентификатор фотографии
       * </pre>
       *
       * <code>optional uint32 IDPH = 5;</code>
       * @return Whether the iDPH field is set.
       */
      boolean hasIDPH();
      /**
       * <pre>
       *[4] Идентификатор фотографии
       * </pre>
       *
       * <code>optional uint32 IDPH = 5;</code>
       * @return The iDPH.
       */
      int getIDPH();

      /**
       * <pre>
       *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
       * </pre>
       *
       * <code>optional uint32 IMGSTAT = 6;</code>
       * @return Whether the iMGSTAT field is set.
       */
      boolean hasIMGSTAT();
      /**
       * <pre>
       *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
       * </pre>
       *
       * <code>optional uint32 IMGSTAT = 6;</code>
       * @return The iMGSTAT.
       */
      int getIMGSTAT();
    }
    /**
     * <pre>
     * Описание блока передачи части изображения
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Photo}
     */
    public static final class Photo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Photo)
        PhotoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Photo.newBuilder() to construct.
      private Photo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Photo() {
        iMGDAT_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Photo();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder.class);
      }

      private int bitField0_;
      public static final int POSBLK_FIELD_NUMBER = 1;
      private int pOSBLK_ = 0;
      /**
       * <pre>
       *[4] Позиция текущего блока (в байтах от начала фотографии)
       * </pre>
       *
       * <code>optional uint32 POSBLK = 1;</code>
       * @return Whether the pOSBLK field is set.
       */
      @java.lang.Override
      public boolean hasPOSBLK() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[4] Позиция текущего блока (в байтах от начала фотографии)
       * </pre>
       *
       * <code>optional uint32 POSBLK = 1;</code>
       * @return The pOSBLK.
       */
      @java.lang.Override
      public int getPOSBLK() {
        return pOSBLK_;
      }

      public static final int SZPHOTO_FIELD_NUMBER = 2;
      private int sZPHOTO_ = 0;
      /**
       * <pre>
       *[4] Размер всей фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SZPHOTO = 2;</code>
       * @return Whether the sZPHOTO field is set.
       */
      @java.lang.Override
      public boolean hasSZPHOTO() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *[4] Размер всей фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SZPHOTO = 2;</code>
       * @return The sZPHOTO.
       */
      @java.lang.Override
      public int getSZPHOTO() {
        return sZPHOTO_;
      }

      public static final int SIZEBLK_FIELD_NUMBER = 3;
      private int sIZEBLK_ = 0;
      /**
       * <pre>
       *[4] Размер текущего блока фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SIZEBLK = 3;</code>
       * @return Whether the sIZEBLK field is set.
       */
      @java.lang.Override
      public boolean hasSIZEBLK() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *[4] Размер текущего блока фотографии (в байтах)
       * </pre>
       *
       * <code>optional uint32 SIZEBLK = 3;</code>
       * @return The sIZEBLK.
       */
      @java.lang.Override
      public int getSIZEBLK() {
        return sIZEBLK_;
      }

      public static final int IMGDAT_FIELD_NUMBER = 4;
      private com.google.protobuf.ByteString iMGDAT_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *[2048] Буфер фотографии (данные фотографии)
       * </pre>
       *
       * <code>optional bytes IMGDAT = 4;</code>
       * @return Whether the iMGDAT field is set.
       */
      @java.lang.Override
      public boolean hasIMGDAT() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[2048] Буфер фотографии (данные фотографии)
       * </pre>
       *
       * <code>optional bytes IMGDAT = 4;</code>
       * @return The iMGDAT.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIMGDAT() {
        return iMGDAT_;
      }

      public static final int IDPH_FIELD_NUMBER = 5;
      private int iDPH_ = 0;
      /**
       * <pre>
       *[4] Идентификатор фотографии
       * </pre>
       *
       * <code>optional uint32 IDPH = 5;</code>
       * @return Whether the iDPH field is set.
       */
      @java.lang.Override
      public boolean hasIDPH() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *[4] Идентификатор фотографии
       * </pre>
       *
       * <code>optional uint32 IDPH = 5;</code>
       * @return The iDPH.
       */
      @java.lang.Override
      public int getIDPH() {
        return iDPH_;
      }

      public static final int IMGSTAT_FIELD_NUMBER = 6;
      private int iMGSTAT_ = 0;
      /**
       * <pre>
       *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
       * </pre>
       *
       * <code>optional uint32 IMGSTAT = 6;</code>
       * @return Whether the iMGSTAT field is set.
       */
      @java.lang.Override
      public boolean hasIMGSTAT() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
       * </pre>
       *
       * <code>optional uint32 IMGSTAT = 6;</code>
       * @return The iMGSTAT.
       */
      @java.lang.Override
      public int getIMGSTAT() {
        return iMGSTAT_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, pOSBLK_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, sZPHOTO_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, sIZEBLK_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeBytes(4, iMGDAT_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, iDPH_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, iMGSTAT_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, pOSBLK_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, sZPHOTO_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, sIZEBLK_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, iMGDAT_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, iDPH_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, iMGSTAT_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo) obj;

        if (hasPOSBLK() != other.hasPOSBLK()) return false;
        if (hasPOSBLK()) {
          if (getPOSBLK()
              != other.getPOSBLK()) return false;
        }
        if (hasSZPHOTO() != other.hasSZPHOTO()) return false;
        if (hasSZPHOTO()) {
          if (getSZPHOTO()
              != other.getSZPHOTO()) return false;
        }
        if (hasSIZEBLK() != other.hasSIZEBLK()) return false;
        if (hasSIZEBLK()) {
          if (getSIZEBLK()
              != other.getSIZEBLK()) return false;
        }
        if (hasIMGDAT() != other.hasIMGDAT()) return false;
        if (hasIMGDAT()) {
          if (!getIMGDAT()
              .equals(other.getIMGDAT())) return false;
        }
        if (hasIDPH() != other.hasIDPH()) return false;
        if (hasIDPH()) {
          if (getIDPH()
              != other.getIDPH()) return false;
        }
        if (hasIMGSTAT() != other.hasIMGSTAT()) return false;
        if (hasIMGSTAT()) {
          if (getIMGSTAT()
              != other.getIMGSTAT()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPOSBLK()) {
          hash = (37 * hash) + POSBLK_FIELD_NUMBER;
          hash = (53 * hash) + getPOSBLK();
        }
        if (hasSZPHOTO()) {
          hash = (37 * hash) + SZPHOTO_FIELD_NUMBER;
          hash = (53 * hash) + getSZPHOTO();
        }
        if (hasSIZEBLK()) {
          hash = (37 * hash) + SIZEBLK_FIELD_NUMBER;
          hash = (53 * hash) + getSIZEBLK();
        }
        if (hasIMGDAT()) {
          hash = (37 * hash) + IMGDAT_FIELD_NUMBER;
          hash = (53 * hash) + getIMGDAT().hashCode();
        }
        if (hasIDPH()) {
          hash = (37 * hash) + IDPH_FIELD_NUMBER;
          hash = (53 * hash) + getIDPH();
        }
        if (hasIMGSTAT()) {
          hash = (37 * hash) + IMGSTAT_FIELD_NUMBER;
          hash = (53 * hash) + getIMGSTAT();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Описание блока передачи части изображения
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Photo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Photo)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          pOSBLK_ = 0;
          sZPHOTO_ = 0;
          sIZEBLK_ = 0;
          iMGDAT_ = com.google.protobuf.ByteString.EMPTY;
          iDPH_ = 0;
          iMGSTAT_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.pOSBLK_ = pOSBLK_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.sZPHOTO_ = sZPHOTO_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.sIZEBLK_ = sIZEBLK_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.iMGDAT_ = iMGDAT_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.iDPH_ = iDPH_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.iMGSTAT_ = iMGSTAT_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance()) return this;
          if (other.hasPOSBLK()) {
            setPOSBLK(other.getPOSBLK());
          }
          if (other.hasSZPHOTO()) {
            setSZPHOTO(other.getSZPHOTO());
          }
          if (other.hasSIZEBLK()) {
            setSIZEBLK(other.getSIZEBLK());
          }
          if (other.hasIMGDAT()) {
            setIMGDAT(other.getIMGDAT());
          }
          if (other.hasIDPH()) {
            setIDPH(other.getIDPH());
          }
          if (other.hasIMGSTAT()) {
            setIMGSTAT(other.getIMGSTAT());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  pOSBLK_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  sZPHOTO_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  sIZEBLK_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  iMGDAT_ = input.readBytes();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 40: {
                  iDPH_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  iMGSTAT_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int pOSBLK_ ;
        /**
         * <pre>
         *[4] Позиция текущего блока (в байтах от начала фотографии)
         * </pre>
         *
         * <code>optional uint32 POSBLK = 1;</code>
         * @return Whether the pOSBLK field is set.
         */
        @java.lang.Override
        public boolean hasPOSBLK() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[4] Позиция текущего блока (в байтах от начала фотографии)
         * </pre>
         *
         * <code>optional uint32 POSBLK = 1;</code>
         * @return The pOSBLK.
         */
        @java.lang.Override
        public int getPOSBLK() {
          return pOSBLK_;
        }
        /**
         * <pre>
         *[4] Позиция текущего блока (в байтах от начала фотографии)
         * </pre>
         *
         * <code>optional uint32 POSBLK = 1;</code>
         * @param value The pOSBLK to set.
         * @return This builder for chaining.
         */
        public Builder setPOSBLK(int value) {

          pOSBLK_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Позиция текущего блока (в байтах от начала фотографии)
         * </pre>
         *
         * <code>optional uint32 POSBLK = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPOSBLK() {
          bitField0_ = (bitField0_ & ~0x00000001);
          pOSBLK_ = 0;
          onChanged();
          return this;
        }

        private int sZPHOTO_ ;
        /**
         * <pre>
         *[4] Размер всей фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SZPHOTO = 2;</code>
         * @return Whether the sZPHOTO field is set.
         */
        @java.lang.Override
        public boolean hasSZPHOTO() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[4] Размер всей фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SZPHOTO = 2;</code>
         * @return The sZPHOTO.
         */
        @java.lang.Override
        public int getSZPHOTO() {
          return sZPHOTO_;
        }
        /**
         * <pre>
         *[4] Размер всей фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SZPHOTO = 2;</code>
         * @param value The sZPHOTO to set.
         * @return This builder for chaining.
         */
        public Builder setSZPHOTO(int value) {

          sZPHOTO_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Размер всей фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SZPHOTO = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSZPHOTO() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sZPHOTO_ = 0;
          onChanged();
          return this;
        }

        private int sIZEBLK_ ;
        /**
         * <pre>
         *[4] Размер текущего блока фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SIZEBLK = 3;</code>
         * @return Whether the sIZEBLK field is set.
         */
        @java.lang.Override
        public boolean hasSIZEBLK() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[4] Размер текущего блока фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SIZEBLK = 3;</code>
         * @return The sIZEBLK.
         */
        @java.lang.Override
        public int getSIZEBLK() {
          return sIZEBLK_;
        }
        /**
         * <pre>
         *[4] Размер текущего блока фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SIZEBLK = 3;</code>
         * @param value The sIZEBLK to set.
         * @return This builder for chaining.
         */
        public Builder setSIZEBLK(int value) {

          sIZEBLK_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Размер текущего блока фотографии (в байтах)
         * </pre>
         *
         * <code>optional uint32 SIZEBLK = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSIZEBLK() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sIZEBLK_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString iMGDAT_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[2048] Буфер фотографии (данные фотографии)
         * </pre>
         *
         * <code>optional bytes IMGDAT = 4;</code>
         * @return Whether the iMGDAT field is set.
         */
        @java.lang.Override
        public boolean hasIMGDAT() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[2048] Буфер фотографии (данные фотографии)
         * </pre>
         *
         * <code>optional bytes IMGDAT = 4;</code>
         * @return The iMGDAT.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getIMGDAT() {
          return iMGDAT_;
        }
        /**
         * <pre>
         *[2048] Буфер фотографии (данные фотографии)
         * </pre>
         *
         * <code>optional bytes IMGDAT = 4;</code>
         * @param value The iMGDAT to set.
         * @return This builder for chaining.
         */
        public Builder setIMGDAT(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          iMGDAT_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2048] Буфер фотографии (данные фотографии)
         * </pre>
         *
         * <code>optional bytes IMGDAT = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearIMGDAT() {
          bitField0_ = (bitField0_ & ~0x00000008);
          iMGDAT_ = getDefaultInstance().getIMGDAT();
          onChanged();
          return this;
        }

        private int iDPH_ ;
        /**
         * <pre>
         *[4] Идентификатор фотографии
         * </pre>
         *
         * <code>optional uint32 IDPH = 5;</code>
         * @return Whether the iDPH field is set.
         */
        @java.lang.Override
        public boolean hasIDPH() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[4] Идентификатор фотографии
         * </pre>
         *
         * <code>optional uint32 IDPH = 5;</code>
         * @return The iDPH.
         */
        @java.lang.Override
        public int getIDPH() {
          return iDPH_;
        }
        /**
         * <pre>
         *[4] Идентификатор фотографии
         * </pre>
         *
         * <code>optional uint32 IDPH = 5;</code>
         * @param value The iDPH to set.
         * @return This builder for chaining.
         */
        public Builder setIDPH(int value) {

          iDPH_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Идентификатор фотографии
         * </pre>
         *
         * <code>optional uint32 IDPH = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearIDPH() {
          bitField0_ = (bitField0_ & ~0x00000010);
          iDPH_ = 0;
          onChanged();
          return this;
        }

        private int iMGSTAT_ ;
        /**
         * <pre>
         *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
         * </pre>
         *
         * <code>optional uint32 IMGSTAT = 6;</code>
         * @return Whether the iMGSTAT field is set.
         */
        @java.lang.Override
        public boolean hasIMGSTAT() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
         * </pre>
         *
         * <code>optional uint32 IMGSTAT = 6;</code>
         * @return The iMGSTAT.
         */
        @java.lang.Override
        public int getIMGSTAT() {
          return iMGSTAT_;
        }
        /**
         * <pre>
         *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
         * </pre>
         *
         * <code>optional uint32 IMGSTAT = 6;</code>
         * @param value The iMGSTAT to set.
         * @return This builder for chaining.
         */
        public Builder setIMGSTAT(int value) {

          iMGSTAT_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] Статус изображения, см. Таблицу "Коды состояния фотокамеры".
         * </pre>
         *
         * <code>optional uint32 IMGSTAT = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearIMGSTAT() {
          bitField0_ = (bitField0_ & ~0x00000020);
          iMGSTAT_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Photo)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Photo)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Photo>
          PARSER = new com.google.protobuf.AbstractParser<Photo>() {
        @java.lang.Override
        public Photo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Photo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Photo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NAVOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.NAV)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[4] Широта (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LAT = 1;</code>
       * @return Whether the lAT field is set.
       */
      boolean hasLAT();
      /**
       * <pre>
       *[4] Широта (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LAT = 1;</code>
       * @return The lAT.
       */
      int getLAT();

      /**
       * <pre>
       *[4] Долгота (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LON = 2;</code>
       * @return Whether the lON field is set.
       */
      boolean hasLON();
      /**
       * <pre>
       *[4] Долгота (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LON = 2;</code>
       * @return The lON.
       */
      int getLON();

      /**
       * <pre>
       *[2] Скорость по GPS (1LSB = 0.1км/ч)
       * </pre>
       *
       * <code>required uint32 GPSVel = 3;</code>
       * @return Whether the gPSVel field is set.
       */
      boolean hasGPSVel();
      /**
       * <pre>
       *[2] Скорость по GPS (1LSB = 0.1км/ч)
       * </pre>
       *
       * <code>required uint32 GPSVel = 3;</code>
       * @return The gPSVel.
       */
      int getGPSVel();

      /**
       * <pre>
       *[2] Направление (1LSB = 1гр.)
       * </pre>
       *
       * <code>required uint32 GPSDir = 4;</code>
       * @return Whether the gPSDir field is set.
       */
      boolean hasGPSDir();
      /**
       * <pre>
       *[2] Направление (1LSB = 1гр.)
       * </pre>
       *
       * <code>required uint32 GPSDir = 4;</code>
       * @return The gPSDir.
       */
      int getGPSDir();

      /**
       * <pre>
       *[1] Количество спутников
       * </pre>
       *
       * <code>required uint32 GPSNSat = 5;</code>
       * @return Whether the gPSNSat field is set.
       */
      boolean hasGPSNSat();
      /**
       * <pre>
       *[1] Количество спутников
       * </pre>
       *
       * <code>required uint32 GPSNSat = 5;</code>
       * @return The gPSNSat.
       */
      int getGPSNSat();

      /**
       * <pre>
       *[2] Высота над уровнем моря (1LSB = 0.1м)
       * </pre>
       *
       * <code>required sint32 GPSAlt = 6;</code>
       * @return Whether the gPSAlt field is set.
       */
      boolean hasGPSAlt();
      /**
       * <pre>
       *[2] Высота над уровнем моря (1LSB = 0.1м)
       * </pre>
       *
       * <code>required sint32 GPSAlt = 6;</code>
       * @return The gPSAlt.
       */
      int getGPSAlt();

      /**
       * <pre>
       *[4] Время/дата события по GPS (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 GPSTime = 7;</code>
       * @return Whether the gPSTime field is set.
       */
      boolean hasGPSTime();
      /**
       * <pre>
       *[4] Время/дата события по GPS (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 GPSTime = 7;</code>
       * @return The gPSTime.
       */
      int getGPSTime();
    }
    /**
     * <pre>
     * Навигация
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.NAV}
     */
    public static final class NAV extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.NAV)
        NAVOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use NAV.newBuilder() to construct.
      private NAV(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NAV() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new NAV();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder.class);
      }

      private int bitField0_;
      public static final int LAT_FIELD_NUMBER = 1;
      private int lAT_ = 0;
      /**
       * <pre>
       *[4] Широта (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LAT = 1;</code>
       * @return Whether the lAT field is set.
       */
      @java.lang.Override
      public boolean hasLAT() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[4] Широта (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LAT = 1;</code>
       * @return The lAT.
       */
      @java.lang.Override
      public int getLAT() {
        return lAT_;
      }

      public static final int LON_FIELD_NUMBER = 2;
      private int lON_ = 0;
      /**
       * <pre>
       *[4] Долгота (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LON = 2;</code>
       * @return Whether the lON field is set.
       */
      @java.lang.Override
      public boolean hasLON() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *[4] Долгота (1LSB = 0,0000001гр.)
       * </pre>
       *
       * <code>required sint32 LON = 2;</code>
       * @return The lON.
       */
      @java.lang.Override
      public int getLON() {
        return lON_;
      }

      public static final int GPSVEL_FIELD_NUMBER = 3;
      private int gPSVel_ = 0;
      /**
       * <pre>
       *[2] Скорость по GPS (1LSB = 0.1км/ч)
       * </pre>
       *
       * <code>required uint32 GPSVel = 3;</code>
       * @return Whether the gPSVel field is set.
       */
      @java.lang.Override
      public boolean hasGPSVel() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *[2] Скорость по GPS (1LSB = 0.1км/ч)
       * </pre>
       *
       * <code>required uint32 GPSVel = 3;</code>
       * @return The gPSVel.
       */
      @java.lang.Override
      public int getGPSVel() {
        return gPSVel_;
      }

      public static final int GPSDIR_FIELD_NUMBER = 4;
      private int gPSDir_ = 0;
      /**
       * <pre>
       *[2] Направление (1LSB = 1гр.)
       * </pre>
       *
       * <code>required uint32 GPSDir = 4;</code>
       * @return Whether the gPSDir field is set.
       */
      @java.lang.Override
      public boolean hasGPSDir() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[2] Направление (1LSB = 1гр.)
       * </pre>
       *
       * <code>required uint32 GPSDir = 4;</code>
       * @return The gPSDir.
       */
      @java.lang.Override
      public int getGPSDir() {
        return gPSDir_;
      }

      public static final int GPSNSAT_FIELD_NUMBER = 5;
      private int gPSNSat_ = 0;
      /**
       * <pre>
       *[1] Количество спутников
       * </pre>
       *
       * <code>required uint32 GPSNSat = 5;</code>
       * @return Whether the gPSNSat field is set.
       */
      @java.lang.Override
      public boolean hasGPSNSat() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *[1] Количество спутников
       * </pre>
       *
       * <code>required uint32 GPSNSat = 5;</code>
       * @return The gPSNSat.
       */
      @java.lang.Override
      public int getGPSNSat() {
        return gPSNSat_;
      }

      public static final int GPSALT_FIELD_NUMBER = 6;
      private int gPSAlt_ = 0;
      /**
       * <pre>
       *[2] Высота над уровнем моря (1LSB = 0.1м)
       * </pre>
       *
       * <code>required sint32 GPSAlt = 6;</code>
       * @return Whether the gPSAlt field is set.
       */
      @java.lang.Override
      public boolean hasGPSAlt() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *[2] Высота над уровнем моря (1LSB = 0.1м)
       * </pre>
       *
       * <code>required sint32 GPSAlt = 6;</code>
       * @return The gPSAlt.
       */
      @java.lang.Override
      public int getGPSAlt() {
        return gPSAlt_;
      }

      public static final int GPSTIME_FIELD_NUMBER = 7;
      private int gPSTime_ = 0;
      /**
       * <pre>
       *[4] Время/дата события по GPS (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 GPSTime = 7;</code>
       * @return Whether the gPSTime field is set.
       */
      @java.lang.Override
      public boolean hasGPSTime() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *[4] Время/дата события по GPS (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 GPSTime = 7;</code>
       * @return The gPSTime.
       */
      @java.lang.Override
      public int getGPSTime() {
        return gPSTime_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasLAT()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLON()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGPSVel()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGPSDir()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGPSNSat()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasGPSAlt()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeSInt32(1, lAT_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeSInt32(2, lON_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, gPSVel_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, gPSDir_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, gPSNSat_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeSInt32(6, gPSAlt_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(7, gPSTime_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, lAT_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, lON_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, gPSVel_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, gPSDir_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, gPSNSat_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(6, gPSAlt_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, gPSTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV) obj;

        if (hasLAT() != other.hasLAT()) return false;
        if (hasLAT()) {
          if (getLAT()
              != other.getLAT()) return false;
        }
        if (hasLON() != other.hasLON()) return false;
        if (hasLON()) {
          if (getLON()
              != other.getLON()) return false;
        }
        if (hasGPSVel() != other.hasGPSVel()) return false;
        if (hasGPSVel()) {
          if (getGPSVel()
              != other.getGPSVel()) return false;
        }
        if (hasGPSDir() != other.hasGPSDir()) return false;
        if (hasGPSDir()) {
          if (getGPSDir()
              != other.getGPSDir()) return false;
        }
        if (hasGPSNSat() != other.hasGPSNSat()) return false;
        if (hasGPSNSat()) {
          if (getGPSNSat()
              != other.getGPSNSat()) return false;
        }
        if (hasGPSAlt() != other.hasGPSAlt()) return false;
        if (hasGPSAlt()) {
          if (getGPSAlt()
              != other.getGPSAlt()) return false;
        }
        if (hasGPSTime() != other.hasGPSTime()) return false;
        if (hasGPSTime()) {
          if (getGPSTime()
              != other.getGPSTime()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLAT()) {
          hash = (37 * hash) + LAT_FIELD_NUMBER;
          hash = (53 * hash) + getLAT();
        }
        if (hasLON()) {
          hash = (37 * hash) + LON_FIELD_NUMBER;
          hash = (53 * hash) + getLON();
        }
        if (hasGPSVel()) {
          hash = (37 * hash) + GPSVEL_FIELD_NUMBER;
          hash = (53 * hash) + getGPSVel();
        }
        if (hasGPSDir()) {
          hash = (37 * hash) + GPSDIR_FIELD_NUMBER;
          hash = (53 * hash) + getGPSDir();
        }
        if (hasGPSNSat()) {
          hash = (37 * hash) + GPSNSAT_FIELD_NUMBER;
          hash = (53 * hash) + getGPSNSat();
        }
        if (hasGPSAlt()) {
          hash = (37 * hash) + GPSALT_FIELD_NUMBER;
          hash = (53 * hash) + getGPSAlt();
        }
        if (hasGPSTime()) {
          hash = (37 * hash) + GPSTIME_FIELD_NUMBER;
          hash = (53 * hash) + getGPSTime();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Навигация
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.NAV}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.NAV)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          lAT_ = 0;
          lON_ = 0;
          gPSVel_ = 0;
          gPSDir_ = 0;
          gPSNSat_ = 0;
          gPSAlt_ = 0;
          gPSTime_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.lAT_ = lAT_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.lON_ = lON_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.gPSVel_ = gPSVel_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.gPSDir_ = gPSDir_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.gPSNSat_ = gPSNSat_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.gPSAlt_ = gPSAlt_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.gPSTime_ = gPSTime_;
            to_bitField0_ |= 0x00000040;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance()) return this;
          if (other.hasLAT()) {
            setLAT(other.getLAT());
          }
          if (other.hasLON()) {
            setLON(other.getLON());
          }
          if (other.hasGPSVel()) {
            setGPSVel(other.getGPSVel());
          }
          if (other.hasGPSDir()) {
            setGPSDir(other.getGPSDir());
          }
          if (other.hasGPSNSat()) {
            setGPSNSat(other.getGPSNSat());
          }
          if (other.hasGPSAlt()) {
            setGPSAlt(other.getGPSAlt());
          }
          if (other.hasGPSTime()) {
            setGPSTime(other.getGPSTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasLAT()) {
            return false;
          }
          if (!hasLON()) {
            return false;
          }
          if (!hasGPSVel()) {
            return false;
          }
          if (!hasGPSDir()) {
            return false;
          }
          if (!hasGPSNSat()) {
            return false;
          }
          if (!hasGPSAlt()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  lAT_ = input.readSInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  lON_ = input.readSInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  gPSVel_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  gPSDir_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  gPSNSat_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  gPSAlt_ = input.readSInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  gPSTime_ = input.readUInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int lAT_ ;
        /**
         * <pre>
         *[4] Широта (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LAT = 1;</code>
         * @return Whether the lAT field is set.
         */
        @java.lang.Override
        public boolean hasLAT() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[4] Широта (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LAT = 1;</code>
         * @return The lAT.
         */
        @java.lang.Override
        public int getLAT() {
          return lAT_;
        }
        /**
         * <pre>
         *[4] Широта (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LAT = 1;</code>
         * @param value The lAT to set.
         * @return This builder for chaining.
         */
        public Builder setLAT(int value) {

          lAT_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Широта (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LAT = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLAT() {
          bitField0_ = (bitField0_ & ~0x00000001);
          lAT_ = 0;
          onChanged();
          return this;
        }

        private int lON_ ;
        /**
         * <pre>
         *[4] Долгота (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LON = 2;</code>
         * @return Whether the lON field is set.
         */
        @java.lang.Override
        public boolean hasLON() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[4] Долгота (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LON = 2;</code>
         * @return The lON.
         */
        @java.lang.Override
        public int getLON() {
          return lON_;
        }
        /**
         * <pre>
         *[4] Долгота (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LON = 2;</code>
         * @param value The lON to set.
         * @return This builder for chaining.
         */
        public Builder setLON(int value) {

          lON_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Долгота (1LSB = 0,0000001гр.)
         * </pre>
         *
         * <code>required sint32 LON = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLON() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lON_ = 0;
          onChanged();
          return this;
        }

        private int gPSVel_ ;
        /**
         * <pre>
         *[2] Скорость по GPS (1LSB = 0.1км/ч)
         * </pre>
         *
         * <code>required uint32 GPSVel = 3;</code>
         * @return Whether the gPSVel field is set.
         */
        @java.lang.Override
        public boolean hasGPSVel() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[2] Скорость по GPS (1LSB = 0.1км/ч)
         * </pre>
         *
         * <code>required uint32 GPSVel = 3;</code>
         * @return The gPSVel.
         */
        @java.lang.Override
        public int getGPSVel() {
          return gPSVel_;
        }
        /**
         * <pre>
         *[2] Скорость по GPS (1LSB = 0.1км/ч)
         * </pre>
         *
         * <code>required uint32 GPSVel = 3;</code>
         * @param value The gPSVel to set.
         * @return This builder for chaining.
         */
        public Builder setGPSVel(int value) {

          gPSVel_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2] Скорость по GPS (1LSB = 0.1км/ч)
         * </pre>
         *
         * <code>required uint32 GPSVel = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearGPSVel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          gPSVel_ = 0;
          onChanged();
          return this;
        }

        private int gPSDir_ ;
        /**
         * <pre>
         *[2] Направление (1LSB = 1гр.)
         * </pre>
         *
         * <code>required uint32 GPSDir = 4;</code>
         * @return Whether the gPSDir field is set.
         */
        @java.lang.Override
        public boolean hasGPSDir() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[2] Направление (1LSB = 1гр.)
         * </pre>
         *
         * <code>required uint32 GPSDir = 4;</code>
         * @return The gPSDir.
         */
        @java.lang.Override
        public int getGPSDir() {
          return gPSDir_;
        }
        /**
         * <pre>
         *[2] Направление (1LSB = 1гр.)
         * </pre>
         *
         * <code>required uint32 GPSDir = 4;</code>
         * @param value The gPSDir to set.
         * @return This builder for chaining.
         */
        public Builder setGPSDir(int value) {

          gPSDir_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2] Направление (1LSB = 1гр.)
         * </pre>
         *
         * <code>required uint32 GPSDir = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearGPSDir() {
          bitField0_ = (bitField0_ & ~0x00000008);
          gPSDir_ = 0;
          onChanged();
          return this;
        }

        private int gPSNSat_ ;
        /**
         * <pre>
         *[1] Количество спутников
         * </pre>
         *
         * <code>required uint32 GPSNSat = 5;</code>
         * @return Whether the gPSNSat field is set.
         */
        @java.lang.Override
        public boolean hasGPSNSat() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[1] Количество спутников
         * </pre>
         *
         * <code>required uint32 GPSNSat = 5;</code>
         * @return The gPSNSat.
         */
        @java.lang.Override
        public int getGPSNSat() {
          return gPSNSat_;
        }
        /**
         * <pre>
         *[1] Количество спутников
         * </pre>
         *
         * <code>required uint32 GPSNSat = 5;</code>
         * @param value The gPSNSat to set.
         * @return This builder for chaining.
         */
        public Builder setGPSNSat(int value) {

          gPSNSat_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] Количество спутников
         * </pre>
         *
         * <code>required uint32 GPSNSat = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearGPSNSat() {
          bitField0_ = (bitField0_ & ~0x00000010);
          gPSNSat_ = 0;
          onChanged();
          return this;
        }

        private int gPSAlt_ ;
        /**
         * <pre>
         *[2] Высота над уровнем моря (1LSB = 0.1м)
         * </pre>
         *
         * <code>required sint32 GPSAlt = 6;</code>
         * @return Whether the gPSAlt field is set.
         */
        @java.lang.Override
        public boolean hasGPSAlt() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[2] Высота над уровнем моря (1LSB = 0.1м)
         * </pre>
         *
         * <code>required sint32 GPSAlt = 6;</code>
         * @return The gPSAlt.
         */
        @java.lang.Override
        public int getGPSAlt() {
          return gPSAlt_;
        }
        /**
         * <pre>
         *[2] Высота над уровнем моря (1LSB = 0.1м)
         * </pre>
         *
         * <code>required sint32 GPSAlt = 6;</code>
         * @param value The gPSAlt to set.
         * @return This builder for chaining.
         */
        public Builder setGPSAlt(int value) {

          gPSAlt_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2] Высота над уровнем моря (1LSB = 0.1м)
         * </pre>
         *
         * <code>required sint32 GPSAlt = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearGPSAlt() {
          bitField0_ = (bitField0_ & ~0x00000020);
          gPSAlt_ = 0;
          onChanged();
          return this;
        }

        private int gPSTime_ ;
        /**
         * <pre>
         *[4] Время/дата события по GPS (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 GPSTime = 7;</code>
         * @return Whether the gPSTime field is set.
         */
        @java.lang.Override
        public boolean hasGPSTime() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *[4] Время/дата события по GPS (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 GPSTime = 7;</code>
         * @return The gPSTime.
         */
        @java.lang.Override
        public int getGPSTime() {
          return gPSTime_;
        }
        /**
         * <pre>
         *[4] Время/дата события по GPS (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 GPSTime = 7;</code>
         * @param value The gPSTime to set.
         * @return This builder for chaining.
         */
        public Builder setGPSTime(int value) {

          gPSTime_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Время/дата события по GPS (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 GPSTime = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearGPSTime() {
          bitField0_ = (bitField0_ & ~0x00000040);
          gPSTime_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.NAV)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.NAV)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<NAV>
          PARSER = new com.google.protobuf.AbstractParser<NAV>() {
        @java.lang.Override
        public NAV parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<NAV> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NAV> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UniDtOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[4] Данные универсального входа 1
       * </pre>
       *
       * <code>optional sint32 UniVal0 = 1;</code>
       * @return Whether the uniVal0 field is set.
       */
      boolean hasUniVal0();
      /**
       * <pre>
       *[4] Данные универсального входа 1
       * </pre>
       *
       * <code>optional sint32 UniVal0 = 1;</code>
       * @return The uniVal0.
       */
      int getUniVal0();

      /**
       * <pre>
       *[4] Данные универсального входа 2
       * </pre>
       *
       * <code>optional sint32 UniVal1 = 2;</code>
       * @return Whether the uniVal1 field is set.
       */
      boolean hasUniVal1();
      /**
       * <pre>
       *[4] Данные универсального входа 2
       * </pre>
       *
       * <code>optional sint32 UniVal1 = 2;</code>
       * @return The uniVal1.
       */
      int getUniVal1();

      /**
       * <pre>
       *[4] Данные универсального входа 3
       * </pre>
       *
       * <code>optional sint32 UniVal2 = 3;</code>
       * @return Whether the uniVal2 field is set.
       */
      boolean hasUniVal2();
      /**
       * <pre>
       *[4] Данные универсального входа 3
       * </pre>
       *
       * <code>optional sint32 UniVal2 = 3;</code>
       * @return The uniVal2.
       */
      int getUniVal2();

      /**
       * <pre>
       *[4] Данные универсального входа 4
       * </pre>
       *
       * <code>optional sint32 UniVal3 = 4;</code>
       * @return Whether the uniVal3 field is set.
       */
      boolean hasUniVal3();
      /**
       * <pre>
       *[4] Данные универсального входа 4
       * </pre>
       *
       * <code>optional sint32 UniVal3 = 4;</code>
       * @return The uniVal3.
       */
      int getUniVal3();

      /**
       * <pre>
       *[4] Данные универсального входа 5
       * </pre>
       *
       * <code>optional sint32 UniVal4 = 5;</code>
       * @return Whether the uniVal4 field is set.
       */
      boolean hasUniVal4();
      /**
       * <pre>
       *[4] Данные универсального входа 5
       * </pre>
       *
       * <code>optional sint32 UniVal4 = 5;</code>
       * @return The uniVal4.
       */
      int getUniVal4();

      /**
       * <pre>
       *[4] Данные универсального входа 6
       * </pre>
       *
       * <code>optional sint32 UniVal5 = 6;</code>
       * @return Whether the uniVal5 field is set.
       */
      boolean hasUniVal5();
      /**
       * <pre>
       *[4] Данные универсального входа 6
       * </pre>
       *
       * <code>optional sint32 UniVal5 = 6;</code>
       * @return The uniVal5.
       */
      int getUniVal5();
    }
    /**
     * <pre>
     * Универсальные входы
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt}
     */
    public static final class UniDt extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt)
        UniDtOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UniDt.newBuilder() to construct.
      private UniDt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UniDt() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new UniDt();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder.class);
      }

      private int bitField0_;
      public static final int UNIVAL0_FIELD_NUMBER = 1;
      private int uniVal0_ = 0;
      /**
       * <pre>
       *[4] Данные универсального входа 1
       * </pre>
       *
       * <code>optional sint32 UniVal0 = 1;</code>
       * @return Whether the uniVal0 field is set.
       */
      @java.lang.Override
      public boolean hasUniVal0() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[4] Данные универсального входа 1
       * </pre>
       *
       * <code>optional sint32 UniVal0 = 1;</code>
       * @return The uniVal0.
       */
      @java.lang.Override
      public int getUniVal0() {
        return uniVal0_;
      }

      public static final int UNIVAL1_FIELD_NUMBER = 2;
      private int uniVal1_ = 0;
      /**
       * <pre>
       *[4] Данные универсального входа 2
       * </pre>
       *
       * <code>optional sint32 UniVal1 = 2;</code>
       * @return Whether the uniVal1 field is set.
       */
      @java.lang.Override
      public boolean hasUniVal1() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *[4] Данные универсального входа 2
       * </pre>
       *
       * <code>optional sint32 UniVal1 = 2;</code>
       * @return The uniVal1.
       */
      @java.lang.Override
      public int getUniVal1() {
        return uniVal1_;
      }

      public static final int UNIVAL2_FIELD_NUMBER = 3;
      private int uniVal2_ = 0;
      /**
       * <pre>
       *[4] Данные универсального входа 3
       * </pre>
       *
       * <code>optional sint32 UniVal2 = 3;</code>
       * @return Whether the uniVal2 field is set.
       */
      @java.lang.Override
      public boolean hasUniVal2() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *[4] Данные универсального входа 3
       * </pre>
       *
       * <code>optional sint32 UniVal2 = 3;</code>
       * @return The uniVal2.
       */
      @java.lang.Override
      public int getUniVal2() {
        return uniVal2_;
      }

      public static final int UNIVAL3_FIELD_NUMBER = 4;
      private int uniVal3_ = 0;
      /**
       * <pre>
       *[4] Данные универсального входа 4
       * </pre>
       *
       * <code>optional sint32 UniVal3 = 4;</code>
       * @return Whether the uniVal3 field is set.
       */
      @java.lang.Override
      public boolean hasUniVal3() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[4] Данные универсального входа 4
       * </pre>
       *
       * <code>optional sint32 UniVal3 = 4;</code>
       * @return The uniVal3.
       */
      @java.lang.Override
      public int getUniVal3() {
        return uniVal3_;
      }

      public static final int UNIVAL4_FIELD_NUMBER = 5;
      private int uniVal4_ = 0;
      /**
       * <pre>
       *[4] Данные универсального входа 5
       * </pre>
       *
       * <code>optional sint32 UniVal4 = 5;</code>
       * @return Whether the uniVal4 field is set.
       */
      @java.lang.Override
      public boolean hasUniVal4() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *[4] Данные универсального входа 5
       * </pre>
       *
       * <code>optional sint32 UniVal4 = 5;</code>
       * @return The uniVal4.
       */
      @java.lang.Override
      public int getUniVal4() {
        return uniVal4_;
      }

      public static final int UNIVAL5_FIELD_NUMBER = 6;
      private int uniVal5_ = 0;
      /**
       * <pre>
       *[4] Данные универсального входа 6
       * </pre>
       *
       * <code>optional sint32 UniVal5 = 6;</code>
       * @return Whether the uniVal5 field is set.
       */
      @java.lang.Override
      public boolean hasUniVal5() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *[4] Данные универсального входа 6
       * </pre>
       *
       * <code>optional sint32 UniVal5 = 6;</code>
       * @return The uniVal5.
       */
      @java.lang.Override
      public int getUniVal5() {
        return uniVal5_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeSInt32(1, uniVal0_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeSInt32(2, uniVal1_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeSInt32(3, uniVal2_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeSInt32(4, uniVal3_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeSInt32(5, uniVal4_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeSInt32(6, uniVal5_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, uniVal0_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, uniVal1_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, uniVal2_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, uniVal3_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(5, uniVal4_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(6, uniVal5_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt) obj;

        if (hasUniVal0() != other.hasUniVal0()) return false;
        if (hasUniVal0()) {
          if (getUniVal0()
              != other.getUniVal0()) return false;
        }
        if (hasUniVal1() != other.hasUniVal1()) return false;
        if (hasUniVal1()) {
          if (getUniVal1()
              != other.getUniVal1()) return false;
        }
        if (hasUniVal2() != other.hasUniVal2()) return false;
        if (hasUniVal2()) {
          if (getUniVal2()
              != other.getUniVal2()) return false;
        }
        if (hasUniVal3() != other.hasUniVal3()) return false;
        if (hasUniVal3()) {
          if (getUniVal3()
              != other.getUniVal3()) return false;
        }
        if (hasUniVal4() != other.hasUniVal4()) return false;
        if (hasUniVal4()) {
          if (getUniVal4()
              != other.getUniVal4()) return false;
        }
        if (hasUniVal5() != other.hasUniVal5()) return false;
        if (hasUniVal5()) {
          if (getUniVal5()
              != other.getUniVal5()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasUniVal0()) {
          hash = (37 * hash) + UNIVAL0_FIELD_NUMBER;
          hash = (53 * hash) + getUniVal0();
        }
        if (hasUniVal1()) {
          hash = (37 * hash) + UNIVAL1_FIELD_NUMBER;
          hash = (53 * hash) + getUniVal1();
        }
        if (hasUniVal2()) {
          hash = (37 * hash) + UNIVAL2_FIELD_NUMBER;
          hash = (53 * hash) + getUniVal2();
        }
        if (hasUniVal3()) {
          hash = (37 * hash) + UNIVAL3_FIELD_NUMBER;
          hash = (53 * hash) + getUniVal3();
        }
        if (hasUniVal4()) {
          hash = (37 * hash) + UNIVAL4_FIELD_NUMBER;
          hash = (53 * hash) + getUniVal4();
        }
        if (hasUniVal5()) {
          hash = (37 * hash) + UNIVAL5_FIELD_NUMBER;
          hash = (53 * hash) + getUniVal5();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Универсальные входы
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          uniVal0_ = 0;
          uniVal1_ = 0;
          uniVal2_ = 0;
          uniVal3_ = 0;
          uniVal4_ = 0;
          uniVal5_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.uniVal0_ = uniVal0_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.uniVal1_ = uniVal1_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.uniVal2_ = uniVal2_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.uniVal3_ = uniVal3_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.uniVal4_ = uniVal4_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.uniVal5_ = uniVal5_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance()) return this;
          if (other.hasUniVal0()) {
            setUniVal0(other.getUniVal0());
          }
          if (other.hasUniVal1()) {
            setUniVal1(other.getUniVal1());
          }
          if (other.hasUniVal2()) {
            setUniVal2(other.getUniVal2());
          }
          if (other.hasUniVal3()) {
            setUniVal3(other.getUniVal3());
          }
          if (other.hasUniVal4()) {
            setUniVal4(other.getUniVal4());
          }
          if (other.hasUniVal5()) {
            setUniVal5(other.getUniVal5());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  uniVal0_ = input.readSInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  uniVal1_ = input.readSInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  uniVal2_ = input.readSInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  uniVal3_ = input.readSInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  uniVal4_ = input.readSInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  uniVal5_ = input.readSInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int uniVal0_ ;
        /**
         * <pre>
         *[4] Данные универсального входа 1
         * </pre>
         *
         * <code>optional sint32 UniVal0 = 1;</code>
         * @return Whether the uniVal0 field is set.
         */
        @java.lang.Override
        public boolean hasUniVal0() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[4] Данные универсального входа 1
         * </pre>
         *
         * <code>optional sint32 UniVal0 = 1;</code>
         * @return The uniVal0.
         */
        @java.lang.Override
        public int getUniVal0() {
          return uniVal0_;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 1
         * </pre>
         *
         * <code>optional sint32 UniVal0 = 1;</code>
         * @param value The uniVal0 to set.
         * @return This builder for chaining.
         */
        public Builder setUniVal0(int value) {

          uniVal0_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 1
         * </pre>
         *
         * <code>optional sint32 UniVal0 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniVal0() {
          bitField0_ = (bitField0_ & ~0x00000001);
          uniVal0_ = 0;
          onChanged();
          return this;
        }

        private int uniVal1_ ;
        /**
         * <pre>
         *[4] Данные универсального входа 2
         * </pre>
         *
         * <code>optional sint32 UniVal1 = 2;</code>
         * @return Whether the uniVal1 field is set.
         */
        @java.lang.Override
        public boolean hasUniVal1() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[4] Данные универсального входа 2
         * </pre>
         *
         * <code>optional sint32 UniVal1 = 2;</code>
         * @return The uniVal1.
         */
        @java.lang.Override
        public int getUniVal1() {
          return uniVal1_;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 2
         * </pre>
         *
         * <code>optional sint32 UniVal1 = 2;</code>
         * @param value The uniVal1 to set.
         * @return This builder for chaining.
         */
        public Builder setUniVal1(int value) {

          uniVal1_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 2
         * </pre>
         *
         * <code>optional sint32 UniVal1 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniVal1() {
          bitField0_ = (bitField0_ & ~0x00000002);
          uniVal1_ = 0;
          onChanged();
          return this;
        }

        private int uniVal2_ ;
        /**
         * <pre>
         *[4] Данные универсального входа 3
         * </pre>
         *
         * <code>optional sint32 UniVal2 = 3;</code>
         * @return Whether the uniVal2 field is set.
         */
        @java.lang.Override
        public boolean hasUniVal2() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[4] Данные универсального входа 3
         * </pre>
         *
         * <code>optional sint32 UniVal2 = 3;</code>
         * @return The uniVal2.
         */
        @java.lang.Override
        public int getUniVal2() {
          return uniVal2_;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 3
         * </pre>
         *
         * <code>optional sint32 UniVal2 = 3;</code>
         * @param value The uniVal2 to set.
         * @return This builder for chaining.
         */
        public Builder setUniVal2(int value) {

          uniVal2_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 3
         * </pre>
         *
         * <code>optional sint32 UniVal2 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniVal2() {
          bitField0_ = (bitField0_ & ~0x00000004);
          uniVal2_ = 0;
          onChanged();
          return this;
        }

        private int uniVal3_ ;
        /**
         * <pre>
         *[4] Данные универсального входа 4
         * </pre>
         *
         * <code>optional sint32 UniVal3 = 4;</code>
         * @return Whether the uniVal3 field is set.
         */
        @java.lang.Override
        public boolean hasUniVal3() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[4] Данные универсального входа 4
         * </pre>
         *
         * <code>optional sint32 UniVal3 = 4;</code>
         * @return The uniVal3.
         */
        @java.lang.Override
        public int getUniVal3() {
          return uniVal3_;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 4
         * </pre>
         *
         * <code>optional sint32 UniVal3 = 4;</code>
         * @param value The uniVal3 to set.
         * @return This builder for chaining.
         */
        public Builder setUniVal3(int value) {

          uniVal3_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 4
         * </pre>
         *
         * <code>optional sint32 UniVal3 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniVal3() {
          bitField0_ = (bitField0_ & ~0x00000008);
          uniVal3_ = 0;
          onChanged();
          return this;
        }

        private int uniVal4_ ;
        /**
         * <pre>
         *[4] Данные универсального входа 5
         * </pre>
         *
         * <code>optional sint32 UniVal4 = 5;</code>
         * @return Whether the uniVal4 field is set.
         */
        @java.lang.Override
        public boolean hasUniVal4() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[4] Данные универсального входа 5
         * </pre>
         *
         * <code>optional sint32 UniVal4 = 5;</code>
         * @return The uniVal4.
         */
        @java.lang.Override
        public int getUniVal4() {
          return uniVal4_;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 5
         * </pre>
         *
         * <code>optional sint32 UniVal4 = 5;</code>
         * @param value The uniVal4 to set.
         * @return This builder for chaining.
         */
        public Builder setUniVal4(int value) {

          uniVal4_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 5
         * </pre>
         *
         * <code>optional sint32 UniVal4 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniVal4() {
          bitField0_ = (bitField0_ & ~0x00000010);
          uniVal4_ = 0;
          onChanged();
          return this;
        }

        private int uniVal5_ ;
        /**
         * <pre>
         *[4] Данные универсального входа 6
         * </pre>
         *
         * <code>optional sint32 UniVal5 = 6;</code>
         * @return Whether the uniVal5 field is set.
         */
        @java.lang.Override
        public boolean hasUniVal5() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[4] Данные универсального входа 6
         * </pre>
         *
         * <code>optional sint32 UniVal5 = 6;</code>
         * @return The uniVal5.
         */
        @java.lang.Override
        public int getUniVal5() {
          return uniVal5_;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 6
         * </pre>
         *
         * <code>optional sint32 UniVal5 = 6;</code>
         * @param value The uniVal5 to set.
         * @return This builder for chaining.
         */
        public Builder setUniVal5(int value) {

          uniVal5_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Данные универсального входа 6
         * </pre>
         *
         * <code>optional sint32 UniVal5 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearUniVal5() {
          bitField0_ = (bitField0_ & ~0x00000020);
          uniVal5_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.UniDt)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<UniDt>
          PARSER = new com.google.protobuf.AbstractParser<UniDt>() {
        @java.lang.Override
        public UniDt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<UniDt> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UniDt> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CanDt_J1939OrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[1] Cостояние парковочного тормоза
       * </pre>
       *
       * <code>optional uint32 SPN70 = 70;</code>
       * @return Whether the sPN70 field is set.
       */
      boolean hasSPN70();
      /**
       * <pre>
       *[1] Cостояние парковочного тормоза
       * </pre>
       *
       * <code>optional uint32 SPN70 = 70;</code>
       * @return The sPN70.
       */
      int getSPN70();

      /**
       * <pre>
       * Возможные значения
       *00 - Parking brake not set 
       *01 - Parking brake set 
       *10 - Error 
       *11 - Not available
       * </pre>
       *
       * <code>optional uint32 SPN91 = 91;</code>
       * @return Whether the sPN91 field is set.
       */
      boolean hasSPN91();
      /**
       * <pre>
       * Возможные значения
       *00 - Parking brake not set 
       *01 - Parking brake set 
       *10 - Error 
       *11 - Not available
       * </pre>
       *
       * <code>optional uint32 SPN91 = 91;</code>
       * @return The sPN91.
       */
      int getSPN91();

      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN96 = 96;</code>
       * @return Whether the sPN96 field is set.
       */
      boolean hasSPN96();
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN96 = 96;</code>
       * @return The sPN96.
       */
      int getSPN96();

      /**
       * <pre>
       *[1] Давление масла двигателя (1 LSB=4 kPa)
       * </pre>
       *
       * <code>optional uint32 SPN100 = 100;</code>
       * @return Whether the sPN100 field is set.
       */
      boolean hasSPN100();
      /**
       * <pre>
       *[1] Давление масла двигателя (1 LSB=4 kPa)
       * </pre>
       *
       * <code>optional uint32 SPN100 = 100;</code>
       * @return The sPN100.
       */
      int getSPN100();

      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN110 = 110;</code>
       * @return Whether the sPN110 field is set.
       */
      boolean hasSPN110();
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN110 = 110;</code>
       * @return The sPN110.
       */
      int getSPN110();

      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN174 = 174;</code>
       * @return Whether the sPN174 field is set.
       */
      boolean hasSPN174();
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN174 = 174;</code>
       * @return The sPN174.
       */
      int getSPN174();

      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN175 = 175;</code>
       * @return Whether the sPN175 field is set.
       */
      boolean hasSPN175();
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN175 = 175;</code>
       * @return The sPN175.
       */
      int getSPN175();

      /**
       * <pre>
       *[4] суточный расход топлива (0.5 L)
       * </pre>
       *
       * <code>optional uint32 SPN182 = 182;</code>
       * @return Whether the sPN182 field is set.
       */
      boolean hasSPN182();
      /**
       * <pre>
       *[4] суточный расход топлива (0.5 L)
       * </pre>
       *
       * <code>optional uint32 SPN182 = 182;</code>
       * @return The sPN182.
       */
      int getSPN182();

      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN184 = 184;</code>
       * @return Whether the sPN184 field is set.
       */
      boolean hasSPN184();
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN184 = 184;</code>
       * @return The sPN184.
       */
      int getSPN184();

      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN190 = 190;</code>
       * @return Whether the sPN190 field is set.
       */
      boolean hasSPN190();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN190 = 190;</code>
       * @return The sPN190.
       */
      int getSPN190();

      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN244 = 244;</code>
       * @return Whether the sPN244 field is set.
       */
      boolean hasSPN244();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN244 = 244;</code>
       * @return The sPN244.
       */
      int getSPN244();

      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN245 = 245;</code>
       * @return Whether the sPN245 field is set.
       */
      boolean hasSPN245();
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN245 = 245;</code>
       * @return The sPN245.
       */
      int getSPN245();

      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN247 = 247;</code>
       * @return Whether the sPN247 field is set.
       */
      boolean hasSPN247();
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN247 = 247;</code>
       * @return The sPN247.
       */
      int getSPN247();

      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN250 = 250;</code>
       * @return Whether the sPN250 field is set.
       */
      boolean hasSPN250();
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN250 = 250;</code>
       * @return The sPN250.
       */
      int getSPN250();

      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN521 = 521;</code>
       * @return Whether the sPN521 field is set.
       */
      boolean hasSPN521();
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN521 = 521;</code>
       * @return The sPN521.
       */
      int getSPN521();

      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN522 = 522;</code>
       * @return Whether the sPN522 field is set.
       */
      boolean hasSPN522();
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN522 = 522;</code>
       * @return The sPN522.
       */
      int getSPN522();

      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN527 = 527;</code>
       * @return Whether the sPN527 field is set.
       */
      boolean hasSPN527();
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN527 = 527;</code>
       * @return The sPN527.
       */
      int getSPN527();

      /**
       * <pre>
       * Возможные значения:
       *0 = Off/Disabled
       *1 = Hold
       *2 = Accelerate
       *3 = Decelerate
       *4 = Resume
       *5 = Set
       *6 = Accelerator Override
       *7 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
       * @return A list containing the sPN582.
       */
      java.util.List<java.lang.Integer> getSPN582List();
      /**
       * <pre>
       * Возможные значения:
       *0 = Off/Disabled
       *1 = Hold
       *2 = Accelerate
       *3 = Decelerate
       *4 = Resume
       *5 = Set
       *6 = Accelerator Override
       *7 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
       * @return The count of sPN582.
       */
      int getSPN582Count();
      /**
       * <pre>
       * Возможные значения:
       *0 = Off/Disabled
       *1 = Hold
       *2 = Accelerate
       *3 = Decelerate
       *4 = Resume
       *5 = Set
       *6 = Accelerator Override
       *7 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The sPN582 at the given index.
       */
      int getSPN582(int index);

      /**
       * <pre>
       *[2*8] Нагрузка на ось
       * </pre>
       *
       * <code>optional uint32 SPN597 = 597;</code>
       * @return Whether the sPN597 field is set.
       */
      boolean hasSPN597();
      /**
       * <pre>
       *[2*8] Нагрузка на ось
       * </pre>
       *
       * <code>optional uint32 SPN597 = 597;</code>
       * @return The sPN597.
       */
      int getSPN597();

      /**
       * <pre>
       * Возможные значения:
       *0 = Brake pedal released
       *1 = Brake pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN598 = 598;</code>
       * @return Whether the sPN598 field is set.
       */
      boolean hasSPN598();
      /**
       * <pre>
       * Возможные значения:
       *0 = Brake pedal released
       *1 = Brake pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN598 = 598;</code>
       * @return The sPN598.
       */
      int getSPN598();

      /**
       * <pre>
       * Возможные значения:
       *0 = Clutch pedal released
       *1 = Clutch pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN914 = 914;</code>
       * @return Whether the sPN914 field is set.
       */
      boolean hasSPN914();
      /**
       * <pre>
       * Возможные значения:
       *0 = Clutch pedal released
       *1 = Clutch pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN914 = 914;</code>
       * @return The sPN914.
       */
      int getSPN914();

      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN916 = 916;</code>
       * @return Whether the sPN916 field is set.
       */
      boolean hasSPN916();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN916 = 916;</code>
       * @return The sPN916.
       */
      int getSPN916();

      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
       * @return A list containing the sPN928.
       */
      java.util.List<java.lang.Integer> getSPN928List();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
       * @return The count of sPN928.
       */
      int getSPN928Count();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The sPN928 at the given index.
       */
      int getSPN928(int index);

      /**
       * <pre>
       *[1*8] индекс оси
       * </pre>
       *
       * <code>optional uint32 SPN1624 = 1624;</code>
       * @return Whether the sPN1624 field is set.
       */
      boolean hasSPN1624();
      /**
       * <pre>
       *[1*8] индекс оси
       * </pre>
       *
       * <code>optional uint32 SPN1624 = 1624;</code>
       * @return The sPN1624.
       */
      int getSPN1624();

      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1821 = 1821;</code>
       * @return Whether the sPN1821 field is set.
       */
      boolean hasSPN1821();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1821 = 1821;</code>
       * @return The sPN1821.
       */
      int getSPN1821();

      /**
       * <pre>
       * Возможные значения:
       *0 = At least 1 door is open
       *1 = Closing last door
       *2 =  All doors closed
       *3..13 = Not defined
       *14 = Error
       *15 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1856 = 1856;</code>
       * @return Whether the sPN1856 field is set.
       */
      boolean hasSPN1856();
      /**
       * <pre>
       * Возможные значения:
       *0 = At least 1 door is open
       *1 = Closing last door
       *2 =  All doors closed
       *3..13 = Not defined
       *14 = Error
       *15 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1856 = 1856;</code>
       * @return The sPN1856.
       */
      int getSPN1856();
    }
    /**
     * <pre>
     * Данные шины CAN (протокол J1939)
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939}
     */
    public static final class CanDt_J1939 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939)
        CanDt_J1939OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CanDt_J1939.newBuilder() to construct.
      private CanDt_J1939(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CanDt_J1939() {
        sPN582_ = emptyIntList();
        sPN928_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CanDt_J1939();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder.class);
      }

      private int bitField0_;
      public static final int SPN70_FIELD_NUMBER = 70;
      private int sPN70_ = 0;
      /**
       * <pre>
       *[1] Cостояние парковочного тормоза
       * </pre>
       *
       * <code>optional uint32 SPN70 = 70;</code>
       * @return Whether the sPN70 field is set.
       */
      @java.lang.Override
      public boolean hasSPN70() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[1] Cостояние парковочного тормоза
       * </pre>
       *
       * <code>optional uint32 SPN70 = 70;</code>
       * @return The sPN70.
       */
      @java.lang.Override
      public int getSPN70() {
        return sPN70_;
      }

      public static final int SPN91_FIELD_NUMBER = 91;
      private int sPN91_ = 0;
      /**
       * <pre>
       * Возможные значения
       *00 - Parking brake not set 
       *01 - Parking brake set 
       *10 - Error 
       *11 - Not available
       * </pre>
       *
       * <code>optional uint32 SPN91 = 91;</code>
       * @return Whether the sPN91 field is set.
       */
      @java.lang.Override
      public boolean hasSPN91() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Возможные значения
       *00 - Parking brake not set 
       *01 - Parking brake set 
       *10 - Error 
       *11 - Not available
       * </pre>
       *
       * <code>optional uint32 SPN91 = 91;</code>
       * @return The sPN91.
       */
      @java.lang.Override
      public int getSPN91() {
        return sPN91_;
      }

      public static final int SPN96_FIELD_NUMBER = 96;
      private int sPN96_ = 0;
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN96 = 96;</code>
       * @return Whether the sPN96 field is set.
       */
      @java.lang.Override
      public boolean hasSPN96() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN96 = 96;</code>
       * @return The sPN96.
       */
      @java.lang.Override
      public int getSPN96() {
        return sPN96_;
      }

      public static final int SPN100_FIELD_NUMBER = 100;
      private int sPN100_ = 0;
      /**
       * <pre>
       *[1] Давление масла двигателя (1 LSB=4 kPa)
       * </pre>
       *
       * <code>optional uint32 SPN100 = 100;</code>
       * @return Whether the sPN100 field is set.
       */
      @java.lang.Override
      public boolean hasSPN100() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[1] Давление масла двигателя (1 LSB=4 kPa)
       * </pre>
       *
       * <code>optional uint32 SPN100 = 100;</code>
       * @return The sPN100.
       */
      @java.lang.Override
      public int getSPN100() {
        return sPN100_;
      }

      public static final int SPN110_FIELD_NUMBER = 110;
      private int sPN110_ = 0;
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN110 = 110;</code>
       * @return Whether the sPN110 field is set.
       */
      @java.lang.Override
      public boolean hasSPN110() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN110 = 110;</code>
       * @return The sPN110.
       */
      @java.lang.Override
      public int getSPN110() {
        return sPN110_;
      }

      public static final int SPN174_FIELD_NUMBER = 174;
      private int sPN174_ = 0;
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN174 = 174;</code>
       * @return Whether the sPN174 field is set.
       */
      @java.lang.Override
      public boolean hasSPN174() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *254 = Error
       *255 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN174 = 174;</code>
       * @return The sPN174.
       */
      @java.lang.Override
      public int getSPN174() {
        return sPN174_;
      }

      public static final int SPN175_FIELD_NUMBER = 175;
      private int sPN175_ = 0;
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN175 = 175;</code>
       * @return Whether the sPN175 field is set.
       */
      @java.lang.Override
      public boolean hasSPN175() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN175 = 175;</code>
       * @return The sPN175.
       */
      @java.lang.Override
      public int getSPN175() {
        return sPN175_;
      }

      public static final int SPN182_FIELD_NUMBER = 182;
      private int sPN182_ = 0;
      /**
       * <pre>
       *[4] суточный расход топлива (0.5 L)
       * </pre>
       *
       * <code>optional uint32 SPN182 = 182;</code>
       * @return Whether the sPN182 field is set.
       */
      @java.lang.Override
      public boolean hasSPN182() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *[4] суточный расход топлива (0.5 L)
       * </pre>
       *
       * <code>optional uint32 SPN182 = 182;</code>
       * @return The sPN182.
       */
      @java.lang.Override
      public int getSPN182() {
        return sPN182_;
      }

      public static final int SPN184_FIELD_NUMBER = 184;
      private int sPN184_ = 0;
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN184 = 184;</code>
       * @return Whether the sPN184 field is set.
       */
      @java.lang.Override
      public boolean hasSPN184() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN184 = 184;</code>
       * @return The sPN184.
       */
      @java.lang.Override
      public int getSPN184() {
        return sPN184_;
      }

      public static final int SPN190_FIELD_NUMBER = 190;
      private int sPN190_ = 0;
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN190 = 190;</code>
       * @return Whether the sPN190 field is set.
       */
      @java.lang.Override
      public boolean hasSPN190() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN190 = 190;</code>
       * @return The sPN190.
       */
      @java.lang.Override
      public int getSPN190() {
        return sPN190_;
      }

      public static final int SPN244_FIELD_NUMBER = 244;
      private int sPN244_ = 0;
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN244 = 244;</code>
       * @return Whether the sPN244 field is set.
       */
      @java.lang.Override
      public boolean hasSPN244() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN244 = 244;</code>
       * @return The sPN244.
       */
      @java.lang.Override
      public int getSPN244() {
        return sPN244_;
      }

      public static final int SPN245_FIELD_NUMBER = 245;
      private int sPN245_ = 0;
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN245 = 245;</code>
       * @return Whether the sPN245 field is set.
       */
      @java.lang.Override
      public boolean hasSPN245() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN245 = 245;</code>
       * @return The sPN245.
       */
      @java.lang.Override
      public int getSPN245() {
        return sPN245_;
      }

      public static final int SPN247_FIELD_NUMBER = 247;
      private int sPN247_ = 0;
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN247 = 247;</code>
       * @return Whether the sPN247 field is set.
       */
      @java.lang.Override
      public boolean hasSPN247() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN247 = 247;</code>
       * @return The sPN247.
       */
      @java.lang.Override
      public int getSPN247() {
        return sPN247_;
      }

      public static final int SPN250_FIELD_NUMBER = 250;
      private int sPN250_ = 0;
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN250 = 250;</code>
       * @return Whether the sPN250 field is set.
       */
      @java.lang.Override
      public boolean hasSPN250() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN250 = 250;</code>
       * @return The sPN250.
       */
      @java.lang.Override
      public int getSPN250() {
        return sPN250_;
      }

      public static final int SPN521_FIELD_NUMBER = 521;
      private int sPN521_ = 0;
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN521 = 521;</code>
       * @return Whether the sPN521 field is set.
       */
      @java.lang.Override
      public boolean hasSPN521() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *4 261 412 864 .. 4 278 190 079 =Error
       *4 278 190 080 .. 4 294 967 294 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN521 = 521;</code>
       * @return The sPN521.
       */
      @java.lang.Override
      public int getSPN521() {
        return sPN521_;
      }

      public static final int SPN522_FIELD_NUMBER = 522;
      private int sPN522_ = 0;
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN522 = 522;</code>
       * @return Whether the sPN522 field is set.
       */
      @java.lang.Override
      public boolean hasSPN522() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN522 = 522;</code>
       * @return The sPN522.
       */
      @java.lang.Override
      public int getSPN522() {
        return sPN522_;
      }

      public static final int SPN527_FIELD_NUMBER = 527;
      private int sPN527_ = 0;
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN527 = 527;</code>
       * @return Whether the sPN527 field is set.
       */
      @java.lang.Override
      public boolean hasSPN527() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *254=Error
       *255= Not available
       * </pre>
       *
       * <code>optional uint32 SPN527 = 527;</code>
       * @return The sPN527.
       */
      @java.lang.Override
      public int getSPN527() {
        return sPN527_;
      }

      public static final int SPN582_FIELD_NUMBER = 582;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList sPN582_ =
          emptyIntList();
      /**
       * <pre>
       * Возможные значения:
       *0 = Off/Disabled
       *1 = Hold
       *2 = Accelerate
       *3 = Decelerate
       *4 = Resume
       *5 = Set
       *6 = Accelerator Override
       *7 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
       * @return A list containing the sPN582.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSPN582List() {
        return sPN582_;
      }
      /**
       * <pre>
       * Возможные значения:
       *0 = Off/Disabled
       *1 = Hold
       *2 = Accelerate
       *3 = Decelerate
       *4 = Resume
       *5 = Set
       *6 = Accelerator Override
       *7 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
       * @return The count of sPN582.
       */
      public int getSPN582Count() {
        return sPN582_.size();
      }
      /**
       * <pre>
       * Возможные значения:
       *0 = Off/Disabled
       *1 = Hold
       *2 = Accelerate
       *3 = Decelerate
       *4 = Resume
       *5 = Set
       *6 = Accelerator Override
       *7 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The sPN582 at the given index.
       */
      public int getSPN582(int index) {
        return sPN582_.getInt(index);
      }
      private int sPN582MemoizedSerializedSize = -1;

      public static final int SPN597_FIELD_NUMBER = 597;
      private int sPN597_ = 0;
      /**
       * <pre>
       *[2*8] Нагрузка на ось
       * </pre>
       *
       * <code>optional uint32 SPN597 = 597;</code>
       * @return Whether the sPN597 field is set.
       */
      @java.lang.Override
      public boolean hasSPN597() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       *[2*8] Нагрузка на ось
       * </pre>
       *
       * <code>optional uint32 SPN597 = 597;</code>
       * @return The sPN597.
       */
      @java.lang.Override
      public int getSPN597() {
        return sPN597_;
      }

      public static final int SPN598_FIELD_NUMBER = 598;
      private int sPN598_ = 0;
      /**
       * <pre>
       * Возможные значения:
       *0 = Brake pedal released
       *1 = Brake pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN598 = 598;</code>
       * @return Whether the sPN598 field is set.
       */
      @java.lang.Override
      public boolean hasSPN598() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       * Возможные значения:
       *0 = Brake pedal released
       *1 = Brake pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN598 = 598;</code>
       * @return The sPN598.
       */
      @java.lang.Override
      public int getSPN598() {
        return sPN598_;
      }

      public static final int SPN914_FIELD_NUMBER = 914;
      private int sPN914_ = 0;
      /**
       * <pre>
       * Возможные значения:
       *0 = Clutch pedal released
       *1 = Clutch pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN914 = 914;</code>
       * @return Whether the sPN914 field is set.
       */
      @java.lang.Override
      public boolean hasSPN914() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <pre>
       * Возможные значения:
       *0 = Clutch pedal released
       *1 = Clutch pedal depressed
       *2 = Error
       *3 = Not Available
       * </pre>
       *
       * <code>optional uint32 SPN914 = 914;</code>
       * @return The sPN914.
       */
      @java.lang.Override
      public int getSPN914() {
        return sPN914_;
      }

      public static final int SPN916_FIELD_NUMBER = 916;
      private int sPN916_ = 0;
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN916 = 916;</code>
       * @return Whether the sPN916 field is set.
       */
      @java.lang.Override
      public boolean hasSPN916() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN916 = 916;</code>
       * @return The sPN916.
       */
      @java.lang.Override
      public int getSPN916() {
        return sPN916_;
      }

      public static final int SPN928_FIELD_NUMBER = 928;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList sPN928_ =
          emptyIntList();
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
       * @return A list containing the sPN928.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSPN928List() {
        return sPN928_;
      }
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
       * @return The count of sPN928.
       */
      public int getSPN928Count() {
        return sPN928_.size();
      }
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The sPN928 at the given index.
       */
      public int getSPN928(int index) {
        return sPN928_.getInt(index);
      }
      private int sPN928MemoizedSerializedSize = -1;

      public static final int SPN1624_FIELD_NUMBER = 1624;
      private int sPN1624_ = 0;
      /**
       * <pre>
       *[1*8] индекс оси
       * </pre>
       *
       * <code>optional uint32 SPN1624 = 1624;</code>
       * @return Whether the sPN1624 field is set.
       */
      @java.lang.Override
      public boolean hasSPN1624() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <pre>
       *[1*8] индекс оси
       * </pre>
       *
       * <code>optional uint32 SPN1624 = 1624;</code>
       * @return The sPN1624.
       */
      @java.lang.Override
      public int getSPN1624() {
        return sPN1624_;
      }

      public static final int SPN1821_FIELD_NUMBER = 1821;
      private int sPN1821_ = 0;
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1821 = 1821;</code>
       * @return Whether the sPN1821 field is set.
       */
      @java.lang.Override
      public boolean hasSPN1821() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <pre>
       * Ошибки:
       *65 024 .. 65 279 =Error
       *65 280 .. 65 535 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1821 = 1821;</code>
       * @return The sPN1821.
       */
      @java.lang.Override
      public int getSPN1821() {
        return sPN1821_;
      }

      public static final int SPN1856_FIELD_NUMBER = 1856;
      private int sPN1856_ = 0;
      /**
       * <pre>
       * Возможные значения:
       *0 = At least 1 door is open
       *1 = Closing last door
       *2 =  All doors closed
       *3..13 = Not defined
       *14 = Error
       *15 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1856 = 1856;</code>
       * @return Whether the sPN1856 field is set.
       */
      @java.lang.Override
      public boolean hasSPN1856() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <pre>
       * Возможные значения:
       *0 = At least 1 door is open
       *1 = Closing last door
       *2 =  All doors closed
       *3..13 = Not defined
       *14 = Error
       *15 = Not available
       * </pre>
       *
       * <code>optional uint32 SPN1856 = 1856;</code>
       * @return The sPN1856.
       */
      @java.lang.Override
      public int getSPN1856() {
        return sPN1856_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(70, sPN70_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(91, sPN91_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(96, sPN96_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(100, sPN100_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(110, sPN110_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(174, sPN174_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(175, sPN175_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(182, sPN182_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeUInt32(184, sPN184_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeUInt32(190, sPN190_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeUInt32(244, sPN244_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeUInt32(245, sPN245_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeUInt32(247, sPN247_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          output.writeUInt32(250, sPN250_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          output.writeUInt32(521, sPN521_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          output.writeUInt32(522, sPN522_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          output.writeUInt32(527, sPN527_);
        }
        if (getSPN582List().size() > 0) {
          output.writeUInt32NoTag(4658);
          output.writeUInt32NoTag(sPN582MemoizedSerializedSize);
        }
        for (int i = 0; i < sPN582_.size(); i++) {
          output.writeUInt32NoTag(sPN582_.getInt(i));
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          output.writeUInt32(597, sPN597_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          output.writeUInt32(598, sPN598_);
        }
        if (((bitField0_ & 0x00080000) != 0)) {
          output.writeUInt32(914, sPN914_);
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          output.writeUInt32(916, sPN916_);
        }
        if (getSPN928List().size() > 0) {
          output.writeUInt32NoTag(7426);
          output.writeUInt32NoTag(sPN928MemoizedSerializedSize);
        }
        for (int i = 0; i < sPN928_.size(); i++) {
          output.writeUInt32NoTag(sPN928_.getInt(i));
        }
        if (((bitField0_ & 0x00200000) != 0)) {
          output.writeUInt32(1624, sPN1624_);
        }
        if (((bitField0_ & 0x00400000) != 0)) {
          output.writeUInt32(1821, sPN1821_);
        }
        if (((bitField0_ & 0x00800000) != 0)) {
          output.writeUInt32(1856, sPN1856_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(70, sPN70_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(91, sPN91_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(96, sPN96_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(100, sPN100_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(110, sPN110_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(174, sPN174_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(175, sPN175_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(182, sPN182_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(184, sPN184_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(190, sPN190_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(244, sPN244_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(245, sPN245_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(247, sPN247_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(250, sPN250_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(521, sPN521_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(522, sPN522_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(527, sPN527_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < sPN582_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(sPN582_.getInt(i));
          }
          size += dataSize;
          if (!getSPN582List().isEmpty()) {
            size += 2;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          sPN582MemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(597, sPN597_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(598, sPN598_);
        }
        if (((bitField0_ & 0x00080000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(914, sPN914_);
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(916, sPN916_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < sPN928_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(sPN928_.getInt(i));
          }
          size += dataSize;
          if (!getSPN928List().isEmpty()) {
            size += 2;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          sPN928MemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00200000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1624, sPN1624_);
        }
        if (((bitField0_ & 0x00400000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1821, sPN1821_);
        }
        if (((bitField0_ & 0x00800000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1856, sPN1856_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) obj;

        if (hasSPN70() != other.hasSPN70()) return false;
        if (hasSPN70()) {
          if (getSPN70()
              != other.getSPN70()) return false;
        }
        if (hasSPN91() != other.hasSPN91()) return false;
        if (hasSPN91()) {
          if (getSPN91()
              != other.getSPN91()) return false;
        }
        if (hasSPN96() != other.hasSPN96()) return false;
        if (hasSPN96()) {
          if (getSPN96()
              != other.getSPN96()) return false;
        }
        if (hasSPN100() != other.hasSPN100()) return false;
        if (hasSPN100()) {
          if (getSPN100()
              != other.getSPN100()) return false;
        }
        if (hasSPN110() != other.hasSPN110()) return false;
        if (hasSPN110()) {
          if (getSPN110()
              != other.getSPN110()) return false;
        }
        if (hasSPN174() != other.hasSPN174()) return false;
        if (hasSPN174()) {
          if (getSPN174()
              != other.getSPN174()) return false;
        }
        if (hasSPN175() != other.hasSPN175()) return false;
        if (hasSPN175()) {
          if (getSPN175()
              != other.getSPN175()) return false;
        }
        if (hasSPN182() != other.hasSPN182()) return false;
        if (hasSPN182()) {
          if (getSPN182()
              != other.getSPN182()) return false;
        }
        if (hasSPN184() != other.hasSPN184()) return false;
        if (hasSPN184()) {
          if (getSPN184()
              != other.getSPN184()) return false;
        }
        if (hasSPN190() != other.hasSPN190()) return false;
        if (hasSPN190()) {
          if (getSPN190()
              != other.getSPN190()) return false;
        }
        if (hasSPN244() != other.hasSPN244()) return false;
        if (hasSPN244()) {
          if (getSPN244()
              != other.getSPN244()) return false;
        }
        if (hasSPN245() != other.hasSPN245()) return false;
        if (hasSPN245()) {
          if (getSPN245()
              != other.getSPN245()) return false;
        }
        if (hasSPN247() != other.hasSPN247()) return false;
        if (hasSPN247()) {
          if (getSPN247()
              != other.getSPN247()) return false;
        }
        if (hasSPN250() != other.hasSPN250()) return false;
        if (hasSPN250()) {
          if (getSPN250()
              != other.getSPN250()) return false;
        }
        if (hasSPN521() != other.hasSPN521()) return false;
        if (hasSPN521()) {
          if (getSPN521()
              != other.getSPN521()) return false;
        }
        if (hasSPN522() != other.hasSPN522()) return false;
        if (hasSPN522()) {
          if (getSPN522()
              != other.getSPN522()) return false;
        }
        if (hasSPN527() != other.hasSPN527()) return false;
        if (hasSPN527()) {
          if (getSPN527()
              != other.getSPN527()) return false;
        }
        if (!getSPN582List()
            .equals(other.getSPN582List())) return false;
        if (hasSPN597() != other.hasSPN597()) return false;
        if (hasSPN597()) {
          if (getSPN597()
              != other.getSPN597()) return false;
        }
        if (hasSPN598() != other.hasSPN598()) return false;
        if (hasSPN598()) {
          if (getSPN598()
              != other.getSPN598()) return false;
        }
        if (hasSPN914() != other.hasSPN914()) return false;
        if (hasSPN914()) {
          if (getSPN914()
              != other.getSPN914()) return false;
        }
        if (hasSPN916() != other.hasSPN916()) return false;
        if (hasSPN916()) {
          if (getSPN916()
              != other.getSPN916()) return false;
        }
        if (!getSPN928List()
            .equals(other.getSPN928List())) return false;
        if (hasSPN1624() != other.hasSPN1624()) return false;
        if (hasSPN1624()) {
          if (getSPN1624()
              != other.getSPN1624()) return false;
        }
        if (hasSPN1821() != other.hasSPN1821()) return false;
        if (hasSPN1821()) {
          if (getSPN1821()
              != other.getSPN1821()) return false;
        }
        if (hasSPN1856() != other.hasSPN1856()) return false;
        if (hasSPN1856()) {
          if (getSPN1856()
              != other.getSPN1856()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSPN70()) {
          hash = (37 * hash) + SPN70_FIELD_NUMBER;
          hash = (53 * hash) + getSPN70();
        }
        if (hasSPN91()) {
          hash = (37 * hash) + SPN91_FIELD_NUMBER;
          hash = (53 * hash) + getSPN91();
        }
        if (hasSPN96()) {
          hash = (37 * hash) + SPN96_FIELD_NUMBER;
          hash = (53 * hash) + getSPN96();
        }
        if (hasSPN100()) {
          hash = (37 * hash) + SPN100_FIELD_NUMBER;
          hash = (53 * hash) + getSPN100();
        }
        if (hasSPN110()) {
          hash = (37 * hash) + SPN110_FIELD_NUMBER;
          hash = (53 * hash) + getSPN110();
        }
        if (hasSPN174()) {
          hash = (37 * hash) + SPN174_FIELD_NUMBER;
          hash = (53 * hash) + getSPN174();
        }
        if (hasSPN175()) {
          hash = (37 * hash) + SPN175_FIELD_NUMBER;
          hash = (53 * hash) + getSPN175();
        }
        if (hasSPN182()) {
          hash = (37 * hash) + SPN182_FIELD_NUMBER;
          hash = (53 * hash) + getSPN182();
        }
        if (hasSPN184()) {
          hash = (37 * hash) + SPN184_FIELD_NUMBER;
          hash = (53 * hash) + getSPN184();
        }
        if (hasSPN190()) {
          hash = (37 * hash) + SPN190_FIELD_NUMBER;
          hash = (53 * hash) + getSPN190();
        }
        if (hasSPN244()) {
          hash = (37 * hash) + SPN244_FIELD_NUMBER;
          hash = (53 * hash) + getSPN244();
        }
        if (hasSPN245()) {
          hash = (37 * hash) + SPN245_FIELD_NUMBER;
          hash = (53 * hash) + getSPN245();
        }
        if (hasSPN247()) {
          hash = (37 * hash) + SPN247_FIELD_NUMBER;
          hash = (53 * hash) + getSPN247();
        }
        if (hasSPN250()) {
          hash = (37 * hash) + SPN250_FIELD_NUMBER;
          hash = (53 * hash) + getSPN250();
        }
        if (hasSPN521()) {
          hash = (37 * hash) + SPN521_FIELD_NUMBER;
          hash = (53 * hash) + getSPN521();
        }
        if (hasSPN522()) {
          hash = (37 * hash) + SPN522_FIELD_NUMBER;
          hash = (53 * hash) + getSPN522();
        }
        if (hasSPN527()) {
          hash = (37 * hash) + SPN527_FIELD_NUMBER;
          hash = (53 * hash) + getSPN527();
        }
        if (getSPN582Count() > 0) {
          hash = (37 * hash) + SPN582_FIELD_NUMBER;
          hash = (53 * hash) + getSPN582List().hashCode();
        }
        if (hasSPN597()) {
          hash = (37 * hash) + SPN597_FIELD_NUMBER;
          hash = (53 * hash) + getSPN597();
        }
        if (hasSPN598()) {
          hash = (37 * hash) + SPN598_FIELD_NUMBER;
          hash = (53 * hash) + getSPN598();
        }
        if (hasSPN914()) {
          hash = (37 * hash) + SPN914_FIELD_NUMBER;
          hash = (53 * hash) + getSPN914();
        }
        if (hasSPN916()) {
          hash = (37 * hash) + SPN916_FIELD_NUMBER;
          hash = (53 * hash) + getSPN916();
        }
        if (getSPN928Count() > 0) {
          hash = (37 * hash) + SPN928_FIELD_NUMBER;
          hash = (53 * hash) + getSPN928List().hashCode();
        }
        if (hasSPN1624()) {
          hash = (37 * hash) + SPN1624_FIELD_NUMBER;
          hash = (53 * hash) + getSPN1624();
        }
        if (hasSPN1821()) {
          hash = (37 * hash) + SPN1821_FIELD_NUMBER;
          hash = (53 * hash) + getSPN1821();
        }
        if (hasSPN1856()) {
          hash = (37 * hash) + SPN1856_FIELD_NUMBER;
          hash = (53 * hash) + getSPN1856();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Данные шины CAN (протокол J1939)
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          sPN70_ = 0;
          sPN91_ = 0;
          sPN96_ = 0;
          sPN100_ = 0;
          sPN110_ = 0;
          sPN174_ = 0;
          sPN175_ = 0;
          sPN182_ = 0;
          sPN184_ = 0;
          sPN190_ = 0;
          sPN244_ = 0;
          sPN245_ = 0;
          sPN247_ = 0;
          sPN250_ = 0;
          sPN521_ = 0;
          sPN522_ = 0;
          sPN527_ = 0;
          sPN582_ = emptyIntList();
          sPN597_ = 0;
          sPN598_ = 0;
          sPN914_ = 0;
          sPN916_ = 0;
          sPN928_ = emptyIntList();
          sPN1624_ = 0;
          sPN1821_ = 0;
          sPN1856_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.sPN70_ = sPN70_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.sPN91_ = sPN91_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.sPN96_ = sPN96_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.sPN100_ = sPN100_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.sPN110_ = sPN110_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.sPN174_ = sPN174_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.sPN175_ = sPN175_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.sPN182_ = sPN182_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.sPN184_ = sPN184_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.sPN190_ = sPN190_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.sPN244_ = sPN244_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.sPN245_ = sPN245_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.sPN247_ = sPN247_;
            to_bitField0_ |= 0x00001000;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.sPN250_ = sPN250_;
            to_bitField0_ |= 0x00002000;
          }
          if (((from_bitField0_ & 0x00004000) != 0)) {
            result.sPN521_ = sPN521_;
            to_bitField0_ |= 0x00004000;
          }
          if (((from_bitField0_ & 0x00008000) != 0)) {
            result.sPN522_ = sPN522_;
            to_bitField0_ |= 0x00008000;
          }
          if (((from_bitField0_ & 0x00010000) != 0)) {
            result.sPN527_ = sPN527_;
            to_bitField0_ |= 0x00010000;
          }
          if (((from_bitField0_ & 0x00020000) != 0)) {
            sPN582_.makeImmutable();
            result.sPN582_ = sPN582_;
          }
          if (((from_bitField0_ & 0x00040000) != 0)) {
            result.sPN597_ = sPN597_;
            to_bitField0_ |= 0x00020000;
          }
          if (((from_bitField0_ & 0x00080000) != 0)) {
            result.sPN598_ = sPN598_;
            to_bitField0_ |= 0x00040000;
          }
          if (((from_bitField0_ & 0x00100000) != 0)) {
            result.sPN914_ = sPN914_;
            to_bitField0_ |= 0x00080000;
          }
          if (((from_bitField0_ & 0x00200000) != 0)) {
            result.sPN916_ = sPN916_;
            to_bitField0_ |= 0x00100000;
          }
          if (((from_bitField0_ & 0x00400000) != 0)) {
            sPN928_.makeImmutable();
            result.sPN928_ = sPN928_;
          }
          if (((from_bitField0_ & 0x00800000) != 0)) {
            result.sPN1624_ = sPN1624_;
            to_bitField0_ |= 0x00200000;
          }
          if (((from_bitField0_ & 0x01000000) != 0)) {
            result.sPN1821_ = sPN1821_;
            to_bitField0_ |= 0x00400000;
          }
          if (((from_bitField0_ & 0x02000000) != 0)) {
            result.sPN1856_ = sPN1856_;
            to_bitField0_ |= 0x00800000;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance()) return this;
          if (other.hasSPN70()) {
            setSPN70(other.getSPN70());
          }
          if (other.hasSPN91()) {
            setSPN91(other.getSPN91());
          }
          if (other.hasSPN96()) {
            setSPN96(other.getSPN96());
          }
          if (other.hasSPN100()) {
            setSPN100(other.getSPN100());
          }
          if (other.hasSPN110()) {
            setSPN110(other.getSPN110());
          }
          if (other.hasSPN174()) {
            setSPN174(other.getSPN174());
          }
          if (other.hasSPN175()) {
            setSPN175(other.getSPN175());
          }
          if (other.hasSPN182()) {
            setSPN182(other.getSPN182());
          }
          if (other.hasSPN184()) {
            setSPN184(other.getSPN184());
          }
          if (other.hasSPN190()) {
            setSPN190(other.getSPN190());
          }
          if (other.hasSPN244()) {
            setSPN244(other.getSPN244());
          }
          if (other.hasSPN245()) {
            setSPN245(other.getSPN245());
          }
          if (other.hasSPN247()) {
            setSPN247(other.getSPN247());
          }
          if (other.hasSPN250()) {
            setSPN250(other.getSPN250());
          }
          if (other.hasSPN521()) {
            setSPN521(other.getSPN521());
          }
          if (other.hasSPN522()) {
            setSPN522(other.getSPN522());
          }
          if (other.hasSPN527()) {
            setSPN527(other.getSPN527());
          }
          if (!other.sPN582_.isEmpty()) {
            if (sPN582_.isEmpty()) {
              sPN582_ = other.sPN582_;
              sPN582_.makeImmutable();
              bitField0_ |= 0x00020000;
            } else {
              ensureSPN582IsMutable();
              sPN582_.addAll(other.sPN582_);
            }
            onChanged();
          }
          if (other.hasSPN597()) {
            setSPN597(other.getSPN597());
          }
          if (other.hasSPN598()) {
            setSPN598(other.getSPN598());
          }
          if (other.hasSPN914()) {
            setSPN914(other.getSPN914());
          }
          if (other.hasSPN916()) {
            setSPN916(other.getSPN916());
          }
          if (!other.sPN928_.isEmpty()) {
            if (sPN928_.isEmpty()) {
              sPN928_ = other.sPN928_;
              sPN928_.makeImmutable();
              bitField0_ |= 0x00400000;
            } else {
              ensureSPN928IsMutable();
              sPN928_.addAll(other.sPN928_);
            }
            onChanged();
          }
          if (other.hasSPN1624()) {
            setSPN1624(other.getSPN1624());
          }
          if (other.hasSPN1821()) {
            setSPN1821(other.getSPN1821());
          }
          if (other.hasSPN1856()) {
            setSPN1856(other.getSPN1856());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 560: {
                  sPN70_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 560
                case 728: {
                  sPN91_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 728
                case 768: {
                  sPN96_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 768
                case 800: {
                  sPN100_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 800
                case 880: {
                  sPN110_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 880
                case 1392: {
                  sPN174_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 1392
                case 1400: {
                  sPN175_ = input.readUInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 1400
                case 1456: {
                  sPN182_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 1456
                case 1472: {
                  sPN184_ = input.readUInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 1472
                case 1520: {
                  sPN190_ = input.readUInt32();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 1520
                case 1952: {
                  sPN244_ = input.readUInt32();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 1952
                case 1960: {
                  sPN245_ = input.readUInt32();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 1960
                case 1976: {
                  sPN247_ = input.readUInt32();
                  bitField0_ |= 0x00001000;
                  break;
                } // case 1976
                case 2000: {
                  sPN250_ = input.readUInt32();
                  bitField0_ |= 0x00002000;
                  break;
                } // case 2000
                case 4168: {
                  sPN521_ = input.readUInt32();
                  bitField0_ |= 0x00004000;
                  break;
                } // case 4168
                case 4176: {
                  sPN522_ = input.readUInt32();
                  bitField0_ |= 0x00008000;
                  break;
                } // case 4176
                case 4216: {
                  sPN527_ = input.readUInt32();
                  bitField0_ |= 0x00010000;
                  break;
                } // case 4216
                case 4656: {
                  int v = input.readUInt32();
                  ensureSPN582IsMutable();
                  sPN582_.addInt(v);
                  break;
                } // case 4656
                case 4658: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureSPN582IsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    sPN582_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 4658
                case 4776: {
                  sPN597_ = input.readUInt32();
                  bitField0_ |= 0x00040000;
                  break;
                } // case 4776
                case 4784: {
                  sPN598_ = input.readUInt32();
                  bitField0_ |= 0x00080000;
                  break;
                } // case 4784
                case 7312: {
                  sPN914_ = input.readUInt32();
                  bitField0_ |= 0x00100000;
                  break;
                } // case 7312
                case 7328: {
                  sPN916_ = input.readUInt32();
                  bitField0_ |= 0x00200000;
                  break;
                } // case 7328
                case 7424: {
                  int v = input.readUInt32();
                  ensureSPN928IsMutable();
                  sPN928_.addInt(v);
                  break;
                } // case 7424
                case 7426: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureSPN928IsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    sPN928_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 7426
                case 12992: {
                  sPN1624_ = input.readUInt32();
                  bitField0_ |= 0x00800000;
                  break;
                } // case 12992
                case 14568: {
                  sPN1821_ = input.readUInt32();
                  bitField0_ |= 0x01000000;
                  break;
                } // case 14568
                case 14848: {
                  sPN1856_ = input.readUInt32();
                  bitField0_ |= 0x02000000;
                  break;
                } // case 14848
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int sPN70_ ;
        /**
         * <pre>
         *[1] Cостояние парковочного тормоза
         * </pre>
         *
         * <code>optional uint32 SPN70 = 70;</code>
         * @return Whether the sPN70 field is set.
         */
        @java.lang.Override
        public boolean hasSPN70() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[1] Cостояние парковочного тормоза
         * </pre>
         *
         * <code>optional uint32 SPN70 = 70;</code>
         * @return The sPN70.
         */
        @java.lang.Override
        public int getSPN70() {
          return sPN70_;
        }
        /**
         * <pre>
         *[1] Cостояние парковочного тормоза
         * </pre>
         *
         * <code>optional uint32 SPN70 = 70;</code>
         * @param value The sPN70 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN70(int value) {

          sPN70_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] Cостояние парковочного тормоза
         * </pre>
         *
         * <code>optional uint32 SPN70 = 70;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN70() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sPN70_ = 0;
          onChanged();
          return this;
        }

        private int sPN91_ ;
        /**
         * <pre>
         * Возможные значения
         *00 - Parking brake not set 
         *01 - Parking brake set 
         *10 - Error 
         *11 - Not available
         * </pre>
         *
         * <code>optional uint32 SPN91 = 91;</code>
         * @return Whether the sPN91 field is set.
         */
        @java.lang.Override
        public boolean hasSPN91() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Возможные значения
         *00 - Parking brake not set 
         *01 - Parking brake set 
         *10 - Error 
         *11 - Not available
         * </pre>
         *
         * <code>optional uint32 SPN91 = 91;</code>
         * @return The sPN91.
         */
        @java.lang.Override
        public int getSPN91() {
          return sPN91_;
        }
        /**
         * <pre>
         * Возможные значения
         *00 - Parking brake not set 
         *01 - Parking brake set 
         *10 - Error 
         *11 - Not available
         * </pre>
         *
         * <code>optional uint32 SPN91 = 91;</code>
         * @param value The sPN91 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN91(int value) {

          sPN91_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения
         *00 - Parking brake not set 
         *01 - Parking brake set 
         *10 - Error 
         *11 - Not available
         * </pre>
         *
         * <code>optional uint32 SPN91 = 91;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN91() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sPN91_ = 0;
          onChanged();
          return this;
        }

        private int sPN96_ ;
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN96 = 96;</code>
         * @return Whether the sPN96 field is set.
         */
        @java.lang.Override
        public boolean hasSPN96() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN96 = 96;</code>
         * @return The sPN96.
         */
        @java.lang.Override
        public int getSPN96() {
          return sPN96_;
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN96 = 96;</code>
         * @param value The sPN96 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN96(int value) {

          sPN96_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN96 = 96;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN96() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sPN96_ = 0;
          onChanged();
          return this;
        }

        private int sPN100_ ;
        /**
         * <pre>
         *[1] Давление масла двигателя (1 LSB=4 kPa)
         * </pre>
         *
         * <code>optional uint32 SPN100 = 100;</code>
         * @return Whether the sPN100 field is set.
         */
        @java.lang.Override
        public boolean hasSPN100() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[1] Давление масла двигателя (1 LSB=4 kPa)
         * </pre>
         *
         * <code>optional uint32 SPN100 = 100;</code>
         * @return The sPN100.
         */
        @java.lang.Override
        public int getSPN100() {
          return sPN100_;
        }
        /**
         * <pre>
         *[1] Давление масла двигателя (1 LSB=4 kPa)
         * </pre>
         *
         * <code>optional uint32 SPN100 = 100;</code>
         * @param value The sPN100 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN100(int value) {

          sPN100_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] Давление масла двигателя (1 LSB=4 kPa)
         * </pre>
         *
         * <code>optional uint32 SPN100 = 100;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN100() {
          bitField0_ = (bitField0_ & ~0x00000008);
          sPN100_ = 0;
          onChanged();
          return this;
        }

        private int sPN110_ ;
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN110 = 110;</code>
         * @return Whether the sPN110 field is set.
         */
        @java.lang.Override
        public boolean hasSPN110() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN110 = 110;</code>
         * @return The sPN110.
         */
        @java.lang.Override
        public int getSPN110() {
          return sPN110_;
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN110 = 110;</code>
         * @param value The sPN110 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN110(int value) {

          sPN110_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN110 = 110;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN110() {
          bitField0_ = (bitField0_ & ~0x00000010);
          sPN110_ = 0;
          onChanged();
          return this;
        }

        private int sPN174_ ;
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN174 = 174;</code>
         * @return Whether the sPN174 field is set.
         */
        @java.lang.Override
        public boolean hasSPN174() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN174 = 174;</code>
         * @return The sPN174.
         */
        @java.lang.Override
        public int getSPN174() {
          return sPN174_;
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN174 = 174;</code>
         * @param value The sPN174 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN174(int value) {

          sPN174_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *254 = Error
         *255 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN174 = 174;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN174() {
          bitField0_ = (bitField0_ & ~0x00000020);
          sPN174_ = 0;
          onChanged();
          return this;
        }

        private int sPN175_ ;
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN175 = 175;</code>
         * @return Whether the sPN175 field is set.
         */
        @java.lang.Override
        public boolean hasSPN175() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN175 = 175;</code>
         * @return The sPN175.
         */
        @java.lang.Override
        public int getSPN175() {
          return sPN175_;
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN175 = 175;</code>
         * @param value The sPN175 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN175(int value) {

          sPN175_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN175 = 175;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN175() {
          bitField0_ = (bitField0_ & ~0x00000040);
          sPN175_ = 0;
          onChanged();
          return this;
        }

        private int sPN182_ ;
        /**
         * <pre>
         *[4] суточный расход топлива (0.5 L)
         * </pre>
         *
         * <code>optional uint32 SPN182 = 182;</code>
         * @return Whether the sPN182 field is set.
         */
        @java.lang.Override
        public boolean hasSPN182() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         *[4] суточный расход топлива (0.5 L)
         * </pre>
         *
         * <code>optional uint32 SPN182 = 182;</code>
         * @return The sPN182.
         */
        @java.lang.Override
        public int getSPN182() {
          return sPN182_;
        }
        /**
         * <pre>
         *[4] суточный расход топлива (0.5 L)
         * </pre>
         *
         * <code>optional uint32 SPN182 = 182;</code>
         * @param value The sPN182 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN182(int value) {

          sPN182_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] суточный расход топлива (0.5 L)
         * </pre>
         *
         * <code>optional uint32 SPN182 = 182;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN182() {
          bitField0_ = (bitField0_ & ~0x00000080);
          sPN182_ = 0;
          onChanged();
          return this;
        }

        private int sPN184_ ;
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN184 = 184;</code>
         * @return Whether the sPN184 field is set.
         */
        @java.lang.Override
        public boolean hasSPN184() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN184 = 184;</code>
         * @return The sPN184.
         */
        @java.lang.Override
        public int getSPN184() {
          return sPN184_;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN184 = 184;</code>
         * @param value The sPN184 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN184(int value) {

          sPN184_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN184 = 184;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN184() {
          bitField0_ = (bitField0_ & ~0x00000100);
          sPN184_ = 0;
          onChanged();
          return this;
        }

        private int sPN190_ ;
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN190 = 190;</code>
         * @return Whether the sPN190 field is set.
         */
        @java.lang.Override
        public boolean hasSPN190() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN190 = 190;</code>
         * @return The sPN190.
         */
        @java.lang.Override
        public int getSPN190() {
          return sPN190_;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN190 = 190;</code>
         * @param value The sPN190 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN190(int value) {

          sPN190_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN190 = 190;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN190() {
          bitField0_ = (bitField0_ & ~0x00000200);
          sPN190_ = 0;
          onChanged();
          return this;
        }

        private int sPN244_ ;
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN244 = 244;</code>
         * @return Whether the sPN244 field is set.
         */
        @java.lang.Override
        public boolean hasSPN244() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN244 = 244;</code>
         * @return The sPN244.
         */
        @java.lang.Override
        public int getSPN244() {
          return sPN244_;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN244 = 244;</code>
         * @param value The sPN244 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN244(int value) {

          sPN244_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN244 = 244;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN244() {
          bitField0_ = (bitField0_ & ~0x00000400);
          sPN244_ = 0;
          onChanged();
          return this;
        }

        private int sPN245_ ;
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN245 = 245;</code>
         * @return Whether the sPN245 field is set.
         */
        @java.lang.Override
        public boolean hasSPN245() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN245 = 245;</code>
         * @return The sPN245.
         */
        @java.lang.Override
        public int getSPN245() {
          return sPN245_;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN245 = 245;</code>
         * @param value The sPN245 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN245(int value) {

          sPN245_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN245 = 245;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN245() {
          bitField0_ = (bitField0_ & ~0x00000800);
          sPN245_ = 0;
          onChanged();
          return this;
        }

        private int sPN247_ ;
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN247 = 247;</code>
         * @return Whether the sPN247 field is set.
         */
        @java.lang.Override
        public boolean hasSPN247() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN247 = 247;</code>
         * @return The sPN247.
         */
        @java.lang.Override
        public int getSPN247() {
          return sPN247_;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN247 = 247;</code>
         * @param value The sPN247 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN247(int value) {

          sPN247_ = value;
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN247 = 247;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN247() {
          bitField0_ = (bitField0_ & ~0x00001000);
          sPN247_ = 0;
          onChanged();
          return this;
        }

        private int sPN250_ ;
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN250 = 250;</code>
         * @return Whether the sPN250 field is set.
         */
        @java.lang.Override
        public boolean hasSPN250() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN250 = 250;</code>
         * @return The sPN250.
         */
        @java.lang.Override
        public int getSPN250() {
          return sPN250_;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN250 = 250;</code>
         * @param value The sPN250 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN250(int value) {

          sPN250_ = value;
          bitField0_ |= 0x00002000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN250 = 250;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN250() {
          bitField0_ = (bitField0_ & ~0x00002000);
          sPN250_ = 0;
          onChanged();
          return this;
        }

        private int sPN521_ ;
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN521 = 521;</code>
         * @return Whether the sPN521 field is set.
         */
        @java.lang.Override
        public boolean hasSPN521() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN521 = 521;</code>
         * @return The sPN521.
         */
        @java.lang.Override
        public int getSPN521() {
          return sPN521_;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN521 = 521;</code>
         * @param value The sPN521 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN521(int value) {

          sPN521_ = value;
          bitField0_ |= 0x00004000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *4 261 412 864 .. 4 278 190 079 =Error
         *4 278 190 080 .. 4 294 967 294 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN521 = 521;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN521() {
          bitField0_ = (bitField0_ & ~0x00004000);
          sPN521_ = 0;
          onChanged();
          return this;
        }

        private int sPN522_ ;
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN522 = 522;</code>
         * @return Whether the sPN522 field is set.
         */
        @java.lang.Override
        public boolean hasSPN522() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN522 = 522;</code>
         * @return The sPN522.
         */
        @java.lang.Override
        public int getSPN522() {
          return sPN522_;
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN522 = 522;</code>
         * @param value The sPN522 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN522(int value) {

          sPN522_ = value;
          bitField0_ |= 0x00008000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN522 = 522;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN522() {
          bitField0_ = (bitField0_ & ~0x00008000);
          sPN522_ = 0;
          onChanged();
          return this;
        }

        private int sPN527_ ;
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN527 = 527;</code>
         * @return Whether the sPN527 field is set.
         */
        @java.lang.Override
        public boolean hasSPN527() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN527 = 527;</code>
         * @return The sPN527.
         */
        @java.lang.Override
        public int getSPN527() {
          return sPN527_;
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN527 = 527;</code>
         * @param value The sPN527 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN527(int value) {

          sPN527_ = value;
          bitField0_ |= 0x00010000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *254=Error
         *255= Not available
         * </pre>
         *
         * <code>optional uint32 SPN527 = 527;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN527() {
          bitField0_ = (bitField0_ & ~0x00010000);
          sPN527_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList sPN582_ = emptyIntList();
        private void ensureSPN582IsMutable() {
          if (!sPN582_.isModifiable()) {
            sPN582_ = makeMutableCopy(sPN582_);
          }
          bitField0_ |= 0x00020000;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @return A list containing the sPN582.
         */
        public java.util.List<java.lang.Integer>
            getSPN582List() {
          sPN582_.makeImmutable();
          return sPN582_;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @return The count of sPN582.
         */
        public int getSPN582Count() {
          return sPN582_.size();
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The sPN582 at the given index.
         */
        public int getSPN582(int index) {
          return sPN582_.getInt(index);
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The sPN582 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN582(
            int index, int value) {

          ensureSPN582IsMutable();
          sPN582_.setInt(index, value);
          bitField0_ |= 0x00020000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @param value The sPN582 to add.
         * @return This builder for chaining.
         */
        public Builder addSPN582(int value) {

          ensureSPN582IsMutable();
          sPN582_.addInt(value);
          bitField0_ |= 0x00020000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @param values The sPN582 to add.
         * @return This builder for chaining.
         */
        public Builder addAllSPN582(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureSPN582IsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sPN582_);
          bitField0_ |= 0x00020000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Off/Disabled
         *1 = Hold
         *2 = Accelerate
         *3 = Decelerate
         *4 = Resume
         *5 = Set
         *6 = Accelerator Override
         *7 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN582 = 582 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN582() {
          sPN582_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
          return this;
        }

        private int sPN597_ ;
        /**
         * <pre>
         *[2*8] Нагрузка на ось
         * </pre>
         *
         * <code>optional uint32 SPN597 = 597;</code>
         * @return Whether the sPN597 field is set.
         */
        @java.lang.Override
        public boolean hasSPN597() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <pre>
         *[2*8] Нагрузка на ось
         * </pre>
         *
         * <code>optional uint32 SPN597 = 597;</code>
         * @return The sPN597.
         */
        @java.lang.Override
        public int getSPN597() {
          return sPN597_;
        }
        /**
         * <pre>
         *[2*8] Нагрузка на ось
         * </pre>
         *
         * <code>optional uint32 SPN597 = 597;</code>
         * @param value The sPN597 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN597(int value) {

          sPN597_ = value;
          bitField0_ |= 0x00040000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2*8] Нагрузка на ось
         * </pre>
         *
         * <code>optional uint32 SPN597 = 597;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN597() {
          bitField0_ = (bitField0_ & ~0x00040000);
          sPN597_ = 0;
          onChanged();
          return this;
        }

        private int sPN598_ ;
        /**
         * <pre>
         * Возможные значения:
         *0 = Brake pedal released
         *1 = Brake pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN598 = 598;</code>
         * @return Whether the sPN598 field is set.
         */
        @java.lang.Override
        public boolean hasSPN598() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Brake pedal released
         *1 = Brake pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN598 = 598;</code>
         * @return The sPN598.
         */
        @java.lang.Override
        public int getSPN598() {
          return sPN598_;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Brake pedal released
         *1 = Brake pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN598 = 598;</code>
         * @param value The sPN598 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN598(int value) {

          sPN598_ = value;
          bitField0_ |= 0x00080000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Brake pedal released
         *1 = Brake pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN598 = 598;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN598() {
          bitField0_ = (bitField0_ & ~0x00080000);
          sPN598_ = 0;
          onChanged();
          return this;
        }

        private int sPN914_ ;
        /**
         * <pre>
         * Возможные значения:
         *0 = Clutch pedal released
         *1 = Clutch pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN914 = 914;</code>
         * @return Whether the sPN914 field is set.
         */
        @java.lang.Override
        public boolean hasSPN914() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Clutch pedal released
         *1 = Clutch pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN914 = 914;</code>
         * @return The sPN914.
         */
        @java.lang.Override
        public int getSPN914() {
          return sPN914_;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Clutch pedal released
         *1 = Clutch pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN914 = 914;</code>
         * @param value The sPN914 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN914(int value) {

          sPN914_ = value;
          bitField0_ |= 0x00100000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = Clutch pedal released
         *1 = Clutch pedal depressed
         *2 = Error
         *3 = Not Available
         * </pre>
         *
         * <code>optional uint32 SPN914 = 914;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN914() {
          bitField0_ = (bitField0_ & ~0x00100000);
          sPN914_ = 0;
          onChanged();
          return this;
        }

        private int sPN916_ ;
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN916 = 916;</code>
         * @return Whether the sPN916 field is set.
         */
        @java.lang.Override
        public boolean hasSPN916() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN916 = 916;</code>
         * @return The sPN916.
         */
        @java.lang.Override
        public int getSPN916() {
          return sPN916_;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN916 = 916;</code>
         * @param value The sPN916 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN916(int value) {

          sPN916_ = value;
          bitField0_ |= 0x00200000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN916 = 916;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN916() {
          bitField0_ = (bitField0_ & ~0x00200000);
          sPN916_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList sPN928_ = emptyIntList();
        private void ensureSPN928IsMutable() {
          if (!sPN928_.isModifiable()) {
            sPN928_ = makeMutableCopy(sPN928_);
          }
          bitField0_ |= 0x00400000;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @return A list containing the sPN928.
         */
        public java.util.List<java.lang.Integer>
            getSPN928List() {
          sPN928_.makeImmutable();
          return sPN928_;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @return The count of sPN928.
         */
        public int getSPN928Count() {
          return sPN928_.size();
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The sPN928 at the given index.
         */
        public int getSPN928(int index) {
          return sPN928_.getInt(index);
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The sPN928 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN928(
            int index, int value) {

          ensureSPN928IsMutable();
          sPN928_.setInt(index, value);
          bitField0_ |= 0x00400000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @param value The sPN928 to add.
         * @return This builder for chaining.
         */
        public Builder addSPN928(int value) {

          ensureSPN928IsMutable();
          sPN928_.addInt(value);
          bitField0_ |= 0x00400000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @param values The sPN928 to add.
         * @return This builder for chaining.
         */
        public Builder addAllSPN928(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureSPN928IsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sPN928_);
          bitField0_ |= 0x00400000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>repeated uint32 SPN928 = 928 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN928() {
          sPN928_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00400000);
          onChanged();
          return this;
        }

        private int sPN1624_ ;
        /**
         * <pre>
         *[1*8] индекс оси
         * </pre>
         *
         * <code>optional uint32 SPN1624 = 1624;</code>
         * @return Whether the sPN1624 field is set.
         */
        @java.lang.Override
        public boolean hasSPN1624() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <pre>
         *[1*8] индекс оси
         * </pre>
         *
         * <code>optional uint32 SPN1624 = 1624;</code>
         * @return The sPN1624.
         */
        @java.lang.Override
        public int getSPN1624() {
          return sPN1624_;
        }
        /**
         * <pre>
         *[1*8] индекс оси
         * </pre>
         *
         * <code>optional uint32 SPN1624 = 1624;</code>
         * @param value The sPN1624 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN1624(int value) {

          sPN1624_ = value;
          bitField0_ |= 0x00800000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1*8] индекс оси
         * </pre>
         *
         * <code>optional uint32 SPN1624 = 1624;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN1624() {
          bitField0_ = (bitField0_ & ~0x00800000);
          sPN1624_ = 0;
          onChanged();
          return this;
        }

        private int sPN1821_ ;
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1821 = 1821;</code>
         * @return Whether the sPN1821 field is set.
         */
        @java.lang.Override
        public boolean hasSPN1821() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1821 = 1821;</code>
         * @return The sPN1821.
         */
        @java.lang.Override
        public int getSPN1821() {
          return sPN1821_;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1821 = 1821;</code>
         * @param value The sPN1821 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN1821(int value) {

          sPN1821_ = value;
          bitField0_ |= 0x01000000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Ошибки:
         *65 024 .. 65 279 =Error
         *65 280 .. 65 535 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1821 = 1821;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN1821() {
          bitField0_ = (bitField0_ & ~0x01000000);
          sPN1821_ = 0;
          onChanged();
          return this;
        }

        private int sPN1856_ ;
        /**
         * <pre>
         * Возможные значения:
         *0 = At least 1 door is open
         *1 = Closing last door
         *2 =  All doors closed
         *3..13 = Not defined
         *14 = Error
         *15 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1856 = 1856;</code>
         * @return Whether the sPN1856 field is set.
         */
        @java.lang.Override
        public boolean hasSPN1856() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = At least 1 door is open
         *1 = Closing last door
         *2 =  All doors closed
         *3..13 = Not defined
         *14 = Error
         *15 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1856 = 1856;</code>
         * @return The sPN1856.
         */
        @java.lang.Override
        public int getSPN1856() {
          return sPN1856_;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = At least 1 door is open
         *1 = Closing last door
         *2 =  All doors closed
         *3..13 = Not defined
         *14 = Error
         *15 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1856 = 1856;</code>
         * @param value The sPN1856 to set.
         * @return This builder for chaining.
         */
        public Builder setSPN1856(int value) {

          sPN1856_ = value;
          bitField0_ |= 0x02000000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Возможные значения:
         *0 = At least 1 door is open
         *1 = Closing last door
         *2 =  All doors closed
         *3..13 = Not defined
         *14 = Error
         *15 = Not available
         * </pre>
         *
         * <code>optional uint32 SPN1856 = 1856;</code>
         * @return This builder for chaining.
         */
        public Builder clearSPN1856() {
          bitField0_ = (bitField0_ & ~0x02000000);
          sPN1856_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.CanDt_J1939)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CanDt_J1939>
          PARSER = new com.google.protobuf.AbstractParser<CanDt_J1939>() {
        @java.lang.Override
        public CanDt_J1939 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<CanDt_J1939> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CanDt_J1939> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LLSDtOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS1 = 1;</code>
       * @return Whether the tLLS1 field is set.
       */
      boolean hasTLLS1();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS1 = 1;</code>
       * @return The tLLS1.
       */
      int getTLLS1();

      /**
       * <pre>
       *[2] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS1 = 2;</code>
       * @return Whether the cLLS1 field is set.
       */
      boolean hasCLLS1();
      /**
       * <pre>
       *[2] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS1 = 2;</code>
       * @return The cLLS1.
       */
      int getCLLS1();

      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS1 = 3;</code>
       * @return Whether the fLLS1 field is set.
       */
      boolean hasFLLS1();
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS1 = 3;</code>
       * @return The fLLS1.
       */
      int getFLLS1();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS2 = 4;</code>
       * @return Whether the tLLS2 field is set.
       */
      boolean hasTLLS2();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS2 = 4;</code>
       * @return The tLLS2.
       */
      int getTLLS2();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS2 = 5;</code>
       * @return Whether the cLLS2 field is set.
       */
      boolean hasCLLS2();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS2 = 5;</code>
       * @return The cLLS2.
       */
      int getCLLS2();

      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS2 = 6;</code>
       * @return Whether the fLLS2 field is set.
       */
      boolean hasFLLS2();
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS2 = 6;</code>
       * @return The fLLS2.
       */
      int getFLLS2();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS3 = 7;</code>
       * @return Whether the tLLS3 field is set.
       */
      boolean hasTLLS3();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS3 = 7;</code>
       * @return The tLLS3.
       */
      int getTLLS3();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS3 = 8;</code>
       * @return Whether the cLLS3 field is set.
       */
      boolean hasCLLS3();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS3 = 8;</code>
       * @return The cLLS3.
       */
      int getCLLS3();

      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS3 = 9;</code>
       * @return Whether the fLLS3 field is set.
       */
      boolean hasFLLS3();
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS3 = 9;</code>
       * @return The fLLS3.
       */
      int getFLLS3();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS4 = 10;</code>
       * @return Whether the tLLS4 field is set.
       */
      boolean hasTLLS4();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS4 = 10;</code>
       * @return The tLLS4.
       */
      int getTLLS4();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS4 = 11;</code>
       * @return Whether the cLLS4 field is set.
       */
      boolean hasCLLS4();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS4 = 11;</code>
       * @return The cLLS4.
       */
      int getCLLS4();

      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS4 = 12;</code>
       * @return Whether the fLLS4 field is set.
       */
      boolean hasFLLS4();
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS4 = 12;</code>
       * @return The fLLS4.
       */
      int getFLLS4();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS5 = 13;</code>
       * @return Whether the tLLS5 field is set.
       */
      boolean hasTLLS5();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS5 = 13;</code>
       * @return The tLLS5.
       */
      int getTLLS5();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS5 = 14;</code>
       * @return Whether the cLLS5 field is set.
       */
      boolean hasCLLS5();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS5 = 14;</code>
       * @return The cLLS5.
       */
      int getCLLS5();

      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS5 = 15;</code>
       * @return Whether the fLLS5 field is set.
       */
      boolean hasFLLS5();
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS5 = 15;</code>
       * @return The fLLS5.
       */
      int getFLLS5();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS6 = 16;</code>
       * @return Whether the tLLS6 field is set.
       */
      boolean hasTLLS6();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS6 = 16;</code>
       * @return The tLLS6.
       */
      int getTLLS6();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS6 = 17;</code>
       * @return Whether the cLLS6 field is set.
       */
      boolean hasCLLS6();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS6 = 17;</code>
       * @return The cLLS6.
       */
      int getCLLS6();

      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS6 = 18;</code>
       * @return Whether the fLLS6 field is set.
       */
      boolean hasFLLS6();
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS6 = 18;</code>
       * @return The fLLS6.
       */
      int getFLLS6();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS7 = 19;</code>
       * @return Whether the tLLS7 field is set.
       */
      boolean hasTLLS7();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS7 = 19;</code>
       * @return The tLLS7.
       */
      int getTLLS7();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS7 = 20;</code>
       * @return Whether the cLLS7 field is set.
       */
      boolean hasCLLS7();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS7 = 20;</code>
       * @return The cLLS7.
       */
      int getCLLS7();

      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS7 = 21;</code>
       * @return Whether the fLLS7 field is set.
       */
      boolean hasFLLS7();
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS7 = 21;</code>
       * @return The fLLS7.
       */
      int getFLLS7();

      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS8 = 22;</code>
       * @return Whether the tLLS8 field is set.
       */
      boolean hasTLLS8();
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS8 = 22;</code>
       * @return The tLLS8.
       */
      int getTLLS8();

      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS8 = 23;</code>
       * @return Whether the cLLS8 field is set.
       */
      boolean hasCLLS8();
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS8 = 23;</code>
       * @return The cLLS8.
       */
      int getCLLS8();

      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS8 = 24;</code>
       * @return Whether the fLLS8 field is set.
       */
      boolean hasFLLS8();
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS8 = 24;</code>
       * @return The fLLS8.
       */
      int getFLLS8();

      /**
       * <pre>
       *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
       * </pre>
       *
       * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
       * @return A list containing the lLSRefKoef.
       */
      java.util.List<java.lang.Integer> getLLSRefKoefList();
      /**
       * <pre>
       *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
       * </pre>
       *
       * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
       * @return The count of lLSRefKoef.
       */
      int getLLSRefKoefCount();
      /**
       * <pre>
       *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
       * </pre>
       *
       * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefKoef at the given index.
       */
      int getLLSRefKoef(int index);
    }
    /**
     * <pre>
     * Топливные датчики LLS/LLS-AF
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt}
     */
    public static final class LLSDt extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt)
        LLSDtOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LLSDt.newBuilder() to construct.
      private LLSDt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LLSDt() {
        lLSRefKoef_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LLSDt();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder.class);
      }

      private int bitField0_;
      public static final int TLLS1_FIELD_NUMBER = 1;
      private int tLLS1_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS1 = 1;</code>
       * @return Whether the tLLS1 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS1() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS1 = 1;</code>
       * @return The tLLS1.
       */
      @java.lang.Override
      public int getTLLS1() {
        return tLLS1_;
      }

      public static final int CLLS1_FIELD_NUMBER = 2;
      private int cLLS1_ = 0;
      /**
       * <pre>
       *[2] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS1 = 2;</code>
       * @return Whether the cLLS1 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS1() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *[2] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS1 = 2;</code>
       * @return The cLLS1.
       */
      @java.lang.Override
      public int getCLLS1() {
        return cLLS1_;
      }

      public static final int FLLS1_FIELD_NUMBER = 3;
      private int fLLS1_ = 0;
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS1 = 3;</code>
       * @return Whether the fLLS1 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS1() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS1 = 3;</code>
       * @return The fLLS1.
       */
      @java.lang.Override
      public int getFLLS1() {
        return fLLS1_;
      }

      public static final int TLLS2_FIELD_NUMBER = 4;
      private int tLLS2_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS2 = 4;</code>
       * @return Whether the tLLS2 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS2() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS2 = 4;</code>
       * @return The tLLS2.
       */
      @java.lang.Override
      public int getTLLS2() {
        return tLLS2_;
      }

      public static final int CLLS2_FIELD_NUMBER = 5;
      private int cLLS2_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS2 = 5;</code>
       * @return Whether the cLLS2 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS2() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS2 = 5;</code>
       * @return The cLLS2.
       */
      @java.lang.Override
      public int getCLLS2() {
        return cLLS2_;
      }

      public static final int FLLS2_FIELD_NUMBER = 6;
      private int fLLS2_ = 0;
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS2 = 6;</code>
       * @return Whether the fLLS2 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS2() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS2 = 6;</code>
       * @return The fLLS2.
       */
      @java.lang.Override
      public int getFLLS2() {
        return fLLS2_;
      }

      public static final int TLLS3_FIELD_NUMBER = 7;
      private int tLLS3_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS3 = 7;</code>
       * @return Whether the tLLS3 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS3() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS3 = 7;</code>
       * @return The tLLS3.
       */
      @java.lang.Override
      public int getTLLS3() {
        return tLLS3_;
      }

      public static final int CLLS3_FIELD_NUMBER = 8;
      private int cLLS3_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS3 = 8;</code>
       * @return Whether the cLLS3 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS3() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS3 = 8;</code>
       * @return The cLLS3.
       */
      @java.lang.Override
      public int getCLLS3() {
        return cLLS3_;
      }

      public static final int FLLS3_FIELD_NUMBER = 9;
      private int fLLS3_ = 0;
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS3 = 9;</code>
       * @return Whether the fLLS3 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS3() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS3 = 9;</code>
       * @return The fLLS3.
       */
      @java.lang.Override
      public int getFLLS3() {
        return fLLS3_;
      }

      public static final int TLLS4_FIELD_NUMBER = 10;
      private int tLLS4_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS4 = 10;</code>
       * @return Whether the tLLS4 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS4() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS4 = 10;</code>
       * @return The tLLS4.
       */
      @java.lang.Override
      public int getTLLS4() {
        return tLLS4_;
      }

      public static final int CLLS4_FIELD_NUMBER = 11;
      private int cLLS4_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS4 = 11;</code>
       * @return Whether the cLLS4 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS4() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS4 = 11;</code>
       * @return The cLLS4.
       */
      @java.lang.Override
      public int getCLLS4() {
        return cLLS4_;
      }

      public static final int FLLS4_FIELD_NUMBER = 12;
      private int fLLS4_ = 0;
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS4 = 12;</code>
       * @return Whether the fLLS4 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS4() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. Таблицу "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS4 = 12;</code>
       * @return The fLLS4.
       */
      @java.lang.Override
      public int getFLLS4() {
        return fLLS4_;
      }

      public static final int TLLS5_FIELD_NUMBER = 13;
      private int tLLS5_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS5 = 13;</code>
       * @return Whether the tLLS5 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS5() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS5 = 13;</code>
       * @return The tLLS5.
       */
      @java.lang.Override
      public int getTLLS5() {
        return tLLS5_;
      }

      public static final int CLLS5_FIELD_NUMBER = 14;
      private int cLLS5_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS5 = 14;</code>
       * @return Whether the cLLS5 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS5() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS5 = 14;</code>
       * @return The cLLS5.
       */
      @java.lang.Override
      public int getCLLS5() {
        return cLLS5_;
      }

      public static final int FLLS5_FIELD_NUMBER = 15;
      private int fLLS5_ = 0;
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS5 = 15;</code>
       * @return Whether the fLLS5 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS5() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS5 = 15;</code>
       * @return The fLLS5.
       */
      @java.lang.Override
      public int getFLLS5() {
        return fLLS5_;
      }

      public static final int TLLS6_FIELD_NUMBER = 16;
      private int tLLS6_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS6 = 16;</code>
       * @return Whether the tLLS6 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS6() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS6 = 16;</code>
       * @return The tLLS6.
       */
      @java.lang.Override
      public int getTLLS6() {
        return tLLS6_;
      }

      public static final int CLLS6_FIELD_NUMBER = 17;
      private int cLLS6_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS6 = 17;</code>
       * @return Whether the cLLS6 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS6() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS6 = 17;</code>
       * @return The cLLS6.
       */
      @java.lang.Override
      public int getCLLS6() {
        return cLLS6_;
      }

      public static final int FLLS6_FIELD_NUMBER = 18;
      private int fLLS6_ = 0;
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS6 = 18;</code>
       * @return Whether the fLLS6 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS6() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS6 = 18;</code>
       * @return The fLLS6.
       */
      @java.lang.Override
      public int getFLLS6() {
        return fLLS6_;
      }

      public static final int TLLS7_FIELD_NUMBER = 19;
      private int tLLS7_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS7 = 19;</code>
       * @return Whether the tLLS7 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS7() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS7 = 19;</code>
       * @return The tLLS7.
       */
      @java.lang.Override
      public int getTLLS7() {
        return tLLS7_;
      }

      public static final int CLLS7_FIELD_NUMBER = 20;
      private int cLLS7_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS7 = 20;</code>
       * @return Whether the cLLS7 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS7() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS7 = 20;</code>
       * @return The cLLS7.
       */
      @java.lang.Override
      public int getCLLS7() {
        return cLLS7_;
      }

      public static final int FLLS7_FIELD_NUMBER = 21;
      private int fLLS7_ = 0;
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS7 = 21;</code>
       * @return Whether the fLLS7 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS7() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS7 = 21;</code>
       * @return The fLLS7.
       */
      @java.lang.Override
      public int getFLLS7() {
        return fLLS7_;
      }

      public static final int TLLS8_FIELD_NUMBER = 22;
      private int tLLS8_ = 0;
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS8 = 22;</code>
       * @return Whether the tLLS8 field is set.
       */
      @java.lang.Override
      public boolean hasTLLS8() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <pre>
       *[1] температура (1LSB = 1гр.C)
       * </pre>
       *
       * <code>optional sint32 TLLS8 = 22;</code>
       * @return The tLLS8.
       */
      @java.lang.Override
      public int getTLLS8() {
        return tLLS8_;
      }

      public static final int CLLS8_FIELD_NUMBER = 23;
      private int cLLS8_ = 0;
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS8 = 23;</code>
       * @return Whether the cLLS8 field is set.
       */
      @java.lang.Override
      public boolean hasCLLS8() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <pre>
       *[4] уровень
       * </pre>
       *
       * <code>optional uint32 CLLS8 = 23;</code>
       * @return The cLLS8.
       */
      @java.lang.Override
      public int getCLLS8() {
        return cLLS8_;
      }

      public static final int FLLS8_FIELD_NUMBER = 24;
      private int fLLS8_ = 0;
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS8 = 24;</code>
       * @return Whether the fLLS8 field is set.
       */
      @java.lang.Override
      public boolean hasFLLS8() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <pre>
       *[1] код состояния см. "Коды состояния LLS".
       * </pre>
       *
       * <code>optional sint32 FLLS8 = 24;</code>
       * @return The fLLS8.
       */
      @java.lang.Override
      public int getFLLS8() {
        return fLLS8_;
      }

      public static final int LLSREFKOEF_FIELD_NUMBER = 25;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList lLSRefKoef_ =
          emptyIntList();
      /**
       * <pre>
       *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
       * </pre>
       *
       * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
       * @return A list containing the lLSRefKoef.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLLSRefKoefList() {
        return lLSRefKoef_;
      }
      /**
       * <pre>
       *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
       * </pre>
       *
       * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
       * @return The count of lLSRefKoef.
       */
      public int getLLSRefKoefCount() {
        return lLSRefKoef_.size();
      }
      /**
       * <pre>
       *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
       * </pre>
       *
       * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefKoef at the given index.
       */
      public int getLLSRefKoef(int index) {
        return lLSRefKoef_.getInt(index);
      }
      private int lLSRefKoefMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeSInt32(1, tLLS1_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, cLLS1_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeSInt32(3, fLLS1_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeSInt32(4, tLLS2_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, cLLS2_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeSInt32(6, fLLS2_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeSInt32(7, tLLS3_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(8, cLLS3_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeSInt32(9, fLLS3_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeSInt32(10, tLLS4_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeUInt32(11, cLLS4_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeSInt32(12, fLLS4_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeSInt32(13, tLLS5_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          output.writeUInt32(14, cLLS5_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          output.writeSInt32(15, fLLS5_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          output.writeSInt32(16, tLLS6_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          output.writeUInt32(17, cLLS6_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          output.writeSInt32(18, fLLS6_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          output.writeSInt32(19, tLLS7_);
        }
        if (((bitField0_ & 0x00080000) != 0)) {
          output.writeUInt32(20, cLLS7_);
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          output.writeSInt32(21, fLLS7_);
        }
        if (((bitField0_ & 0x00200000) != 0)) {
          output.writeSInt32(22, tLLS8_);
        }
        if (((bitField0_ & 0x00400000) != 0)) {
          output.writeUInt32(23, cLLS8_);
        }
        if (((bitField0_ & 0x00800000) != 0)) {
          output.writeSInt32(24, fLLS8_);
        }
        if (getLLSRefKoefList().size() > 0) {
          output.writeUInt32NoTag(202);
          output.writeUInt32NoTag(lLSRefKoefMemoizedSerializedSize);
        }
        for (int i = 0; i < lLSRefKoef_.size(); i++) {
          output.writeUInt32NoTag(lLSRefKoef_.getInt(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, tLLS1_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, cLLS1_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, fLLS1_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, tLLS2_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, cLLS2_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(6, fLLS2_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(7, tLLS3_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, cLLS3_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(9, fLLS3_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(10, tLLS4_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, cLLS4_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(12, fLLS4_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(13, tLLS5_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, cLLS5_);
        }
        if (((bitField0_ & 0x00004000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(15, fLLS5_);
        }
        if (((bitField0_ & 0x00008000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(16, tLLS6_);
        }
        if (((bitField0_ & 0x00010000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(17, cLLS6_);
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(18, fLLS6_);
        }
        if (((bitField0_ & 0x00040000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(19, tLLS7_);
        }
        if (((bitField0_ & 0x00080000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(20, cLLS7_);
        }
        if (((bitField0_ & 0x00100000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(21, fLLS7_);
        }
        if (((bitField0_ & 0x00200000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(22, tLLS8_);
        }
        if (((bitField0_ & 0x00400000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(23, cLLS8_);
        }
        if (((bitField0_ & 0x00800000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(24, fLLS8_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lLSRefKoef_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lLSRefKoef_.getInt(i));
          }
          size += dataSize;
          if (!getLLSRefKoefList().isEmpty()) {
            size += 2;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lLSRefKoefMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt) obj;

        if (hasTLLS1() != other.hasTLLS1()) return false;
        if (hasTLLS1()) {
          if (getTLLS1()
              != other.getTLLS1()) return false;
        }
        if (hasCLLS1() != other.hasCLLS1()) return false;
        if (hasCLLS1()) {
          if (getCLLS1()
              != other.getCLLS1()) return false;
        }
        if (hasFLLS1() != other.hasFLLS1()) return false;
        if (hasFLLS1()) {
          if (getFLLS1()
              != other.getFLLS1()) return false;
        }
        if (hasTLLS2() != other.hasTLLS2()) return false;
        if (hasTLLS2()) {
          if (getTLLS2()
              != other.getTLLS2()) return false;
        }
        if (hasCLLS2() != other.hasCLLS2()) return false;
        if (hasCLLS2()) {
          if (getCLLS2()
              != other.getCLLS2()) return false;
        }
        if (hasFLLS2() != other.hasFLLS2()) return false;
        if (hasFLLS2()) {
          if (getFLLS2()
              != other.getFLLS2()) return false;
        }
        if (hasTLLS3() != other.hasTLLS3()) return false;
        if (hasTLLS3()) {
          if (getTLLS3()
              != other.getTLLS3()) return false;
        }
        if (hasCLLS3() != other.hasCLLS3()) return false;
        if (hasCLLS3()) {
          if (getCLLS3()
              != other.getCLLS3()) return false;
        }
        if (hasFLLS3() != other.hasFLLS3()) return false;
        if (hasFLLS3()) {
          if (getFLLS3()
              != other.getFLLS3()) return false;
        }
        if (hasTLLS4() != other.hasTLLS4()) return false;
        if (hasTLLS4()) {
          if (getTLLS4()
              != other.getTLLS4()) return false;
        }
        if (hasCLLS4() != other.hasCLLS4()) return false;
        if (hasCLLS4()) {
          if (getCLLS4()
              != other.getCLLS4()) return false;
        }
        if (hasFLLS4() != other.hasFLLS4()) return false;
        if (hasFLLS4()) {
          if (getFLLS4()
              != other.getFLLS4()) return false;
        }
        if (hasTLLS5() != other.hasTLLS5()) return false;
        if (hasTLLS5()) {
          if (getTLLS5()
              != other.getTLLS5()) return false;
        }
        if (hasCLLS5() != other.hasCLLS5()) return false;
        if (hasCLLS5()) {
          if (getCLLS5()
              != other.getCLLS5()) return false;
        }
        if (hasFLLS5() != other.hasFLLS5()) return false;
        if (hasFLLS5()) {
          if (getFLLS5()
              != other.getFLLS5()) return false;
        }
        if (hasTLLS6() != other.hasTLLS6()) return false;
        if (hasTLLS6()) {
          if (getTLLS6()
              != other.getTLLS6()) return false;
        }
        if (hasCLLS6() != other.hasCLLS6()) return false;
        if (hasCLLS6()) {
          if (getCLLS6()
              != other.getCLLS6()) return false;
        }
        if (hasFLLS6() != other.hasFLLS6()) return false;
        if (hasFLLS6()) {
          if (getFLLS6()
              != other.getFLLS6()) return false;
        }
        if (hasTLLS7() != other.hasTLLS7()) return false;
        if (hasTLLS7()) {
          if (getTLLS7()
              != other.getTLLS7()) return false;
        }
        if (hasCLLS7() != other.hasCLLS7()) return false;
        if (hasCLLS7()) {
          if (getCLLS7()
              != other.getCLLS7()) return false;
        }
        if (hasFLLS7() != other.hasFLLS7()) return false;
        if (hasFLLS7()) {
          if (getFLLS7()
              != other.getFLLS7()) return false;
        }
        if (hasTLLS8() != other.hasTLLS8()) return false;
        if (hasTLLS8()) {
          if (getTLLS8()
              != other.getTLLS8()) return false;
        }
        if (hasCLLS8() != other.hasCLLS8()) return false;
        if (hasCLLS8()) {
          if (getCLLS8()
              != other.getCLLS8()) return false;
        }
        if (hasFLLS8() != other.hasFLLS8()) return false;
        if (hasFLLS8()) {
          if (getFLLS8()
              != other.getFLLS8()) return false;
        }
        if (!getLLSRefKoefList()
            .equals(other.getLLSRefKoefList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTLLS1()) {
          hash = (37 * hash) + TLLS1_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS1();
        }
        if (hasCLLS1()) {
          hash = (37 * hash) + CLLS1_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS1();
        }
        if (hasFLLS1()) {
          hash = (37 * hash) + FLLS1_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS1();
        }
        if (hasTLLS2()) {
          hash = (37 * hash) + TLLS2_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS2();
        }
        if (hasCLLS2()) {
          hash = (37 * hash) + CLLS2_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS2();
        }
        if (hasFLLS2()) {
          hash = (37 * hash) + FLLS2_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS2();
        }
        if (hasTLLS3()) {
          hash = (37 * hash) + TLLS3_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS3();
        }
        if (hasCLLS3()) {
          hash = (37 * hash) + CLLS3_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS3();
        }
        if (hasFLLS3()) {
          hash = (37 * hash) + FLLS3_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS3();
        }
        if (hasTLLS4()) {
          hash = (37 * hash) + TLLS4_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS4();
        }
        if (hasCLLS4()) {
          hash = (37 * hash) + CLLS4_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS4();
        }
        if (hasFLLS4()) {
          hash = (37 * hash) + FLLS4_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS4();
        }
        if (hasTLLS5()) {
          hash = (37 * hash) + TLLS5_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS5();
        }
        if (hasCLLS5()) {
          hash = (37 * hash) + CLLS5_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS5();
        }
        if (hasFLLS5()) {
          hash = (37 * hash) + FLLS5_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS5();
        }
        if (hasTLLS6()) {
          hash = (37 * hash) + TLLS6_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS6();
        }
        if (hasCLLS6()) {
          hash = (37 * hash) + CLLS6_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS6();
        }
        if (hasFLLS6()) {
          hash = (37 * hash) + FLLS6_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS6();
        }
        if (hasTLLS7()) {
          hash = (37 * hash) + TLLS7_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS7();
        }
        if (hasCLLS7()) {
          hash = (37 * hash) + CLLS7_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS7();
        }
        if (hasFLLS7()) {
          hash = (37 * hash) + FLLS7_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS7();
        }
        if (hasTLLS8()) {
          hash = (37 * hash) + TLLS8_FIELD_NUMBER;
          hash = (53 * hash) + getTLLS8();
        }
        if (hasCLLS8()) {
          hash = (37 * hash) + CLLS8_FIELD_NUMBER;
          hash = (53 * hash) + getCLLS8();
        }
        if (hasFLLS8()) {
          hash = (37 * hash) + FLLS8_FIELD_NUMBER;
          hash = (53 * hash) + getFLLS8();
        }
        if (getLLSRefKoefCount() > 0) {
          hash = (37 * hash) + LLSREFKOEF_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefKoefList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Топливные датчики LLS/LLS-AF
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          tLLS1_ = 0;
          cLLS1_ = 0;
          fLLS1_ = 0;
          tLLS2_ = 0;
          cLLS2_ = 0;
          fLLS2_ = 0;
          tLLS3_ = 0;
          cLLS3_ = 0;
          fLLS3_ = 0;
          tLLS4_ = 0;
          cLLS4_ = 0;
          fLLS4_ = 0;
          tLLS5_ = 0;
          cLLS5_ = 0;
          fLLS5_ = 0;
          tLLS6_ = 0;
          cLLS6_ = 0;
          fLLS6_ = 0;
          tLLS7_ = 0;
          cLLS7_ = 0;
          fLLS7_ = 0;
          tLLS8_ = 0;
          cLLS8_ = 0;
          fLLS8_ = 0;
          lLSRefKoef_ = emptyIntList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.tLLS1_ = tLLS1_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.cLLS1_ = cLLS1_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.fLLS1_ = fLLS1_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.tLLS2_ = tLLS2_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.cLLS2_ = cLLS2_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.fLLS2_ = fLLS2_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.tLLS3_ = tLLS3_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.cLLS3_ = cLLS3_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.fLLS3_ = fLLS3_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.tLLS4_ = tLLS4_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.cLLS4_ = cLLS4_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.fLLS4_ = fLLS4_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.tLLS5_ = tLLS5_;
            to_bitField0_ |= 0x00001000;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.cLLS5_ = cLLS5_;
            to_bitField0_ |= 0x00002000;
          }
          if (((from_bitField0_ & 0x00004000) != 0)) {
            result.fLLS5_ = fLLS5_;
            to_bitField0_ |= 0x00004000;
          }
          if (((from_bitField0_ & 0x00008000) != 0)) {
            result.tLLS6_ = tLLS6_;
            to_bitField0_ |= 0x00008000;
          }
          if (((from_bitField0_ & 0x00010000) != 0)) {
            result.cLLS6_ = cLLS6_;
            to_bitField0_ |= 0x00010000;
          }
          if (((from_bitField0_ & 0x00020000) != 0)) {
            result.fLLS6_ = fLLS6_;
            to_bitField0_ |= 0x00020000;
          }
          if (((from_bitField0_ & 0x00040000) != 0)) {
            result.tLLS7_ = tLLS7_;
            to_bitField0_ |= 0x00040000;
          }
          if (((from_bitField0_ & 0x00080000) != 0)) {
            result.cLLS7_ = cLLS7_;
            to_bitField0_ |= 0x00080000;
          }
          if (((from_bitField0_ & 0x00100000) != 0)) {
            result.fLLS7_ = fLLS7_;
            to_bitField0_ |= 0x00100000;
          }
          if (((from_bitField0_ & 0x00200000) != 0)) {
            result.tLLS8_ = tLLS8_;
            to_bitField0_ |= 0x00200000;
          }
          if (((from_bitField0_ & 0x00400000) != 0)) {
            result.cLLS8_ = cLLS8_;
            to_bitField0_ |= 0x00400000;
          }
          if (((from_bitField0_ & 0x00800000) != 0)) {
            result.fLLS8_ = fLLS8_;
            to_bitField0_ |= 0x00800000;
          }
          if (((from_bitField0_ & 0x01000000) != 0)) {
            lLSRefKoef_.makeImmutable();
            result.lLSRefKoef_ = lLSRefKoef_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance()) return this;
          if (other.hasTLLS1()) {
            setTLLS1(other.getTLLS1());
          }
          if (other.hasCLLS1()) {
            setCLLS1(other.getCLLS1());
          }
          if (other.hasFLLS1()) {
            setFLLS1(other.getFLLS1());
          }
          if (other.hasTLLS2()) {
            setTLLS2(other.getTLLS2());
          }
          if (other.hasCLLS2()) {
            setCLLS2(other.getCLLS2());
          }
          if (other.hasFLLS2()) {
            setFLLS2(other.getFLLS2());
          }
          if (other.hasTLLS3()) {
            setTLLS3(other.getTLLS3());
          }
          if (other.hasCLLS3()) {
            setCLLS3(other.getCLLS3());
          }
          if (other.hasFLLS3()) {
            setFLLS3(other.getFLLS3());
          }
          if (other.hasTLLS4()) {
            setTLLS4(other.getTLLS4());
          }
          if (other.hasCLLS4()) {
            setCLLS4(other.getCLLS4());
          }
          if (other.hasFLLS4()) {
            setFLLS4(other.getFLLS4());
          }
          if (other.hasTLLS5()) {
            setTLLS5(other.getTLLS5());
          }
          if (other.hasCLLS5()) {
            setCLLS5(other.getCLLS5());
          }
          if (other.hasFLLS5()) {
            setFLLS5(other.getFLLS5());
          }
          if (other.hasTLLS6()) {
            setTLLS6(other.getTLLS6());
          }
          if (other.hasCLLS6()) {
            setCLLS6(other.getCLLS6());
          }
          if (other.hasFLLS6()) {
            setFLLS6(other.getFLLS6());
          }
          if (other.hasTLLS7()) {
            setTLLS7(other.getTLLS7());
          }
          if (other.hasCLLS7()) {
            setCLLS7(other.getCLLS7());
          }
          if (other.hasFLLS7()) {
            setFLLS7(other.getFLLS7());
          }
          if (other.hasTLLS8()) {
            setTLLS8(other.getTLLS8());
          }
          if (other.hasCLLS8()) {
            setCLLS8(other.getCLLS8());
          }
          if (other.hasFLLS8()) {
            setFLLS8(other.getFLLS8());
          }
          if (!other.lLSRefKoef_.isEmpty()) {
            if (lLSRefKoef_.isEmpty()) {
              lLSRefKoef_ = other.lLSRefKoef_;
              lLSRefKoef_.makeImmutable();
              bitField0_ |= 0x01000000;
            } else {
              ensureLLSRefKoefIsMutable();
              lLSRefKoef_.addAll(other.lLSRefKoef_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  tLLS1_ = input.readSInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  cLLS1_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  fLLS1_ = input.readSInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  tLLS2_ = input.readSInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  cLLS2_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  fLLS2_ = input.readSInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  tLLS3_ = input.readSInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  cLLS3_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                case 72: {
                  fLLS3_ = input.readSInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                case 80: {
                  tLLS4_ = input.readSInt32();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 80
                case 88: {
                  cLLS4_ = input.readUInt32();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 88
                case 96: {
                  fLLS4_ = input.readSInt32();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 96
                case 104: {
                  tLLS5_ = input.readSInt32();
                  bitField0_ |= 0x00001000;
                  break;
                } // case 104
                case 112: {
                  cLLS5_ = input.readUInt32();
                  bitField0_ |= 0x00002000;
                  break;
                } // case 112
                case 120: {
                  fLLS5_ = input.readSInt32();
                  bitField0_ |= 0x00004000;
                  break;
                } // case 120
                case 128: {
                  tLLS6_ = input.readSInt32();
                  bitField0_ |= 0x00008000;
                  break;
                } // case 128
                case 136: {
                  cLLS6_ = input.readUInt32();
                  bitField0_ |= 0x00010000;
                  break;
                } // case 136
                case 144: {
                  fLLS6_ = input.readSInt32();
                  bitField0_ |= 0x00020000;
                  break;
                } // case 144
                case 152: {
                  tLLS7_ = input.readSInt32();
                  bitField0_ |= 0x00040000;
                  break;
                } // case 152
                case 160: {
                  cLLS7_ = input.readUInt32();
                  bitField0_ |= 0x00080000;
                  break;
                } // case 160
                case 168: {
                  fLLS7_ = input.readSInt32();
                  bitField0_ |= 0x00100000;
                  break;
                } // case 168
                case 176: {
                  tLLS8_ = input.readSInt32();
                  bitField0_ |= 0x00200000;
                  break;
                } // case 176
                case 184: {
                  cLLS8_ = input.readUInt32();
                  bitField0_ |= 0x00400000;
                  break;
                } // case 184
                case 192: {
                  fLLS8_ = input.readSInt32();
                  bitField0_ |= 0x00800000;
                  break;
                } // case 192
                case 200: {
                  int v = input.readUInt32();
                  ensureLLSRefKoefIsMutable();
                  lLSRefKoef_.addInt(v);
                  break;
                } // case 200
                case 202: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureLLSRefKoefIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    lLSRefKoef_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 202
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int tLLS1_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS1 = 1;</code>
         * @return Whether the tLLS1 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS1() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS1 = 1;</code>
         * @return The tLLS1.
         */
        @java.lang.Override
        public int getTLLS1() {
          return tLLS1_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS1 = 1;</code>
         * @param value The tLLS1 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS1(int value) {

          tLLS1_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS1 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS1() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tLLS1_ = 0;
          onChanged();
          return this;
        }

        private int cLLS1_ ;
        /**
         * <pre>
         *[2] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS1 = 2;</code>
         * @return Whether the cLLS1 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS1() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[2] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS1 = 2;</code>
         * @return The cLLS1.
         */
        @java.lang.Override
        public int getCLLS1() {
          return cLLS1_;
        }
        /**
         * <pre>
         *[2] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS1 = 2;</code>
         * @param value The cLLS1 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS1(int value) {

          cLLS1_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[2] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS1 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS1() {
          bitField0_ = (bitField0_ & ~0x00000002);
          cLLS1_ = 0;
          onChanged();
          return this;
        }

        private int fLLS1_ ;
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS1 = 3;</code>
         * @return Whether the fLLS1 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS1() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS1 = 3;</code>
         * @return The fLLS1.
         */
        @java.lang.Override
        public int getFLLS1() {
          return fLLS1_;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS1 = 3;</code>
         * @param value The fLLS1 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS1(int value) {

          fLLS1_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS1 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fLLS1_ = 0;
          onChanged();
          return this;
        }

        private int tLLS2_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS2 = 4;</code>
         * @return Whether the tLLS2 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS2() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS2 = 4;</code>
         * @return The tLLS2.
         */
        @java.lang.Override
        public int getTLLS2() {
          return tLLS2_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS2 = 4;</code>
         * @param value The tLLS2 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS2(int value) {

          tLLS2_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS2 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          tLLS2_ = 0;
          onChanged();
          return this;
        }

        private int cLLS2_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS2 = 5;</code>
         * @return Whether the cLLS2 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS2() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS2 = 5;</code>
         * @return The cLLS2.
         */
        @java.lang.Override
        public int getCLLS2() {
          return cLLS2_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS2 = 5;</code>
         * @param value The cLLS2 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS2(int value) {

          cLLS2_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS2 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS2() {
          bitField0_ = (bitField0_ & ~0x00000010);
          cLLS2_ = 0;
          onChanged();
          return this;
        }

        private int fLLS2_ ;
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS2 = 6;</code>
         * @return Whether the fLLS2 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS2() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS2 = 6;</code>
         * @return The fLLS2.
         */
        @java.lang.Override
        public int getFLLS2() {
          return fLLS2_;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS2 = 6;</code>
         * @param value The fLLS2 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS2(int value) {

          fLLS2_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS2 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS2() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fLLS2_ = 0;
          onChanged();
          return this;
        }

        private int tLLS3_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS3 = 7;</code>
         * @return Whether the tLLS3 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS3() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS3 = 7;</code>
         * @return The tLLS3.
         */
        @java.lang.Override
        public int getTLLS3() {
          return tLLS3_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS3 = 7;</code>
         * @param value The tLLS3 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS3(int value) {

          tLLS3_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS3 = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS3() {
          bitField0_ = (bitField0_ & ~0x00000040);
          tLLS3_ = 0;
          onChanged();
          return this;
        }

        private int cLLS3_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS3 = 8;</code>
         * @return Whether the cLLS3 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS3() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS3 = 8;</code>
         * @return The cLLS3.
         */
        @java.lang.Override
        public int getCLLS3() {
          return cLLS3_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS3 = 8;</code>
         * @param value The cLLS3 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS3(int value) {

          cLLS3_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS3 = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS3() {
          bitField0_ = (bitField0_ & ~0x00000080);
          cLLS3_ = 0;
          onChanged();
          return this;
        }

        private int fLLS3_ ;
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS3 = 9;</code>
         * @return Whether the fLLS3 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS3() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS3 = 9;</code>
         * @return The fLLS3.
         */
        @java.lang.Override
        public int getFLLS3() {
          return fLLS3_;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS3 = 9;</code>
         * @param value The fLLS3 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS3(int value) {

          fLLS3_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS3 = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS3() {
          bitField0_ = (bitField0_ & ~0x00000100);
          fLLS3_ = 0;
          onChanged();
          return this;
        }

        private int tLLS4_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS4 = 10;</code>
         * @return Whether the tLLS4 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS4() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS4 = 10;</code>
         * @return The tLLS4.
         */
        @java.lang.Override
        public int getTLLS4() {
          return tLLS4_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS4 = 10;</code>
         * @param value The tLLS4 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS4(int value) {

          tLLS4_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS4 = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS4() {
          bitField0_ = (bitField0_ & ~0x00000200);
          tLLS4_ = 0;
          onChanged();
          return this;
        }

        private int cLLS4_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS4 = 11;</code>
         * @return Whether the cLLS4 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS4() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS4 = 11;</code>
         * @return The cLLS4.
         */
        @java.lang.Override
        public int getCLLS4() {
          return cLLS4_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS4 = 11;</code>
         * @param value The cLLS4 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS4(int value) {

          cLLS4_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS4 = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS4() {
          bitField0_ = (bitField0_ & ~0x00000400);
          cLLS4_ = 0;
          onChanged();
          return this;
        }

        private int fLLS4_ ;
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS4 = 12;</code>
         * @return Whether the fLLS4 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS4() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS4 = 12;</code>
         * @return The fLLS4.
         */
        @java.lang.Override
        public int getFLLS4() {
          return fLLS4_;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS4 = 12;</code>
         * @param value The fLLS4 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS4(int value) {

          fLLS4_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. Таблицу "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS4 = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS4() {
          bitField0_ = (bitField0_ & ~0x00000800);
          fLLS4_ = 0;
          onChanged();
          return this;
        }

        private int tLLS5_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS5 = 13;</code>
         * @return Whether the tLLS5 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS5() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS5 = 13;</code>
         * @return The tLLS5.
         */
        @java.lang.Override
        public int getTLLS5() {
          return tLLS5_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS5 = 13;</code>
         * @param value The tLLS5 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS5(int value) {

          tLLS5_ = value;
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS5 = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS5() {
          bitField0_ = (bitField0_ & ~0x00001000);
          tLLS5_ = 0;
          onChanged();
          return this;
        }

        private int cLLS5_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS5 = 14;</code>
         * @return Whether the cLLS5 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS5() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS5 = 14;</code>
         * @return The cLLS5.
         */
        @java.lang.Override
        public int getCLLS5() {
          return cLLS5_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS5 = 14;</code>
         * @param value The cLLS5 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS5(int value) {

          cLLS5_ = value;
          bitField0_ |= 0x00002000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS5 = 14;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS5() {
          bitField0_ = (bitField0_ & ~0x00002000);
          cLLS5_ = 0;
          onChanged();
          return this;
        }

        private int fLLS5_ ;
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS5 = 15;</code>
         * @return Whether the fLLS5 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS5() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS5 = 15;</code>
         * @return The fLLS5.
         */
        @java.lang.Override
        public int getFLLS5() {
          return fLLS5_;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS5 = 15;</code>
         * @param value The fLLS5 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS5(int value) {

          fLLS5_ = value;
          bitField0_ |= 0x00004000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS5 = 15;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS5() {
          bitField0_ = (bitField0_ & ~0x00004000);
          fLLS5_ = 0;
          onChanged();
          return this;
        }

        private int tLLS6_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS6 = 16;</code>
         * @return Whether the tLLS6 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS6() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS6 = 16;</code>
         * @return The tLLS6.
         */
        @java.lang.Override
        public int getTLLS6() {
          return tLLS6_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS6 = 16;</code>
         * @param value The tLLS6 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS6(int value) {

          tLLS6_ = value;
          bitField0_ |= 0x00008000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS6 = 16;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS6() {
          bitField0_ = (bitField0_ & ~0x00008000);
          tLLS6_ = 0;
          onChanged();
          return this;
        }

        private int cLLS6_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS6 = 17;</code>
         * @return Whether the cLLS6 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS6() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS6 = 17;</code>
         * @return The cLLS6.
         */
        @java.lang.Override
        public int getCLLS6() {
          return cLLS6_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS6 = 17;</code>
         * @param value The cLLS6 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS6(int value) {

          cLLS6_ = value;
          bitField0_ |= 0x00010000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS6 = 17;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS6() {
          bitField0_ = (bitField0_ & ~0x00010000);
          cLLS6_ = 0;
          onChanged();
          return this;
        }

        private int fLLS6_ ;
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS6 = 18;</code>
         * @return Whether the fLLS6 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS6() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS6 = 18;</code>
         * @return The fLLS6.
         */
        @java.lang.Override
        public int getFLLS6() {
          return fLLS6_;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS6 = 18;</code>
         * @param value The fLLS6 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS6(int value) {

          fLLS6_ = value;
          bitField0_ |= 0x00020000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS6 = 18;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS6() {
          bitField0_ = (bitField0_ & ~0x00020000);
          fLLS6_ = 0;
          onChanged();
          return this;
        }

        private int tLLS7_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS7 = 19;</code>
         * @return Whether the tLLS7 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS7() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS7 = 19;</code>
         * @return The tLLS7.
         */
        @java.lang.Override
        public int getTLLS7() {
          return tLLS7_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS7 = 19;</code>
         * @param value The tLLS7 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS7(int value) {

          tLLS7_ = value;
          bitField0_ |= 0x00040000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS7 = 19;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS7() {
          bitField0_ = (bitField0_ & ~0x00040000);
          tLLS7_ = 0;
          onChanged();
          return this;
        }

        private int cLLS7_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS7 = 20;</code>
         * @return Whether the cLLS7 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS7() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS7 = 20;</code>
         * @return The cLLS7.
         */
        @java.lang.Override
        public int getCLLS7() {
          return cLLS7_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS7 = 20;</code>
         * @param value The cLLS7 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS7(int value) {

          cLLS7_ = value;
          bitField0_ |= 0x00080000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS7 = 20;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS7() {
          bitField0_ = (bitField0_ & ~0x00080000);
          cLLS7_ = 0;
          onChanged();
          return this;
        }

        private int fLLS7_ ;
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS7 = 21;</code>
         * @return Whether the fLLS7 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS7() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS7 = 21;</code>
         * @return The fLLS7.
         */
        @java.lang.Override
        public int getFLLS7() {
          return fLLS7_;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS7 = 21;</code>
         * @param value The fLLS7 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS7(int value) {

          fLLS7_ = value;
          bitField0_ |= 0x00100000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS7 = 21;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS7() {
          bitField0_ = (bitField0_ & ~0x00100000);
          fLLS7_ = 0;
          onChanged();
          return this;
        }

        private int tLLS8_ ;
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS8 = 22;</code>
         * @return Whether the tLLS8 field is set.
         */
        @java.lang.Override
        public boolean hasTLLS8() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS8 = 22;</code>
         * @return The tLLS8.
         */
        @java.lang.Override
        public int getTLLS8() {
          return tLLS8_;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS8 = 22;</code>
         * @param value The tLLS8 to set.
         * @return This builder for chaining.
         */
        public Builder setTLLS8(int value) {

          tLLS8_ = value;
          bitField0_ |= 0x00200000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] температура (1LSB = 1гр.C)
         * </pre>
         *
         * <code>optional sint32 TLLS8 = 22;</code>
         * @return This builder for chaining.
         */
        public Builder clearTLLS8() {
          bitField0_ = (bitField0_ & ~0x00200000);
          tLLS8_ = 0;
          onChanged();
          return this;
        }

        private int cLLS8_ ;
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS8 = 23;</code>
         * @return Whether the cLLS8 field is set.
         */
        @java.lang.Override
        public boolean hasCLLS8() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS8 = 23;</code>
         * @return The cLLS8.
         */
        @java.lang.Override
        public int getCLLS8() {
          return cLLS8_;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS8 = 23;</code>
         * @param value The cLLS8 to set.
         * @return This builder for chaining.
         */
        public Builder setCLLS8(int value) {

          cLLS8_ = value;
          bitField0_ |= 0x00400000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] уровень
         * </pre>
         *
         * <code>optional uint32 CLLS8 = 23;</code>
         * @return This builder for chaining.
         */
        public Builder clearCLLS8() {
          bitField0_ = (bitField0_ & ~0x00400000);
          cLLS8_ = 0;
          onChanged();
          return this;
        }

        private int fLLS8_ ;
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS8 = 24;</code>
         * @return Whether the fLLS8 field is set.
         */
        @java.lang.Override
        public boolean hasFLLS8() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS8 = 24;</code>
         * @return The fLLS8.
         */
        @java.lang.Override
        public int getFLLS8() {
          return fLLS8_;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS8 = 24;</code>
         * @param value The fLLS8 to set.
         * @return This builder for chaining.
         */
        public Builder setFLLS8(int value) {

          fLLS8_ = value;
          bitField0_ |= 0x00800000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] код состояния см. "Коды состояния LLS".
         * </pre>
         *
         * <code>optional sint32 FLLS8 = 24;</code>
         * @return This builder for chaining.
         */
        public Builder clearFLLS8() {
          bitField0_ = (bitField0_ & ~0x00800000);
          fLLS8_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList lLSRefKoef_ = emptyIntList();
        private void ensureLLSRefKoefIsMutable() {
          if (!lLSRefKoef_.isModifiable()) {
            lLSRefKoef_ = makeMutableCopy(lLSRefKoef_);
          }
          bitField0_ |= 0x01000000;
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @return A list containing the lLSRefKoef.
         */
        public java.util.List<java.lang.Integer>
            getLLSRefKoefList() {
          lLSRefKoef_.makeImmutable();
          return lLSRefKoef_;
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @return The count of lLSRefKoef.
         */
        public int getLLSRefKoefCount() {
          return lLSRefKoef_.size();
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The lLSRefKoef at the given index.
         */
        public int getLLSRefKoef(int index) {
          return lLSRefKoef_.getInt(index);
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The lLSRefKoef to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefKoef(
            int index, int value) {

          ensureLLSRefKoefIsMutable();
          lLSRefKoef_.setInt(index, value);
          bitField0_ |= 0x01000000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @param value The lLSRefKoef to add.
         * @return This builder for chaining.
         */
        public Builder addLLSRefKoef(int value) {

          ensureLLSRefKoefIsMutable();
          lLSRefKoef_.addInt(value);
          bitField0_ |= 0x01000000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @param values The lLSRefKoef to add.
         * @return This builder for chaining.
         */
        public Builder addAllLLSRefKoef(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLLSRefKoefIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lLSRefKoef_);
          bitField0_ |= 0x01000000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[8] набор из восьми поправочных коэффициентов ДУТ (поз. 0 - ДУТ1, поз. 1 - ДУТ2, ...)
         * </pre>
         *
         * <code>repeated uint32 LLSRefKoef = 25 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefKoef() {
          lLSRefKoef_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x01000000);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.LLSDt)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<LLSDt>
          PARSER = new com.google.protobuf.AbstractParser<LLSDt>() {
        @java.lang.Override
        public LLSDt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LLSDt> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LLSDt> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OtherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional group OneWire = 1 { ... }</code>
       * @return Whether the onewire field is set.
       */
      boolean hasOneWire();
      /**
       * <code>optional group OneWire = 1 { ... }</code>
       * @return The onewire.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getOneWire();
      /**
       * <code>optional group OneWire = 1 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder getOneWireOrBuilder();

      /**
       * <code>optional group Pherip = 2 { ... }</code>
       * @return Whether the pherip field is set.
       */
      boolean hasPherip();
      /**
       * <code>optional group Pherip = 2 { ... }</code>
       * @return The pherip.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getPherip();
      /**
       * <code>optional group Pherip = 2 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder getPheripOrBuilder();

      /**
       * <code>optional group ExCAN = 3 { ... }</code>
       * @return Whether the excan field is set.
       */
      boolean hasExCAN();
      /**
       * <code>optional group ExCAN = 3 { ... }</code>
       * @return The excan.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getExCAN();
      /**
       * <code>optional group ExCAN = 3 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder getExCANOrBuilder();

      /**
       * <code>optional group Taho_DDD = 4 { ... }</code>
       * @return Whether the tahoDdd field is set.
       */
      boolean hasTahoDDD();
      /**
       * <code>optional group Taho_DDD = 4 { ... }</code>
       * @return The tahoDdd.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getTahoDDD();
      /**
       * <code>optional group Taho_DDD = 4 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder getTahoDDDOrBuilder();

      /**
       * <code>optional group APC = 5 { ... }</code>
       * @return Whether the apc field is set.
       */
      boolean hasAPC();
      /**
       * <code>optional group APC = 5 { ... }</code>
       * @return The apc.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC getAPC();
      /**
       * <code>optional group APC = 5 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder getAPCOrBuilder();

      /**
       * <code>optional group MobileEye = 6 { ... }</code>
       * @return Whether the mobileeye field is set.
       */
      boolean hasMobileEye();
      /**
       * <code>optional group MobileEye = 6 { ... }</code>
       * @return The mobileeye.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getMobileEye();
      /**
       * <code>optional group MobileEye = 6 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder getMobileEyeOrBuilder();

      /**
       * <code>optional group SafeDriving = 7 { ... }</code>
       * @return Whether the safedriving field is set.
       */
      boolean hasSafeDriving();
      /**
       * <code>optional group SafeDriving = 7 { ... }</code>
       * @return The safedriving.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getSafeDriving();
      /**
       * <code>optional group SafeDriving = 7 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder getSafeDrivingOrBuilder();

      /**
       * <code>optional group GenComm = 8 { ... }</code>
       * @return Whether the gencomm field is set.
       */
      boolean hasGenComm();
      /**
       * <code>optional group GenComm = 8 { ... }</code>
       * @return The gencomm.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getGenComm();
      /**
       * <code>optional group GenComm = 8 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder getGenCommOrBuilder();

      /**
       * <code>optional group FuelSensorModbus = 9 { ... }</code>
       * @return Whether the fuelsensormodbus field is set.
       */
      boolean hasFuelSensorModbus();
      /**
       * <code>optional group FuelSensorModbus = 9 { ... }</code>
       * @return The fuelsensormodbus.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getFuelSensorModbus();
      /**
       * <code>optional group FuelSensorModbus = 9 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder();

      /**
       * <code>optional group WeightControl = 10 { ... }</code>
       * @return Whether the weightcontrol field is set.
       */
      boolean hasWeightControl();
      /**
       * <code>optional group WeightControl = 10 { ... }</code>
       * @return The weightcontrol.
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getWeightControl();
      /**
       * <code>optional group WeightControl = 10 { ... }</code>
       */
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder getWeightControlOrBuilder();
    }
    /**
     * <pre>
     * прочее оборудование
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other}
     */
    public static final class Other extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other)
        OtherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Other.newBuilder() to construct.
      private Other(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Other() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Other();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder.class);
      }

      public interface OneWireOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
         * </pre>
         *
         * <code>optional sint32 OneWire1 = 1;</code>
         * @return Whether the oneWire1 field is set.
         */
        boolean hasOneWire1();
        /**
         * <pre>
         * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
         * </pre>
         *
         * <code>optional sint32 OneWire1 = 1;</code>
         * @return The oneWire1.
         */
        int getOneWire1();

        /**
         * <pre>
         *[1] температура c датчика 2
         * </pre>
         *
         * <code>optional sint32 OneWire2 = 2;</code>
         * @return Whether the oneWire2 field is set.
         */
        boolean hasOneWire2();
        /**
         * <pre>
         *[1] температура c датчика 2
         * </pre>
         *
         * <code>optional sint32 OneWire2 = 2;</code>
         * @return The oneWire2.
         */
        int getOneWire2();

        /**
         * <pre>
         *[1] температура c датчика 3
         * </pre>
         *
         * <code>optional sint32 OneWire3 = 3;</code>
         * @return Whether the oneWire3 field is set.
         */
        boolean hasOneWire3();
        /**
         * <pre>
         *[1] температура c датчика 3
         * </pre>
         *
         * <code>optional sint32 OneWire3 = 3;</code>
         * @return The oneWire3.
         */
        int getOneWire3();

        /**
         * <pre>
         *[1] температура c датчика 4
         * </pre>
         *
         * <code>optional sint32 OneWire4 = 4;</code>
         * @return Whether the oneWire4 field is set.
         */
        boolean hasOneWire4();
        /**
         * <pre>
         *[1] температура c датчика 4
         * </pre>
         *
         * <code>optional sint32 OneWire4 = 4;</code>
         * @return The oneWire4.
         */
        int getOneWire4();

        /**
         * <pre>
         *[1] температура c датчика 5
         * </pre>
         *
         * <code>optional sint32 OneWire5 = 5;</code>
         * @return Whether the oneWire5 field is set.
         */
        boolean hasOneWire5();
        /**
         * <pre>
         *[1] температура c датчика 5
         * </pre>
         *
         * <code>optional sint32 OneWire5 = 5;</code>
         * @return The oneWire5.
         */
        int getOneWire5();

        /**
         * <pre>
         *[1] температура c датчика 6
         * </pre>
         *
         * <code>optional sint32 OneWire6 = 6;</code>
         * @return Whether the oneWire6 field is set.
         */
        boolean hasOneWire6();
        /**
         * <pre>
         *[1] температура c датчика 6
         * </pre>
         *
         * <code>optional sint32 OneWire6 = 6;</code>
         * @return The oneWire6.
         */
        int getOneWire6();

        /**
         * <pre>
         *[1] температура c датчика 7
         * </pre>
         *
         * <code>optional sint32 OneWire7 = 7;</code>
         * @return Whether the oneWire7 field is set.
         */
        boolean hasOneWire7();
        /**
         * <pre>
         *[1] температура c датчика 7
         * </pre>
         *
         * <code>optional sint32 OneWire7 = 7;</code>
         * @return The oneWire7.
         */
        int getOneWire7();

        /**
         * <pre>
         *[1] температура c датчика 8
         * </pre>
         *
         * <code>optional sint32 OneWire8 = 8;</code>
         * @return Whether the oneWire8 field is set.
         */
        boolean hasOneWire8();
        /**
         * <pre>
         *[1] температура c датчика 8
         * </pre>
         *
         * <code>optional sint32 OneWire8 = 8;</code>
         * @return The oneWire8.
         */
        int getOneWire8();
      }
      /**
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire}
       */
      public static final class OneWire extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire)
          OneWireOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use OneWire.newBuilder() to construct.
        private OneWire(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private OneWire() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new OneWire();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder.class);
        }

        private int bitField0_;
        public static final int ONEWIRE1_FIELD_NUMBER = 1;
        private int oneWire1_ = 0;
        /**
         * <pre>
         * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
         * </pre>
         *
         * <code>optional sint32 OneWire1 = 1;</code>
         * @return Whether the oneWire1 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire1() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
         * </pre>
         *
         * <code>optional sint32 OneWire1 = 1;</code>
         * @return The oneWire1.
         */
        @java.lang.Override
        public int getOneWire1() {
          return oneWire1_;
        }

        public static final int ONEWIRE2_FIELD_NUMBER = 2;
        private int oneWire2_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 2
         * </pre>
         *
         * <code>optional sint32 OneWire2 = 2;</code>
         * @return Whether the oneWire2 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire2() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 2
         * </pre>
         *
         * <code>optional sint32 OneWire2 = 2;</code>
         * @return The oneWire2.
         */
        @java.lang.Override
        public int getOneWire2() {
          return oneWire2_;
        }

        public static final int ONEWIRE3_FIELD_NUMBER = 3;
        private int oneWire3_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 3
         * </pre>
         *
         * <code>optional sint32 OneWire3 = 3;</code>
         * @return Whether the oneWire3 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire3() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 3
         * </pre>
         *
         * <code>optional sint32 OneWire3 = 3;</code>
         * @return The oneWire3.
         */
        @java.lang.Override
        public int getOneWire3() {
          return oneWire3_;
        }

        public static final int ONEWIRE4_FIELD_NUMBER = 4;
        private int oneWire4_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 4
         * </pre>
         *
         * <code>optional sint32 OneWire4 = 4;</code>
         * @return Whether the oneWire4 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire4() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 4
         * </pre>
         *
         * <code>optional sint32 OneWire4 = 4;</code>
         * @return The oneWire4.
         */
        @java.lang.Override
        public int getOneWire4() {
          return oneWire4_;
        }

        public static final int ONEWIRE5_FIELD_NUMBER = 5;
        private int oneWire5_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 5
         * </pre>
         *
         * <code>optional sint32 OneWire5 = 5;</code>
         * @return Whether the oneWire5 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire5() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 5
         * </pre>
         *
         * <code>optional sint32 OneWire5 = 5;</code>
         * @return The oneWire5.
         */
        @java.lang.Override
        public int getOneWire5() {
          return oneWire5_;
        }

        public static final int ONEWIRE6_FIELD_NUMBER = 6;
        private int oneWire6_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 6
         * </pre>
         *
         * <code>optional sint32 OneWire6 = 6;</code>
         * @return Whether the oneWire6 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire6() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 6
         * </pre>
         *
         * <code>optional sint32 OneWire6 = 6;</code>
         * @return The oneWire6.
         */
        @java.lang.Override
        public int getOneWire6() {
          return oneWire6_;
        }

        public static final int ONEWIRE7_FIELD_NUMBER = 7;
        private int oneWire7_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 7
         * </pre>
         *
         * <code>optional sint32 OneWire7 = 7;</code>
         * @return Whether the oneWire7 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire7() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 7
         * </pre>
         *
         * <code>optional sint32 OneWire7 = 7;</code>
         * @return The oneWire7.
         */
        @java.lang.Override
        public int getOneWire7() {
          return oneWire7_;
        }

        public static final int ONEWIRE8_FIELD_NUMBER = 8;
        private int oneWire8_ = 0;
        /**
         * <pre>
         *[1] температура c датчика 8
         * </pre>
         *
         * <code>optional sint32 OneWire8 = 8;</code>
         * @return Whether the oneWire8 field is set.
         */
        @java.lang.Override
        public boolean hasOneWire8() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         *[1] температура c датчика 8
         * </pre>
         *
         * <code>optional sint32 OneWire8 = 8;</code>
         * @return The oneWire8.
         */
        @java.lang.Override
        public int getOneWire8() {
          return oneWire8_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeSInt32(1, oneWire1_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeSInt32(2, oneWire2_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeSInt32(3, oneWire3_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeSInt32(4, oneWire4_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeSInt32(5, oneWire5_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeSInt32(6, oneWire6_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeSInt32(7, oneWire7_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeSInt32(8, oneWire8_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(1, oneWire1_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(2, oneWire2_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(3, oneWire3_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(4, oneWire4_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(5, oneWire5_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(6, oneWire6_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(7, oneWire7_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(8, oneWire8_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) obj;

          if (hasOneWire1() != other.hasOneWire1()) return false;
          if (hasOneWire1()) {
            if (getOneWire1()
                != other.getOneWire1()) return false;
          }
          if (hasOneWire2() != other.hasOneWire2()) return false;
          if (hasOneWire2()) {
            if (getOneWire2()
                != other.getOneWire2()) return false;
          }
          if (hasOneWire3() != other.hasOneWire3()) return false;
          if (hasOneWire3()) {
            if (getOneWire3()
                != other.getOneWire3()) return false;
          }
          if (hasOneWire4() != other.hasOneWire4()) return false;
          if (hasOneWire4()) {
            if (getOneWire4()
                != other.getOneWire4()) return false;
          }
          if (hasOneWire5() != other.hasOneWire5()) return false;
          if (hasOneWire5()) {
            if (getOneWire5()
                != other.getOneWire5()) return false;
          }
          if (hasOneWire6() != other.hasOneWire6()) return false;
          if (hasOneWire6()) {
            if (getOneWire6()
                != other.getOneWire6()) return false;
          }
          if (hasOneWire7() != other.hasOneWire7()) return false;
          if (hasOneWire7()) {
            if (getOneWire7()
                != other.getOneWire7()) return false;
          }
          if (hasOneWire8() != other.hasOneWire8()) return false;
          if (hasOneWire8()) {
            if (getOneWire8()
                != other.getOneWire8()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasOneWire1()) {
            hash = (37 * hash) + ONEWIRE1_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire1();
          }
          if (hasOneWire2()) {
            hash = (37 * hash) + ONEWIRE2_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire2();
          }
          if (hasOneWire3()) {
            hash = (37 * hash) + ONEWIRE3_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire3();
          }
          if (hasOneWire4()) {
            hash = (37 * hash) + ONEWIRE4_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire4();
          }
          if (hasOneWire5()) {
            hash = (37 * hash) + ONEWIRE5_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire5();
          }
          if (hasOneWire6()) {
            hash = (37 * hash) + ONEWIRE6_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire6();
          }
          if (hasOneWire7()) {
            hash = (37 * hash) + ONEWIRE7_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire7();
          }
          if (hasOneWire8()) {
            hash = (37 * hash) + ONEWIRE8_FIELD_NUMBER;
            hash = (53 * hash) + getOneWire8();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            oneWire1_ = 0;
            oneWire2_ = 0;
            oneWire3_ = 0;
            oneWire4_ = 0;
            oneWire5_ = 0;
            oneWire6_ = 0;
            oneWire7_ = 0;
            oneWire8_ = 0;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.oneWire1_ = oneWire1_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.oneWire2_ = oneWire2_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.oneWire3_ = oneWire3_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.oneWire4_ = oneWire4_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.oneWire5_ = oneWire5_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.oneWire6_ = oneWire6_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.oneWire7_ = oneWire7_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.oneWire8_ = oneWire8_;
              to_bitField0_ |= 0x00000080;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance()) return this;
            if (other.hasOneWire1()) {
              setOneWire1(other.getOneWire1());
            }
            if (other.hasOneWire2()) {
              setOneWire2(other.getOneWire2());
            }
            if (other.hasOneWire3()) {
              setOneWire3(other.getOneWire3());
            }
            if (other.hasOneWire4()) {
              setOneWire4(other.getOneWire4());
            }
            if (other.hasOneWire5()) {
              setOneWire5(other.getOneWire5());
            }
            if (other.hasOneWire6()) {
              setOneWire6(other.getOneWire6());
            }
            if (other.hasOneWire7()) {
              setOneWire7(other.getOneWire7());
            }
            if (other.hasOneWire8()) {
              setOneWire8(other.getOneWire8());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    oneWire1_ = input.readSInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    oneWire2_ = input.readSInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 24: {
                    oneWire3_ = input.readSInt32();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  case 32: {
                    oneWire4_ = input.readSInt32();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 32
                  case 40: {
                    oneWire5_ = input.readSInt32();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 40
                  case 48: {
                    oneWire6_ = input.readSInt32();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 48
                  case 56: {
                    oneWire7_ = input.readSInt32();
                    bitField0_ |= 0x00000040;
                    break;
                  } // case 56
                  case 64: {
                    oneWire8_ = input.readSInt32();
                    bitField0_ |= 0x00000080;
                    break;
                  } // case 64
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int oneWire1_ ;
          /**
           * <pre>
           * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
           * </pre>
           *
           * <code>optional sint32 OneWire1 = 1;</code>
           * @return Whether the oneWire1 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire1() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
           * </pre>
           *
           * <code>optional sint32 OneWire1 = 1;</code>
           * @return The oneWire1.
           */
          @java.lang.Override
          public int getOneWire1() {
            return oneWire1_;
          }
          /**
           * <pre>
           * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
           * </pre>
           *
           * <code>optional sint32 OneWire1 = 1;</code>
           * @param value The oneWire1 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire1(int value) {

            oneWire1_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Температурные датчики 1-wire Присутствуют только температуры с настроенных датчиков
           * </pre>
           *
           * <code>optional sint32 OneWire1 = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire1() {
            bitField0_ = (bitField0_ & ~0x00000001);
            oneWire1_ = 0;
            onChanged();
            return this;
          }

          private int oneWire2_ ;
          /**
           * <pre>
           *[1] температура c датчика 2
           * </pre>
           *
           * <code>optional sint32 OneWire2 = 2;</code>
           * @return Whether the oneWire2 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire2() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 2
           * </pre>
           *
           * <code>optional sint32 OneWire2 = 2;</code>
           * @return The oneWire2.
           */
          @java.lang.Override
          public int getOneWire2() {
            return oneWire2_;
          }
          /**
           * <pre>
           *[1] температура c датчика 2
           * </pre>
           *
           * <code>optional sint32 OneWire2 = 2;</code>
           * @param value The oneWire2 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire2(int value) {

            oneWire2_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 2
           * </pre>
           *
           * <code>optional sint32 OneWire2 = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire2() {
            bitField0_ = (bitField0_ & ~0x00000002);
            oneWire2_ = 0;
            onChanged();
            return this;
          }

          private int oneWire3_ ;
          /**
           * <pre>
           *[1] температура c датчика 3
           * </pre>
           *
           * <code>optional sint32 OneWire3 = 3;</code>
           * @return Whether the oneWire3 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire3() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 3
           * </pre>
           *
           * <code>optional sint32 OneWire3 = 3;</code>
           * @return The oneWire3.
           */
          @java.lang.Override
          public int getOneWire3() {
            return oneWire3_;
          }
          /**
           * <pre>
           *[1] температура c датчика 3
           * </pre>
           *
           * <code>optional sint32 OneWire3 = 3;</code>
           * @param value The oneWire3 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire3(int value) {

            oneWire3_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 3
           * </pre>
           *
           * <code>optional sint32 OneWire3 = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire3() {
            bitField0_ = (bitField0_ & ~0x00000004);
            oneWire3_ = 0;
            onChanged();
            return this;
          }

          private int oneWire4_ ;
          /**
           * <pre>
           *[1] температура c датчика 4
           * </pre>
           *
           * <code>optional sint32 OneWire4 = 4;</code>
           * @return Whether the oneWire4 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire4() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 4
           * </pre>
           *
           * <code>optional sint32 OneWire4 = 4;</code>
           * @return The oneWire4.
           */
          @java.lang.Override
          public int getOneWire4() {
            return oneWire4_;
          }
          /**
           * <pre>
           *[1] температура c датчика 4
           * </pre>
           *
           * <code>optional sint32 OneWire4 = 4;</code>
           * @param value The oneWire4 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire4(int value) {

            oneWire4_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 4
           * </pre>
           *
           * <code>optional sint32 OneWire4 = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire4() {
            bitField0_ = (bitField0_ & ~0x00000008);
            oneWire4_ = 0;
            onChanged();
            return this;
          }

          private int oneWire5_ ;
          /**
           * <pre>
           *[1] температура c датчика 5
           * </pre>
           *
           * <code>optional sint32 OneWire5 = 5;</code>
           * @return Whether the oneWire5 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire5() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 5
           * </pre>
           *
           * <code>optional sint32 OneWire5 = 5;</code>
           * @return The oneWire5.
           */
          @java.lang.Override
          public int getOneWire5() {
            return oneWire5_;
          }
          /**
           * <pre>
           *[1] температура c датчика 5
           * </pre>
           *
           * <code>optional sint32 OneWire5 = 5;</code>
           * @param value The oneWire5 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire5(int value) {

            oneWire5_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 5
           * </pre>
           *
           * <code>optional sint32 OneWire5 = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire5() {
            bitField0_ = (bitField0_ & ~0x00000010);
            oneWire5_ = 0;
            onChanged();
            return this;
          }

          private int oneWire6_ ;
          /**
           * <pre>
           *[1] температура c датчика 6
           * </pre>
           *
           * <code>optional sint32 OneWire6 = 6;</code>
           * @return Whether the oneWire6 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire6() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 6
           * </pre>
           *
           * <code>optional sint32 OneWire6 = 6;</code>
           * @return The oneWire6.
           */
          @java.lang.Override
          public int getOneWire6() {
            return oneWire6_;
          }
          /**
           * <pre>
           *[1] температура c датчика 6
           * </pre>
           *
           * <code>optional sint32 OneWire6 = 6;</code>
           * @param value The oneWire6 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire6(int value) {

            oneWire6_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 6
           * </pre>
           *
           * <code>optional sint32 OneWire6 = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire6() {
            bitField0_ = (bitField0_ & ~0x00000020);
            oneWire6_ = 0;
            onChanged();
            return this;
          }

          private int oneWire7_ ;
          /**
           * <pre>
           *[1] температура c датчика 7
           * </pre>
           *
           * <code>optional sint32 OneWire7 = 7;</code>
           * @return Whether the oneWire7 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire7() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 7
           * </pre>
           *
           * <code>optional sint32 OneWire7 = 7;</code>
           * @return The oneWire7.
           */
          @java.lang.Override
          public int getOneWire7() {
            return oneWire7_;
          }
          /**
           * <pre>
           *[1] температура c датчика 7
           * </pre>
           *
           * <code>optional sint32 OneWire7 = 7;</code>
           * @param value The oneWire7 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire7(int value) {

            oneWire7_ = value;
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 7
           * </pre>
           *
           * <code>optional sint32 OneWire7 = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire7() {
            bitField0_ = (bitField0_ & ~0x00000040);
            oneWire7_ = 0;
            onChanged();
            return this;
          }

          private int oneWire8_ ;
          /**
           * <pre>
           *[1] температура c датчика 8
           * </pre>
           *
           * <code>optional sint32 OneWire8 = 8;</code>
           * @return Whether the oneWire8 field is set.
           */
          @java.lang.Override
          public boolean hasOneWire8() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           *[1] температура c датчика 8
           * </pre>
           *
           * <code>optional sint32 OneWire8 = 8;</code>
           * @return The oneWire8.
           */
          @java.lang.Override
          public int getOneWire8() {
            return oneWire8_;
          }
          /**
           * <pre>
           *[1] температура c датчика 8
           * </pre>
           *
           * <code>optional sint32 OneWire8 = 8;</code>
           * @param value The oneWire8 to set.
           * @return This builder for chaining.
           */
          public Builder setOneWire8(int value) {

            oneWire8_ = value;
            bitField0_ |= 0x00000080;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] температура c датчика 8
           * </pre>
           *
           * <code>optional sint32 OneWire8 = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearOneWire8() {
            bitField0_ = (bitField0_ & ~0x00000080);
            oneWire8_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.OneWire)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<OneWire>
            PARSER = new com.google.protobuf.AbstractParser<OneWire>() {
          @java.lang.Override
          public OneWire parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<OneWire> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<OneWire> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface PheripOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *[1] Количество вошедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerIn = 1;</code>
         * @return Whether the passengerIn field is set.
         */
        boolean hasPassengerIn();
        /**
         * <pre>
         *[1] Количество вошедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerIn = 1;</code>
         * @return The passengerIn.
         */
        int getPassengerIn();

        /**
         * <pre>
         *[1] Количество вышедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerOut = 2;</code>
         * @return Whether the passengerOut field is set.
         */
        boolean hasPassengerOut();
        /**
         * <pre>
         *[1] Количество вышедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerOut = 2;</code>
         * @return The passengerOut.
         */
        int getPassengerOut();

        /**
         * <pre>
         *[1] маска дверей датчика пасажиропотока
         * </pre>
         *
         * <code>optional uint32 DoorMask = 3;</code>
         * @return Whether the doorMask field is set.
         */
        boolean hasDoorMask();
        /**
         * <pre>
         *[1] маска дверей датчика пасажиропотока
         * </pre>
         *
         * <code>optional uint32 DoorMask = 3;</code>
         * @return The doorMask.
         */
        int getDoorMask();

        /**
         * <pre>
         *[1] Статус водителя
         * </pre>
         *
         * <code>optional uint32 DriverStatus = 4;</code>
         * @return Whether the driverStatus field is set.
         */
        boolean hasDriverStatus();
        /**
         * <pre>
         *[1] Статус водителя
         * </pre>
         *
         * <code>optional uint32 DriverStatus = 4;</code>
         * @return The driverStatus.
         */
        int getDriverStatus();

        /**
         * <pre>
         *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
         * </pre>
         *
         * <code>optional bytes TPMS = 5;</code>
         * @return Whether the tPMS field is set.
         */
        boolean hasTPMS();
        /**
         * <pre>
         *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
         * </pre>
         *
         * <code>optional bytes TPMS = 5;</code>
         * @return The tPMS.
         */
        com.google.protobuf.ByteString getTPMS();

        /**
         * <pre>
         *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
         * </pre>
         *
         * <code>optional bytes iQFreeze = 6;</code>
         * @return Whether the iQFreeze field is set.
         */
        boolean hasIQFreeze();
        /**
         * <pre>
         *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
         * </pre>
         *
         * <code>optional bytes iQFreeze = 6;</code>
         * @return The iQFreeze.
         */
        com.google.protobuf.ByteString getIQFreeze();
      }
      /**
       * <pre>
       * Периферия кладется в архив только при данные с только подключенных и настроенных устройств
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip}
       */
      public static final class Pherip extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip)
          PheripOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Pherip.newBuilder() to construct.
        private Pherip(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Pherip() {
          tPMS_ = com.google.protobuf.ByteString.EMPTY;
          iQFreeze_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Pherip();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder.class);
        }

        private int bitField0_;
        public static final int PASSENGERIN_FIELD_NUMBER = 1;
        private int passengerIn_ = 0;
        /**
         * <pre>
         *[1] Количество вошедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerIn = 1;</code>
         * @return Whether the passengerIn field is set.
         */
        @java.lang.Override
        public boolean hasPassengerIn() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[1] Количество вошедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerIn = 1;</code>
         * @return The passengerIn.
         */
        @java.lang.Override
        public int getPassengerIn() {
          return passengerIn_;
        }

        public static final int PASSENGEROUT_FIELD_NUMBER = 2;
        private int passengerOut_ = 0;
        /**
         * <pre>
         *[1] Количество вышедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerOut = 2;</code>
         * @return Whether the passengerOut field is set.
         */
        @java.lang.Override
        public boolean hasPassengerOut() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[1] Количество вышедших пассажиров
         * </pre>
         *
         * <code>optional uint32 PassengerOut = 2;</code>
         * @return The passengerOut.
         */
        @java.lang.Override
        public int getPassengerOut() {
          return passengerOut_;
        }

        public static final int DOORMASK_FIELD_NUMBER = 3;
        private int doorMask_ = 0;
        /**
         * <pre>
         *[1] маска дверей датчика пасажиропотока
         * </pre>
         *
         * <code>optional uint32 DoorMask = 3;</code>
         * @return Whether the doorMask field is set.
         */
        @java.lang.Override
        public boolean hasDoorMask() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[1] маска дверей датчика пасажиропотока
         * </pre>
         *
         * <code>optional uint32 DoorMask = 3;</code>
         * @return The doorMask.
         */
        @java.lang.Override
        public int getDoorMask() {
          return doorMask_;
        }

        public static final int DRIVERSTATUS_FIELD_NUMBER = 4;
        private int driverStatus_ = 0;
        /**
         * <pre>
         *[1] Статус водителя
         * </pre>
         *
         * <code>optional uint32 DriverStatus = 4;</code>
         * @return Whether the driverStatus field is set.
         */
        @java.lang.Override
        public boolean hasDriverStatus() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[1] Статус водителя
         * </pre>
         *
         * <code>optional uint32 DriverStatus = 4;</code>
         * @return The driverStatus.
         */
        @java.lang.Override
        public int getDriverStatus() {
          return driverStatus_;
        }

        public static final int TPMS_FIELD_NUMBER = 5;
        private com.google.protobuf.ByteString tPMS_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
         * </pre>
         *
         * <code>optional bytes TPMS = 5;</code>
         * @return Whether the tPMS field is set.
         */
        @java.lang.Override
        public boolean hasTPMS() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
         * </pre>
         *
         * <code>optional bytes TPMS = 5;</code>
         * @return The tPMS.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getTPMS() {
          return tPMS_;
        }

        public static final int IQFREEZE_FIELD_NUMBER = 6;
        private com.google.protobuf.ByteString iQFreeze_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
         * </pre>
         *
         * <code>optional bytes iQFreeze = 6;</code>
         * @return Whether the iQFreeze field is set.
         */
        @java.lang.Override
        public boolean hasIQFreeze() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
         * </pre>
         *
         * <code>optional bytes iQFreeze = 6;</code>
         * @return The iQFreeze.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getIQFreeze() {
          return iQFreeze_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, passengerIn_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeUInt32(2, passengerOut_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt32(3, doorMask_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeUInt32(4, driverStatus_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeBytes(5, tPMS_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeBytes(6, iQFreeze_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, passengerIn_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, passengerOut_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, doorMask_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, driverStatus_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(5, tPMS_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(6, iQFreeze_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) obj;

          if (hasPassengerIn() != other.hasPassengerIn()) return false;
          if (hasPassengerIn()) {
            if (getPassengerIn()
                != other.getPassengerIn()) return false;
          }
          if (hasPassengerOut() != other.hasPassengerOut()) return false;
          if (hasPassengerOut()) {
            if (getPassengerOut()
                != other.getPassengerOut()) return false;
          }
          if (hasDoorMask() != other.hasDoorMask()) return false;
          if (hasDoorMask()) {
            if (getDoorMask()
                != other.getDoorMask()) return false;
          }
          if (hasDriverStatus() != other.hasDriverStatus()) return false;
          if (hasDriverStatus()) {
            if (getDriverStatus()
                != other.getDriverStatus()) return false;
          }
          if (hasTPMS() != other.hasTPMS()) return false;
          if (hasTPMS()) {
            if (!getTPMS()
                .equals(other.getTPMS())) return false;
          }
          if (hasIQFreeze() != other.hasIQFreeze()) return false;
          if (hasIQFreeze()) {
            if (!getIQFreeze()
                .equals(other.getIQFreeze())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasPassengerIn()) {
            hash = (37 * hash) + PASSENGERIN_FIELD_NUMBER;
            hash = (53 * hash) + getPassengerIn();
          }
          if (hasPassengerOut()) {
            hash = (37 * hash) + PASSENGEROUT_FIELD_NUMBER;
            hash = (53 * hash) + getPassengerOut();
          }
          if (hasDoorMask()) {
            hash = (37 * hash) + DOORMASK_FIELD_NUMBER;
            hash = (53 * hash) + getDoorMask();
          }
          if (hasDriverStatus()) {
            hash = (37 * hash) + DRIVERSTATUS_FIELD_NUMBER;
            hash = (53 * hash) + getDriverStatus();
          }
          if (hasTPMS()) {
            hash = (37 * hash) + TPMS_FIELD_NUMBER;
            hash = (53 * hash) + getTPMS().hashCode();
          }
          if (hasIQFreeze()) {
            hash = (37 * hash) + IQFREEZE_FIELD_NUMBER;
            hash = (53 * hash) + getIQFreeze().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Периферия кладется в архив только при данные с только подключенных и настроенных устройств
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            passengerIn_ = 0;
            passengerOut_ = 0;
            doorMask_ = 0;
            driverStatus_ = 0;
            tPMS_ = com.google.protobuf.ByteString.EMPTY;
            iQFreeze_ = com.google.protobuf.ByteString.EMPTY;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.passengerIn_ = passengerIn_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.passengerOut_ = passengerOut_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.doorMask_ = doorMask_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.driverStatus_ = driverStatus_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.tPMS_ = tPMS_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.iQFreeze_ = iQFreeze_;
              to_bitField0_ |= 0x00000020;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance()) return this;
            if (other.hasPassengerIn()) {
              setPassengerIn(other.getPassengerIn());
            }
            if (other.hasPassengerOut()) {
              setPassengerOut(other.getPassengerOut());
            }
            if (other.hasDoorMask()) {
              setDoorMask(other.getDoorMask());
            }
            if (other.hasDriverStatus()) {
              setDriverStatus(other.getDriverStatus());
            }
            if (other.hasTPMS()) {
              setTPMS(other.getTPMS());
            }
            if (other.hasIQFreeze()) {
              setIQFreeze(other.getIQFreeze());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    passengerIn_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    passengerOut_ = input.readUInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 24: {
                    doorMask_ = input.readUInt32();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  case 32: {
                    driverStatus_ = input.readUInt32();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 32
                  case 42: {
                    tPMS_ = input.readBytes();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 42
                  case 50: {
                    iQFreeze_ = input.readBytes();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 50
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int passengerIn_ ;
          /**
           * <pre>
           *[1] Количество вошедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerIn = 1;</code>
           * @return Whether the passengerIn field is set.
           */
          @java.lang.Override
          public boolean hasPassengerIn() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           *[1] Количество вошедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerIn = 1;</code>
           * @return The passengerIn.
           */
          @java.lang.Override
          public int getPassengerIn() {
            return passengerIn_;
          }
          /**
           * <pre>
           *[1] Количество вошедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerIn = 1;</code>
           * @param value The passengerIn to set.
           * @return This builder for chaining.
           */
          public Builder setPassengerIn(int value) {

            passengerIn_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Количество вошедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerIn = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearPassengerIn() {
            bitField0_ = (bitField0_ & ~0x00000001);
            passengerIn_ = 0;
            onChanged();
            return this;
          }

          private int passengerOut_ ;
          /**
           * <pre>
           *[1] Количество вышедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerOut = 2;</code>
           * @return Whether the passengerOut field is set.
           */
          @java.lang.Override
          public boolean hasPassengerOut() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           *[1] Количество вышедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerOut = 2;</code>
           * @return The passengerOut.
           */
          @java.lang.Override
          public int getPassengerOut() {
            return passengerOut_;
          }
          /**
           * <pre>
           *[1] Количество вышедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerOut = 2;</code>
           * @param value The passengerOut to set.
           * @return This builder for chaining.
           */
          public Builder setPassengerOut(int value) {

            passengerOut_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Количество вышедших пассажиров
           * </pre>
           *
           * <code>optional uint32 PassengerOut = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearPassengerOut() {
            bitField0_ = (bitField0_ & ~0x00000002);
            passengerOut_ = 0;
            onChanged();
            return this;
          }

          private int doorMask_ ;
          /**
           * <pre>
           *[1] маска дверей датчика пасажиропотока
           * </pre>
           *
           * <code>optional uint32 DoorMask = 3;</code>
           * @return Whether the doorMask field is set.
           */
          @java.lang.Override
          public boolean hasDoorMask() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           *[1] маска дверей датчика пасажиропотока
           * </pre>
           *
           * <code>optional uint32 DoorMask = 3;</code>
           * @return The doorMask.
           */
          @java.lang.Override
          public int getDoorMask() {
            return doorMask_;
          }
          /**
           * <pre>
           *[1] маска дверей датчика пасажиропотока
           * </pre>
           *
           * <code>optional uint32 DoorMask = 3;</code>
           * @param value The doorMask to set.
           * @return This builder for chaining.
           */
          public Builder setDoorMask(int value) {

            doorMask_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] маска дверей датчика пасажиропотока
           * </pre>
           *
           * <code>optional uint32 DoorMask = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearDoorMask() {
            bitField0_ = (bitField0_ & ~0x00000004);
            doorMask_ = 0;
            onChanged();
            return this;
          }

          private int driverStatus_ ;
          /**
           * <pre>
           *[1] Статус водителя
           * </pre>
           *
           * <code>optional uint32 DriverStatus = 4;</code>
           * @return Whether the driverStatus field is set.
           */
          @java.lang.Override
          public boolean hasDriverStatus() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           *[1] Статус водителя
           * </pre>
           *
           * <code>optional uint32 DriverStatus = 4;</code>
           * @return The driverStatus.
           */
          @java.lang.Override
          public int getDriverStatus() {
            return driverStatus_;
          }
          /**
           * <pre>
           *[1] Статус водителя
           * </pre>
           *
           * <code>optional uint32 DriverStatus = 4;</code>
           * @param value The driverStatus to set.
           * @return This builder for chaining.
           */
          public Builder setDriverStatus(int value) {

            driverStatus_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Статус водителя
           * </pre>
           *
           * <code>optional uint32 DriverStatus = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearDriverStatus() {
            bitField0_ = (bitField0_ & ~0x00000008);
            driverStatus_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString tPMS_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <pre>
           *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
           * </pre>
           *
           * <code>optional bytes TPMS = 5;</code>
           * @return Whether the tPMS field is set.
           */
          @java.lang.Override
          public boolean hasTPMS() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
           * </pre>
           *
           * <code>optional bytes TPMS = 5;</code>
           * @return The tPMS.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getTPMS() {
            return tPMS_;
          }
          /**
           * <pre>
           *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
           * </pre>
           *
           * <code>optional bytes TPMS = 5;</code>
           * @param value The tPMS to set.
           * @return This builder for chaining.
           */
          public Builder setTPMS(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            tPMS_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[92] Система контроля давления воздуха в шинах, всего возможно 46 датчика. Массив из 46 структур по 2 байта.
           * </pre>
           *
           * <code>optional bytes TPMS = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearTPMS() {
            bitField0_ = (bitField0_ & ~0x00000010);
            tPMS_ = getDefaultInstance().getTPMS();
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString iQFreeze_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <pre>
           *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
           * </pre>
           *
           * <code>optional bytes iQFreeze = 6;</code>
           * @return Whether the iQFreeze field is set.
           */
          @java.lang.Override
          public boolean hasIQFreeze() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
           * </pre>
           *
           * <code>optional bytes iQFreeze = 6;</code>
           * @return The iQFreeze.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getIQFreeze() {
            return iQFreeze_;
          }
          /**
           * <pre>
           *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
           * </pre>
           *
           * <code>optional bytes iQFreeze = 6;</code>
           * @param value The iQFreeze to set.
           * @return This builder for chaining.
           */
          public Builder setIQFreeze(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            iQFreeze_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[512] Система контроля рефрижераторами iQFreeze.json - http://wiki.omnicomm.ru/pages/viewpage.action?pageId=11567726
           * </pre>
           *
           * <code>optional bytes iQFreeze = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearIQFreeze() {
            bitField0_ = (bitField0_ & ~0x00000020);
            iQFreeze_ = getDefaultInstance().getIQFreeze();
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Pherip)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Pherip>
            PARSER = new com.google.protobuf.AbstractParser<Pherip>() {
          @java.lang.Override
          public Pherip parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Pherip> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Pherip> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ExCANOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *[24] Коды SPN
         * </pre>
         *
         * <code>repeated uint32 SPNid = 1;</code>
         * @return A list containing the sPNid.
         */
        java.util.List<java.lang.Integer> getSPNidList();
        /**
         * <pre>
         *[24] Коды SPN
         * </pre>
         *
         * <code>repeated uint32 SPNid = 1;</code>
         * @return The count of sPNid.
         */
        int getSPNidCount();
        /**
         * <pre>
         *[24] Коды SPN
         * </pre>
         *
         * <code>repeated uint32 SPNid = 1;</code>
         * @param index The index of the element to return.
         * @return The sPNid at the given index.
         */
        int getSPNid(int index);

        /**
         * <pre>
         *[24] Зачения SPN
         * </pre>
         *
         * <code>repeated uint32 SPNval = 2;</code>
         * @return A list containing the sPNval.
         */
        java.util.List<java.lang.Integer> getSPNvalList();
        /**
         * <pre>
         *[24] Зачения SPN
         * </pre>
         *
         * <code>repeated uint32 SPNval = 2;</code>
         * @return The count of sPNval.
         */
        int getSPNvalCount();
        /**
         * <pre>
         *[24] Зачения SPN
         * </pre>
         *
         * <code>repeated uint32 SPNval = 2;</code>
         * @param index The index of the element to return.
         * @return The sPNval at the given index.
         */
        int getSPNval(int index);

        /**
         * <code>optional uint64 Adr64TEREX = 10;</code>
         * @return Whether the adr64TEREX field is set.
         */
        boolean hasAdr64TEREX();
        /**
         * <code>optional uint64 Adr64TEREX = 10;</code>
         * @return The adr64TEREX.
         */
        long getAdr64TEREX();

        /**
         * <code>optional uint64 Adr65TEREX = 11;</code>
         * @return Whether the adr65TEREX field is set.
         */
        boolean hasAdr65TEREX();
        /**
         * <code>optional uint64 Adr65TEREX = 11;</code>
         * @return The adr65TEREX.
         */
        long getAdr65TEREX();

        /**
         * <code>optional uint64 Adr66TEREX = 12;</code>
         * @return Whether the adr66TEREX field is set.
         */
        boolean hasAdr66TEREX();
        /**
         * <code>optional uint64 Adr66TEREX = 12;</code>
         * @return The adr66TEREX.
         */
        long getAdr66TEREX();

        /**
         * <code>optional uint64 Adr67TEREX = 13;</code>
         * @return Whether the adr67TEREX field is set.
         */
        boolean hasAdr67TEREX();
        /**
         * <code>optional uint64 Adr67TEREX = 13;</code>
         * @return The adr67TEREX.
         */
        long getAdr67TEREX();

        /**
         * <pre>
         *[10] Коды ошибок
         * </pre>
         *
         * <code>repeated uint64 Adr11TEREX = 14;</code>
         * @return A list containing the adr11TEREX.
         */
        java.util.List<java.lang.Long> getAdr11TEREXList();
        /**
         * <pre>
         *[10] Коды ошибок
         * </pre>
         *
         * <code>repeated uint64 Adr11TEREX = 14;</code>
         * @return The count of adr11TEREX.
         */
        int getAdr11TEREXCount();
        /**
         * <pre>
         *[10] Коды ошибок
         * </pre>
         *
         * <code>repeated uint64 Adr11TEREX = 14;</code>
         * @param index The index of the element to return.
         * @return The adr11TEREX at the given index.
         */
        long getAdr11TEREX(int index);

        /**
         * <code>optional uint64 Adr69TEREX = 15;</code>
         * @return Whether the adr69TEREX field is set.
         */
        boolean hasAdr69TEREX();
        /**
         * <code>optional uint64 Adr69TEREX = 15;</code>
         * @return The adr69TEREX.
         */
        long getAdr69TEREX();
      }
      /**
       * <pre>
       * Расширенные парметры CAN
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN}
       */
      public static final class ExCAN extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN)
          ExCANOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use ExCAN.newBuilder() to construct.
        private ExCAN(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private ExCAN() {
          sPNid_ = emptyIntList();
          sPNval_ = emptyIntList();
          adr11TEREX_ = emptyLongList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new ExCAN();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder.class);
        }

        private int bitField0_;
        public static final int SPNID_FIELD_NUMBER = 1;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.IntList sPNid_ =
            emptyIntList();
        /**
         * <pre>
         *[24] Коды SPN
         * </pre>
         *
         * <code>repeated uint32 SPNid = 1;</code>
         * @return A list containing the sPNid.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getSPNidList() {
          return sPNid_;
        }
        /**
         * <pre>
         *[24] Коды SPN
         * </pre>
         *
         * <code>repeated uint32 SPNid = 1;</code>
         * @return The count of sPNid.
         */
        public int getSPNidCount() {
          return sPNid_.size();
        }
        /**
         * <pre>
         *[24] Коды SPN
         * </pre>
         *
         * <code>repeated uint32 SPNid = 1;</code>
         * @param index The index of the element to return.
         * @return The sPNid at the given index.
         */
        public int getSPNid(int index) {
          return sPNid_.getInt(index);
        }

        public static final int SPNVAL_FIELD_NUMBER = 2;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.IntList sPNval_ =
            emptyIntList();
        /**
         * <pre>
         *[24] Зачения SPN
         * </pre>
         *
         * <code>repeated uint32 SPNval = 2;</code>
         * @return A list containing the sPNval.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getSPNvalList() {
          return sPNval_;
        }
        /**
         * <pre>
         *[24] Зачения SPN
         * </pre>
         *
         * <code>repeated uint32 SPNval = 2;</code>
         * @return The count of sPNval.
         */
        public int getSPNvalCount() {
          return sPNval_.size();
        }
        /**
         * <pre>
         *[24] Зачения SPN
         * </pre>
         *
         * <code>repeated uint32 SPNval = 2;</code>
         * @param index The index of the element to return.
         * @return The sPNval at the given index.
         */
        public int getSPNval(int index) {
          return sPNval_.getInt(index);
        }

        public static final int ADR64TEREX_FIELD_NUMBER = 10;
        private long adr64TEREX_ = 0L;
        /**
         * <code>optional uint64 Adr64TEREX = 10;</code>
         * @return Whether the adr64TEREX field is set.
         */
        @java.lang.Override
        public boolean hasAdr64TEREX() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 Adr64TEREX = 10;</code>
         * @return The adr64TEREX.
         */
        @java.lang.Override
        public long getAdr64TEREX() {
          return adr64TEREX_;
        }

        public static final int ADR65TEREX_FIELD_NUMBER = 11;
        private long adr65TEREX_ = 0L;
        /**
         * <code>optional uint64 Adr65TEREX = 11;</code>
         * @return Whether the adr65TEREX field is set.
         */
        @java.lang.Override
        public boolean hasAdr65TEREX() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint64 Adr65TEREX = 11;</code>
         * @return The adr65TEREX.
         */
        @java.lang.Override
        public long getAdr65TEREX() {
          return adr65TEREX_;
        }

        public static final int ADR66TEREX_FIELD_NUMBER = 12;
        private long adr66TEREX_ = 0L;
        /**
         * <code>optional uint64 Adr66TEREX = 12;</code>
         * @return Whether the adr66TEREX field is set.
         */
        @java.lang.Override
        public boolean hasAdr66TEREX() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint64 Adr66TEREX = 12;</code>
         * @return The adr66TEREX.
         */
        @java.lang.Override
        public long getAdr66TEREX() {
          return adr66TEREX_;
        }

        public static final int ADR67TEREX_FIELD_NUMBER = 13;
        private long adr67TEREX_ = 0L;
        /**
         * <code>optional uint64 Adr67TEREX = 13;</code>
         * @return Whether the adr67TEREX field is set.
         */
        @java.lang.Override
        public boolean hasAdr67TEREX() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint64 Adr67TEREX = 13;</code>
         * @return The adr67TEREX.
         */
        @java.lang.Override
        public long getAdr67TEREX() {
          return adr67TEREX_;
        }

        public static final int ADR11TEREX_FIELD_NUMBER = 14;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.LongList adr11TEREX_ =
            emptyLongList();
        /**
         * <pre>
         *[10] Коды ошибок
         * </pre>
         *
         * <code>repeated uint64 Adr11TEREX = 14;</code>
         * @return A list containing the adr11TEREX.
         */
        @java.lang.Override
        public java.util.List<java.lang.Long>
            getAdr11TEREXList() {
          return adr11TEREX_;
        }
        /**
         * <pre>
         *[10] Коды ошибок
         * </pre>
         *
         * <code>repeated uint64 Adr11TEREX = 14;</code>
         * @return The count of adr11TEREX.
         */
        public int getAdr11TEREXCount() {
          return adr11TEREX_.size();
        }
        /**
         * <pre>
         *[10] Коды ошибок
         * </pre>
         *
         * <code>repeated uint64 Adr11TEREX = 14;</code>
         * @param index The index of the element to return.
         * @return The adr11TEREX at the given index.
         */
        public long getAdr11TEREX(int index) {
          return adr11TEREX_.getLong(index);
        }

        public static final int ADR69TEREX_FIELD_NUMBER = 15;
        private long adr69TEREX_ = 0L;
        /**
         * <code>optional uint64 Adr69TEREX = 15;</code>
         * @return Whether the adr69TEREX field is set.
         */
        @java.lang.Override
        public boolean hasAdr69TEREX() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint64 Adr69TEREX = 15;</code>
         * @return The adr69TEREX.
         */
        @java.lang.Override
        public long getAdr69TEREX() {
          return adr69TEREX_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < sPNid_.size(); i++) {
            output.writeUInt32(1, sPNid_.getInt(i));
          }
          for (int i = 0; i < sPNval_.size(); i++) {
            output.writeUInt32(2, sPNval_.getInt(i));
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt64(10, adr64TEREX_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeUInt64(11, adr65TEREX_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt64(12, adr66TEREX_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeUInt64(13, adr67TEREX_);
          }
          for (int i = 0; i < adr11TEREX_.size(); i++) {
            output.writeUInt64(14, adr11TEREX_.getLong(i));
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeUInt64(15, adr69TEREX_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            for (int i = 0; i < sPNid_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(sPNid_.getInt(i));
            }
            size += dataSize;
            size += 1 * getSPNidList().size();
          }
          {
            int dataSize = 0;
            for (int i = 0; i < sPNval_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(sPNval_.getInt(i));
            }
            size += dataSize;
            size += 1 * getSPNvalList().size();
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(10, adr64TEREX_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(11, adr65TEREX_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(12, adr66TEREX_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(13, adr67TEREX_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < adr11TEREX_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeUInt64SizeNoTag(adr11TEREX_.getLong(i));
            }
            size += dataSize;
            size += 1 * getAdr11TEREXList().size();
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(15, adr69TEREX_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) obj;

          if (!getSPNidList()
              .equals(other.getSPNidList())) return false;
          if (!getSPNvalList()
              .equals(other.getSPNvalList())) return false;
          if (hasAdr64TEREX() != other.hasAdr64TEREX()) return false;
          if (hasAdr64TEREX()) {
            if (getAdr64TEREX()
                != other.getAdr64TEREX()) return false;
          }
          if (hasAdr65TEREX() != other.hasAdr65TEREX()) return false;
          if (hasAdr65TEREX()) {
            if (getAdr65TEREX()
                != other.getAdr65TEREX()) return false;
          }
          if (hasAdr66TEREX() != other.hasAdr66TEREX()) return false;
          if (hasAdr66TEREX()) {
            if (getAdr66TEREX()
                != other.getAdr66TEREX()) return false;
          }
          if (hasAdr67TEREX() != other.hasAdr67TEREX()) return false;
          if (hasAdr67TEREX()) {
            if (getAdr67TEREX()
                != other.getAdr67TEREX()) return false;
          }
          if (!getAdr11TEREXList()
              .equals(other.getAdr11TEREXList())) return false;
          if (hasAdr69TEREX() != other.hasAdr69TEREX()) return false;
          if (hasAdr69TEREX()) {
            if (getAdr69TEREX()
                != other.getAdr69TEREX()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getSPNidCount() > 0) {
            hash = (37 * hash) + SPNID_FIELD_NUMBER;
            hash = (53 * hash) + getSPNidList().hashCode();
          }
          if (getSPNvalCount() > 0) {
            hash = (37 * hash) + SPNVAL_FIELD_NUMBER;
            hash = (53 * hash) + getSPNvalList().hashCode();
          }
          if (hasAdr64TEREX()) {
            hash = (37 * hash) + ADR64TEREX_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getAdr64TEREX());
          }
          if (hasAdr65TEREX()) {
            hash = (37 * hash) + ADR65TEREX_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getAdr65TEREX());
          }
          if (hasAdr66TEREX()) {
            hash = (37 * hash) + ADR66TEREX_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getAdr66TEREX());
          }
          if (hasAdr67TEREX()) {
            hash = (37 * hash) + ADR67TEREX_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getAdr67TEREX());
          }
          if (getAdr11TEREXCount() > 0) {
            hash = (37 * hash) + ADR11TEREX_FIELD_NUMBER;
            hash = (53 * hash) + getAdr11TEREXList().hashCode();
          }
          if (hasAdr69TEREX()) {
            hash = (37 * hash) + ADR69TEREX_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getAdr69TEREX());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Расширенные парметры CAN
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            sPNid_ = emptyIntList();
            sPNval_ = emptyIntList();
            adr64TEREX_ = 0L;
            adr65TEREX_ = 0L;
            adr66TEREX_ = 0L;
            adr67TEREX_ = 0L;
            adr11TEREX_ = emptyLongList();
            adr69TEREX_ = 0L;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              sPNid_.makeImmutable();
              result.sPNid_ = sPNid_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              sPNval_.makeImmutable();
              result.sPNval_ = sPNval_;
            }
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.adr64TEREX_ = adr64TEREX_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.adr65TEREX_ = adr65TEREX_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.adr66TEREX_ = adr66TEREX_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.adr67TEREX_ = adr67TEREX_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              adr11TEREX_.makeImmutable();
              result.adr11TEREX_ = adr11TEREX_;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.adr69TEREX_ = adr69TEREX_;
              to_bitField0_ |= 0x00000010;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance()) return this;
            if (!other.sPNid_.isEmpty()) {
              if (sPNid_.isEmpty()) {
                sPNid_ = other.sPNid_;
                sPNid_.makeImmutable();
                bitField0_ |= 0x00000001;
              } else {
                ensureSPNidIsMutable();
                sPNid_.addAll(other.sPNid_);
              }
              onChanged();
            }
            if (!other.sPNval_.isEmpty()) {
              if (sPNval_.isEmpty()) {
                sPNval_ = other.sPNval_;
                sPNval_.makeImmutable();
                bitField0_ |= 0x00000002;
              } else {
                ensureSPNvalIsMutable();
                sPNval_.addAll(other.sPNval_);
              }
              onChanged();
            }
            if (other.hasAdr64TEREX()) {
              setAdr64TEREX(other.getAdr64TEREX());
            }
            if (other.hasAdr65TEREX()) {
              setAdr65TEREX(other.getAdr65TEREX());
            }
            if (other.hasAdr66TEREX()) {
              setAdr66TEREX(other.getAdr66TEREX());
            }
            if (other.hasAdr67TEREX()) {
              setAdr67TEREX(other.getAdr67TEREX());
            }
            if (!other.adr11TEREX_.isEmpty()) {
              if (adr11TEREX_.isEmpty()) {
                adr11TEREX_ = other.adr11TEREX_;
                adr11TEREX_.makeImmutable();
                bitField0_ |= 0x00000040;
              } else {
                ensureAdr11TEREXIsMutable();
                adr11TEREX_.addAll(other.adr11TEREX_);
              }
              onChanged();
            }
            if (other.hasAdr69TEREX()) {
              setAdr69TEREX(other.getAdr69TEREX());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    int v = input.readUInt32();
                    ensureSPNidIsMutable();
                    sPNid_.addInt(v);
                    break;
                  } // case 8
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    ensureSPNidIsMutable();
                    while (input.getBytesUntilLimit() > 0) {
                      sPNid_.addInt(input.readUInt32());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 10
                  case 16: {
                    int v = input.readUInt32();
                    ensureSPNvalIsMutable();
                    sPNval_.addInt(v);
                    break;
                  } // case 16
                  case 18: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    ensureSPNvalIsMutable();
                    while (input.getBytesUntilLimit() > 0) {
                      sPNval_.addInt(input.readUInt32());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 18
                  case 80: {
                    adr64TEREX_ = input.readUInt64();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 80
                  case 88: {
                    adr65TEREX_ = input.readUInt64();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 88
                  case 96: {
                    adr66TEREX_ = input.readUInt64();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 96
                  case 104: {
                    adr67TEREX_ = input.readUInt64();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 104
                  case 112: {
                    long v = input.readUInt64();
                    ensureAdr11TEREXIsMutable();
                    adr11TEREX_.addLong(v);
                    break;
                  } // case 112
                  case 114: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    ensureAdr11TEREXIsMutable();
                    while (input.getBytesUntilLimit() > 0) {
                      adr11TEREX_.addLong(input.readUInt64());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 114
                  case 120: {
                    adr69TEREX_ = input.readUInt64();
                    bitField0_ |= 0x00000080;
                    break;
                  } // case 120
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.Internal.IntList sPNid_ = emptyIntList();
          private void ensureSPNidIsMutable() {
            if (!sPNid_.isModifiable()) {
              sPNid_ = makeMutableCopy(sPNid_);
            }
            bitField0_ |= 0x00000001;
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @return A list containing the sPNid.
           */
          public java.util.List<java.lang.Integer>
              getSPNidList() {
            sPNid_.makeImmutable();
            return sPNid_;
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @return The count of sPNid.
           */
          public int getSPNidCount() {
            return sPNid_.size();
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @param index The index of the element to return.
           * @return The sPNid at the given index.
           */
          public int getSPNid(int index) {
            return sPNid_.getInt(index);
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @param index The index to set the value at.
           * @param value The sPNid to set.
           * @return This builder for chaining.
           */
          public Builder setSPNid(
              int index, int value) {

            ensureSPNidIsMutable();
            sPNid_.setInt(index, value);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @param value The sPNid to add.
           * @return This builder for chaining.
           */
          public Builder addSPNid(int value) {

            ensureSPNidIsMutable();
            sPNid_.addInt(value);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @param values The sPNid to add.
           * @return This builder for chaining.
           */
          public Builder addAllSPNid(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureSPNidIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sPNid_);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[24] Коды SPN
           * </pre>
           *
           * <code>repeated uint32 SPNid = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearSPNid() {
            sPNid_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList sPNval_ = emptyIntList();
          private void ensureSPNvalIsMutable() {
            if (!sPNval_.isModifiable()) {
              sPNval_ = makeMutableCopy(sPNval_);
            }
            bitField0_ |= 0x00000002;
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @return A list containing the sPNval.
           */
          public java.util.List<java.lang.Integer>
              getSPNvalList() {
            sPNval_.makeImmutable();
            return sPNval_;
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @return The count of sPNval.
           */
          public int getSPNvalCount() {
            return sPNval_.size();
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @param index The index of the element to return.
           * @return The sPNval at the given index.
           */
          public int getSPNval(int index) {
            return sPNval_.getInt(index);
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @param index The index to set the value at.
           * @param value The sPNval to set.
           * @return This builder for chaining.
           */
          public Builder setSPNval(
              int index, int value) {

            ensureSPNvalIsMutable();
            sPNval_.setInt(index, value);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @param value The sPNval to add.
           * @return This builder for chaining.
           */
          public Builder addSPNval(int value) {

            ensureSPNvalIsMutable();
            sPNval_.addInt(value);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @param values The sPNval to add.
           * @return This builder for chaining.
           */
          public Builder addAllSPNval(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureSPNvalIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, sPNval_);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[24] Зачения SPN
           * </pre>
           *
           * <code>repeated uint32 SPNval = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearSPNval() {
            sPNval_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private long adr64TEREX_ ;
          /**
           * <code>optional uint64 Adr64TEREX = 10;</code>
           * @return Whether the adr64TEREX field is set.
           */
          @java.lang.Override
          public boolean hasAdr64TEREX() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional uint64 Adr64TEREX = 10;</code>
           * @return The adr64TEREX.
           */
          @java.lang.Override
          public long getAdr64TEREX() {
            return adr64TEREX_;
          }
          /**
           * <code>optional uint64 Adr64TEREX = 10;</code>
           * @param value The adr64TEREX to set.
           * @return This builder for chaining.
           */
          public Builder setAdr64TEREX(long value) {

            adr64TEREX_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 Adr64TEREX = 10;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdr64TEREX() {
            bitField0_ = (bitField0_ & ~0x00000004);
            adr64TEREX_ = 0L;
            onChanged();
            return this;
          }

          private long adr65TEREX_ ;
          /**
           * <code>optional uint64 Adr65TEREX = 11;</code>
           * @return Whether the adr65TEREX field is set.
           */
          @java.lang.Override
          public boolean hasAdr65TEREX() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional uint64 Adr65TEREX = 11;</code>
           * @return The adr65TEREX.
           */
          @java.lang.Override
          public long getAdr65TEREX() {
            return adr65TEREX_;
          }
          /**
           * <code>optional uint64 Adr65TEREX = 11;</code>
           * @param value The adr65TEREX to set.
           * @return This builder for chaining.
           */
          public Builder setAdr65TEREX(long value) {

            adr65TEREX_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 Adr65TEREX = 11;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdr65TEREX() {
            bitField0_ = (bitField0_ & ~0x00000008);
            adr65TEREX_ = 0L;
            onChanged();
            return this;
          }

          private long adr66TEREX_ ;
          /**
           * <code>optional uint64 Adr66TEREX = 12;</code>
           * @return Whether the adr66TEREX field is set.
           */
          @java.lang.Override
          public boolean hasAdr66TEREX() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional uint64 Adr66TEREX = 12;</code>
           * @return The adr66TEREX.
           */
          @java.lang.Override
          public long getAdr66TEREX() {
            return adr66TEREX_;
          }
          /**
           * <code>optional uint64 Adr66TEREX = 12;</code>
           * @param value The adr66TEREX to set.
           * @return This builder for chaining.
           */
          public Builder setAdr66TEREX(long value) {

            adr66TEREX_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 Adr66TEREX = 12;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdr66TEREX() {
            bitField0_ = (bitField0_ & ~0x00000010);
            adr66TEREX_ = 0L;
            onChanged();
            return this;
          }

          private long adr67TEREX_ ;
          /**
           * <code>optional uint64 Adr67TEREX = 13;</code>
           * @return Whether the adr67TEREX field is set.
           */
          @java.lang.Override
          public boolean hasAdr67TEREX() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional uint64 Adr67TEREX = 13;</code>
           * @return The adr67TEREX.
           */
          @java.lang.Override
          public long getAdr67TEREX() {
            return adr67TEREX_;
          }
          /**
           * <code>optional uint64 Adr67TEREX = 13;</code>
           * @param value The adr67TEREX to set.
           * @return This builder for chaining.
           */
          public Builder setAdr67TEREX(long value) {

            adr67TEREX_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 Adr67TEREX = 13;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdr67TEREX() {
            bitField0_ = (bitField0_ & ~0x00000020);
            adr67TEREX_ = 0L;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.LongList adr11TEREX_ = emptyLongList();
          private void ensureAdr11TEREXIsMutable() {
            if (!adr11TEREX_.isModifiable()) {
              adr11TEREX_ = makeMutableCopy(adr11TEREX_);
            }
            bitField0_ |= 0x00000040;
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @return A list containing the adr11TEREX.
           */
          public java.util.List<java.lang.Long>
              getAdr11TEREXList() {
            adr11TEREX_.makeImmutable();
            return adr11TEREX_;
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @return The count of adr11TEREX.
           */
          public int getAdr11TEREXCount() {
            return adr11TEREX_.size();
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @param index The index of the element to return.
           * @return The adr11TEREX at the given index.
           */
          public long getAdr11TEREX(int index) {
            return adr11TEREX_.getLong(index);
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @param index The index to set the value at.
           * @param value The adr11TEREX to set.
           * @return This builder for chaining.
           */
          public Builder setAdr11TEREX(
              int index, long value) {

            ensureAdr11TEREXIsMutable();
            adr11TEREX_.setLong(index, value);
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @param value The adr11TEREX to add.
           * @return This builder for chaining.
           */
          public Builder addAdr11TEREX(long value) {

            ensureAdr11TEREXIsMutable();
            adr11TEREX_.addLong(value);
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @param values The adr11TEREX to add.
           * @return This builder for chaining.
           */
          public Builder addAllAdr11TEREX(
              java.lang.Iterable<? extends java.lang.Long> values) {
            ensureAdr11TEREXIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, adr11TEREX_);
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[10] Коды ошибок
           * </pre>
           *
           * <code>repeated uint64 Adr11TEREX = 14;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdr11TEREX() {
            adr11TEREX_ = emptyLongList();
            bitField0_ = (bitField0_ & ~0x00000040);
            onChanged();
            return this;
          }

          private long adr69TEREX_ ;
          /**
           * <code>optional uint64 Adr69TEREX = 15;</code>
           * @return Whether the adr69TEREX field is set.
           */
          @java.lang.Override
          public boolean hasAdr69TEREX() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional uint64 Adr69TEREX = 15;</code>
           * @return The adr69TEREX.
           */
          @java.lang.Override
          public long getAdr69TEREX() {
            return adr69TEREX_;
          }
          /**
           * <code>optional uint64 Adr69TEREX = 15;</code>
           * @param value The adr69TEREX to set.
           * @return This builder for chaining.
           */
          public Builder setAdr69TEREX(long value) {

            adr69TEREX_ = value;
            bitField0_ |= 0x00000080;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 Adr69TEREX = 15;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdr69TEREX() {
            bitField0_ = (bitField0_ & ~0x00000080);
            adr69TEREX_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.ExCAN)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<ExCAN>
            PARSER = new com.google.protobuf.AbstractParser<ExCAN>() {
          @java.lang.Override
          public ExCAN parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<ExCAN> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<ExCAN> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface Taho_DDDOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Позиция текущего блока (в байтах от начала файла)
         * </pre>
         *
         * <code>optional uint32 BLKPOS = 1;</code>
         * @return Whether the bLKPOS field is set.
         */
        boolean hasBLKPOS();
        /**
         * <pre>
         * Позиция текущего блока (в байтах от начала файла)
         * </pre>
         *
         * <code>optional uint32 BLKPOS = 1;</code>
         * @return The bLKPOS.
         */
        int getBLKPOS();

        /**
         * <pre>
         *[1024] Данные блока
         * </pre>
         *
         * <code>optional bytes FILEDATA = 2;</code>
         * @return Whether the fILEDATA field is set.
         */
        boolean hasFILEDATA();
        /**
         * <pre>
         *[1024] Данные блока
         * </pre>
         *
         * <code>optional bytes FILEDATA = 2;</code>
         * @return The fILEDATA.
         */
        com.google.protobuf.ByteString getFILEDATA();

        /**
         * <pre>
         *[16] Идентификатор карты водителя
         * </pre>
         *
         * <code>optional bytes CARDID = 3;</code>
         * @return Whether the cARDID field is set.
         */
        boolean hasCARDID();
        /**
         * <pre>
         *[16] Идентификатор карты водителя
         * </pre>
         *
         * <code>optional bytes CARDID = 3;</code>
         * @return The cARDID.
         */
        com.google.protobuf.ByteString getCARDID();

        /**
         * <pre>
         * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
         * </pre>
         *
         * <code>optional uint32 STATUS_DATA = 4;</code>
         * @return Whether the sTATUSDATA field is set.
         */
        boolean hasSTATUSDATA();
        /**
         * <pre>
         * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
         * </pre>
         *
         * <code>optional uint32 STATUS_DATA = 4;</code>
         * @return The sTATUSDATA.
         */
        int getSTATUSDATA();
      }
      /**
       * <pre>
       * Описание блока передачи части DDD-файла
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD}
       */
      public static final class Taho_DDD extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD)
          Taho_DDDOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Taho_DDD.newBuilder() to construct.
        private Taho_DDD(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Taho_DDD() {
          fILEDATA_ = com.google.protobuf.ByteString.EMPTY;
          cARDID_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Taho_DDD();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder.class);
        }

        private int bitField0_;
        public static final int BLKPOS_FIELD_NUMBER = 1;
        private int bLKPOS_ = 0;
        /**
         * <pre>
         * Позиция текущего блока (в байтах от начала файла)
         * </pre>
         *
         * <code>optional uint32 BLKPOS = 1;</code>
         * @return Whether the bLKPOS field is set.
         */
        @java.lang.Override
        public boolean hasBLKPOS() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Позиция текущего блока (в байтах от начала файла)
         * </pre>
         *
         * <code>optional uint32 BLKPOS = 1;</code>
         * @return The bLKPOS.
         */
        @java.lang.Override
        public int getBLKPOS() {
          return bLKPOS_;
        }

        public static final int FILEDATA_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString fILEDATA_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[1024] Данные блока
         * </pre>
         *
         * <code>optional bytes FILEDATA = 2;</code>
         * @return Whether the fILEDATA field is set.
         */
        @java.lang.Override
        public boolean hasFILEDATA() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[1024] Данные блока
         * </pre>
         *
         * <code>optional bytes FILEDATA = 2;</code>
         * @return The fILEDATA.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getFILEDATA() {
          return fILEDATA_;
        }

        public static final int CARDID_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString cARDID_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[16] Идентификатор карты водителя
         * </pre>
         *
         * <code>optional bytes CARDID = 3;</code>
         * @return Whether the cARDID field is set.
         */
        @java.lang.Override
        public boolean hasCARDID() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[16] Идентификатор карты водителя
         * </pre>
         *
         * <code>optional bytes CARDID = 3;</code>
         * @return The cARDID.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getCARDID() {
          return cARDID_;
        }

        public static final int STATUS_DATA_FIELD_NUMBER = 4;
        private int sTATUSDATA_ = 0;
        /**
         * <pre>
         * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
         * </pre>
         *
         * <code>optional uint32 STATUS_DATA = 4;</code>
         * @return Whether the sTATUSDATA field is set.
         */
        @java.lang.Override
        public boolean hasSTATUSDATA() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
         * </pre>
         *
         * <code>optional uint32 STATUS_DATA = 4;</code>
         * @return The sTATUSDATA.
         */
        @java.lang.Override
        public int getSTATUSDATA() {
          return sTATUSDATA_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, bLKPOS_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeBytes(2, fILEDATA_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeBytes(3, cARDID_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeUInt32(4, sTATUSDATA_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, bLKPOS_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, fILEDATA_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(3, cARDID_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, sTATUSDATA_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) obj;

          if (hasBLKPOS() != other.hasBLKPOS()) return false;
          if (hasBLKPOS()) {
            if (getBLKPOS()
                != other.getBLKPOS()) return false;
          }
          if (hasFILEDATA() != other.hasFILEDATA()) return false;
          if (hasFILEDATA()) {
            if (!getFILEDATA()
                .equals(other.getFILEDATA())) return false;
          }
          if (hasCARDID() != other.hasCARDID()) return false;
          if (hasCARDID()) {
            if (!getCARDID()
                .equals(other.getCARDID())) return false;
          }
          if (hasSTATUSDATA() != other.hasSTATUSDATA()) return false;
          if (hasSTATUSDATA()) {
            if (getSTATUSDATA()
                != other.getSTATUSDATA()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasBLKPOS()) {
            hash = (37 * hash) + BLKPOS_FIELD_NUMBER;
            hash = (53 * hash) + getBLKPOS();
          }
          if (hasFILEDATA()) {
            hash = (37 * hash) + FILEDATA_FIELD_NUMBER;
            hash = (53 * hash) + getFILEDATA().hashCode();
          }
          if (hasCARDID()) {
            hash = (37 * hash) + CARDID_FIELD_NUMBER;
            hash = (53 * hash) + getCARDID().hashCode();
          }
          if (hasSTATUSDATA()) {
            hash = (37 * hash) + STATUS_DATA_FIELD_NUMBER;
            hash = (53 * hash) + getSTATUSDATA();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Описание блока передачи части DDD-файла
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            bLKPOS_ = 0;
            fILEDATA_ = com.google.protobuf.ByteString.EMPTY;
            cARDID_ = com.google.protobuf.ByteString.EMPTY;
            sTATUSDATA_ = 0;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.bLKPOS_ = bLKPOS_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.fILEDATA_ = fILEDATA_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.cARDID_ = cARDID_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.sTATUSDATA_ = sTATUSDATA_;
              to_bitField0_ |= 0x00000008;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance()) return this;
            if (other.hasBLKPOS()) {
              setBLKPOS(other.getBLKPOS());
            }
            if (other.hasFILEDATA()) {
              setFILEDATA(other.getFILEDATA());
            }
            if (other.hasCARDID()) {
              setCARDID(other.getCARDID());
            }
            if (other.hasSTATUSDATA()) {
              setSTATUSDATA(other.getSTATUSDATA());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    bLKPOS_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    fILEDATA_ = input.readBytes();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  case 26: {
                    cARDID_ = input.readBytes();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 26
                  case 32: {
                    sTATUSDATA_ = input.readUInt32();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 32
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int bLKPOS_ ;
          /**
           * <pre>
           * Позиция текущего блока (в байтах от начала файла)
           * </pre>
           *
           * <code>optional uint32 BLKPOS = 1;</code>
           * @return Whether the bLKPOS field is set.
           */
          @java.lang.Override
          public boolean hasBLKPOS() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Позиция текущего блока (в байтах от начала файла)
           * </pre>
           *
           * <code>optional uint32 BLKPOS = 1;</code>
           * @return The bLKPOS.
           */
          @java.lang.Override
          public int getBLKPOS() {
            return bLKPOS_;
          }
          /**
           * <pre>
           * Позиция текущего блока (в байтах от начала файла)
           * </pre>
           *
           * <code>optional uint32 BLKPOS = 1;</code>
           * @param value The bLKPOS to set.
           * @return This builder for chaining.
           */
          public Builder setBLKPOS(int value) {

            bLKPOS_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Позиция текущего блока (в байтах от начала файла)
           * </pre>
           *
           * <code>optional uint32 BLKPOS = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearBLKPOS() {
            bitField0_ = (bitField0_ & ~0x00000001);
            bLKPOS_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString fILEDATA_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <pre>
           *[1024] Данные блока
           * </pre>
           *
           * <code>optional bytes FILEDATA = 2;</code>
           * @return Whether the fILEDATA field is set.
           */
          @java.lang.Override
          public boolean hasFILEDATA() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           *[1024] Данные блока
           * </pre>
           *
           * <code>optional bytes FILEDATA = 2;</code>
           * @return The fILEDATA.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getFILEDATA() {
            return fILEDATA_;
          }
          /**
           * <pre>
           *[1024] Данные блока
           * </pre>
           *
           * <code>optional bytes FILEDATA = 2;</code>
           * @param value The fILEDATA to set.
           * @return This builder for chaining.
           */
          public Builder setFILEDATA(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            fILEDATA_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1024] Данные блока
           * </pre>
           *
           * <code>optional bytes FILEDATA = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearFILEDATA() {
            bitField0_ = (bitField0_ & ~0x00000002);
            fILEDATA_ = getDefaultInstance().getFILEDATA();
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString cARDID_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <pre>
           *[16] Идентификатор карты водителя
           * </pre>
           *
           * <code>optional bytes CARDID = 3;</code>
           * @return Whether the cARDID field is set.
           */
          @java.lang.Override
          public boolean hasCARDID() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           *[16] Идентификатор карты водителя
           * </pre>
           *
           * <code>optional bytes CARDID = 3;</code>
           * @return The cARDID.
           */
          @java.lang.Override
          public com.google.protobuf.ByteString getCARDID() {
            return cARDID_;
          }
          /**
           * <pre>
           *[16] Идентификатор карты водителя
           * </pre>
           *
           * <code>optional bytes CARDID = 3;</code>
           * @param value The cARDID to set.
           * @return This builder for chaining.
           */
          public Builder setCARDID(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            cARDID_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[16] Идентификатор карты водителя
           * </pre>
           *
           * <code>optional bytes CARDID = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearCARDID() {
            bitField0_ = (bitField0_ & ~0x00000004);
            cARDID_ = getDefaultInstance().getCARDID();
            onChanged();
            return this;
          }

          private int sTATUSDATA_ ;
          /**
           * <pre>
           * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
           * </pre>
           *
           * <code>optional uint32 STATUS_DATA = 4;</code>
           * @return Whether the sTATUSDATA field is set.
           */
          @java.lang.Override
          public boolean hasSTATUSDATA() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
           * </pre>
           *
           * <code>optional uint32 STATUS_DATA = 4;</code>
           * @return The sTATUSDATA.
           */
          @java.lang.Override
          public int getSTATUSDATA() {
            return sTATUSDATA_;
          }
          /**
           * <pre>
           * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
           * </pre>
           *
           * <code>optional uint32 STATUS_DATA = 4;</code>
           * @param value The sTATUSDATA to set.
           * @return This builder for chaining.
           */
          public Builder setSTATUSDATA(int value) {

            sTATUSDATA_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * параметр равен 1 если данный блок последний в файле, 2 -  если ошибка чтения данных, 0 – если обычный блок данных
           * </pre>
           *
           * <code>optional uint32 STATUS_DATA = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearSTATUSDATA() {
            bitField0_ = (bitField0_ & ~0x00000008);
            sTATUSDATA_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.Taho_DDD)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Taho_DDD>
            PARSER = new com.google.protobuf.AbstractParser<Taho_DDD>() {
          @java.lang.Override
          public Taho_DDD parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Taho_DDD> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Taho_DDD> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface APCOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus1 = 1;</code>
         * @return Whether the aPCStatus1 field is set.
         */
        boolean hasAPCStatus1();
        /**
         * <pre>
         *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus1 = 1;</code>
         * @return The aPCStatus1.
         */
        int getAPCStatus1();

        /**
         * <pre>
         *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus2 = 2;</code>
         * @return Whether the aPCStatus2 field is set.
         */
        boolean hasAPCStatus2();
        /**
         * <pre>
         *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus2 = 2;</code>
         * @return The aPCStatus2.
         */
        int getAPCStatus2();

        /**
         * <pre>
         *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus3 = 3;</code>
         * @return Whether the aPCStatus3 field is set.
         */
        boolean hasAPCStatus3();
        /**
         * <pre>
         *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus3 = 3;</code>
         * @return The aPCStatus3.
         */
        int getAPCStatus3();

        /**
         * <pre>
         *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus4 = 4;</code>
         * @return Whether the aPCStatus4 field is set.
         */
        boolean hasAPCStatus4();
        /**
         * <pre>
         *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus4 = 4;</code>
         * @return The aPCStatus4.
         */
        int getAPCStatus4();

        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberIn1 = 5;</code>
         * @return Whether the aPCNumberIn1 field is set.
         */
        boolean hasAPCNumberIn1();
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberIn1 = 5;</code>
         * @return The aPCNumberIn1.
         */
        int getAPCNumberIn1();

        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberOut1 = 6;</code>
         * @return Whether the aPCNumberOut1 field is set.
         */
        boolean hasAPCNumberOut1();
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberOut1 = 6;</code>
         * @return The aPCNumberOut1.
         */
        int getAPCNumberOut1();

        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberIn2 = 7;</code>
         * @return Whether the aPCNumberIn2 field is set.
         */
        boolean hasAPCNumberIn2();
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberIn2 = 7;</code>
         * @return The aPCNumberIn2.
         */
        int getAPCNumberIn2();

        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberOut2 = 8;</code>
         * @return Whether the aPCNumberOut2 field is set.
         */
        boolean hasAPCNumberOut2();
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberOut2 = 8;</code>
         * @return The aPCNumberOut2.
         */
        int getAPCNumberOut2();

        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberIn3 = 9;</code>
         * @return Whether the aPCNumberIn3 field is set.
         */
        boolean hasAPCNumberIn3();
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberIn3 = 9;</code>
         * @return The aPCNumberIn3.
         */
        int getAPCNumberIn3();

        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberOut31 = 10;</code>
         * @return Whether the aPCNumberOut31 field is set.
         */
        boolean hasAPCNumberOut31();
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberOut31 = 10;</code>
         * @return The aPCNumberOut31.
         */
        int getAPCNumberOut31();

        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberIn4 = 11;</code>
         * @return Whether the aPCNumberIn4 field is set.
         */
        boolean hasAPCNumberIn4();
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberIn4 = 11;</code>
         * @return The aPCNumberIn4.
         */
        int getAPCNumberIn4();

        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberOut4 = 12;</code>
         * @return Whether the aPCNumberOut4 field is set.
         */
        boolean hasAPCNumberOut4();
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberOut4 = 12;</code>
         * @return The aPCNumberOut4.
         */
        int getAPCNumberOut4();
      }
      /**
       * <pre>
       * Данные от ДПП IRMA. 
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC}
       */
      public static final class APC extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC)
          APCOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use APC.newBuilder() to construct.
        private APC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private APC() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new APC();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder.class);
        }

        private int bitField0_;
        public static final int APCSTATUS1_FIELD_NUMBER = 1;
        private int aPCStatus1_ = 0;
        /**
         * <pre>
         *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus1 = 1;</code>
         * @return Whether the aPCStatus1 field is set.
         */
        @java.lang.Override
        public boolean hasAPCStatus1() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus1 = 1;</code>
         * @return The aPCStatus1.
         */
        @java.lang.Override
        public int getAPCStatus1() {
          return aPCStatus1_;
        }

        public static final int APCSTATUS2_FIELD_NUMBER = 2;
        private int aPCStatus2_ = 0;
        /**
         * <pre>
         *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus2 = 2;</code>
         * @return Whether the aPCStatus2 field is set.
         */
        @java.lang.Override
        public boolean hasAPCStatus2() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus2 = 2;</code>
         * @return The aPCStatus2.
         */
        @java.lang.Override
        public int getAPCStatus2() {
          return aPCStatus2_;
        }

        public static final int APCSTATUS3_FIELD_NUMBER = 3;
        private int aPCStatus3_ = 0;
        /**
         * <pre>
         *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus3 = 3;</code>
         * @return Whether the aPCStatus3 field is set.
         */
        @java.lang.Override
        public boolean hasAPCStatus3() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus3 = 3;</code>
         * @return The aPCStatus3.
         */
        @java.lang.Override
        public int getAPCStatus3() {
          return aPCStatus3_;
        }

        public static final int APCSTATUS4_FIELD_NUMBER = 4;
        private int aPCStatus4_ = 0;
        /**
         * <pre>
         *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus4 = 4;</code>
         * @return Whether the aPCStatus4 field is set.
         */
        @java.lang.Override
        public boolean hasAPCStatus4() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
         * </pre>
         *
         * <code>optional uint32 APCStatus4 = 4;</code>
         * @return The aPCStatus4.
         */
        @java.lang.Override
        public int getAPCStatus4() {
          return aPCStatus4_;
        }

        public static final int APCNUMBERIN1_FIELD_NUMBER = 5;
        private int aPCNumberIn1_ = 0;
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberIn1 = 5;</code>
         * @return Whether the aPCNumberIn1 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberIn1() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberIn1 = 5;</code>
         * @return The aPCNumberIn1.
         */
        @java.lang.Override
        public int getAPCNumberIn1() {
          return aPCNumberIn1_;
        }

        public static final int APCNUMBEROUT1_FIELD_NUMBER = 6;
        private int aPCNumberOut1_ = 0;
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberOut1 = 6;</code>
         * @return Whether the aPCNumberOut1 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberOut1() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
         * </pre>
         *
         * <code>optional uint32 APCNumberOut1 = 6;</code>
         * @return The aPCNumberOut1.
         */
        @java.lang.Override
        public int getAPCNumberOut1() {
          return aPCNumberOut1_;
        }

        public static final int APCNUMBERIN2_FIELD_NUMBER = 7;
        private int aPCNumberIn2_ = 0;
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberIn2 = 7;</code>
         * @return Whether the aPCNumberIn2 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberIn2() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberIn2 = 7;</code>
         * @return The aPCNumberIn2.
         */
        @java.lang.Override
        public int getAPCNumberIn2() {
          return aPCNumberIn2_;
        }

        public static final int APCNUMBEROUT2_FIELD_NUMBER = 8;
        private int aPCNumberOut2_ = 0;
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberOut2 = 8;</code>
         * @return Whether the aPCNumberOut2 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberOut2() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
         * </pre>
         *
         * <code>optional uint32 APCNumberOut2 = 8;</code>
         * @return The aPCNumberOut2.
         */
        @java.lang.Override
        public int getAPCNumberOut2() {
          return aPCNumberOut2_;
        }

        public static final int APCNUMBERIN3_FIELD_NUMBER = 9;
        private int aPCNumberIn3_ = 0;
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberIn3 = 9;</code>
         * @return Whether the aPCNumberIn3 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberIn3() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberIn3 = 9;</code>
         * @return The aPCNumberIn3.
         */
        @java.lang.Override
        public int getAPCNumberIn3() {
          return aPCNumberIn3_;
        }

        public static final int APCNUMBEROUT31_FIELD_NUMBER = 10;
        private int aPCNumberOut31_ = 0;
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberOut31 = 10;</code>
         * @return Whether the aPCNumberOut31 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberOut31() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
         * </pre>
         *
         * <code>optional uint32 APCNumberOut31 = 10;</code>
         * @return The aPCNumberOut31.
         */
        @java.lang.Override
        public int getAPCNumberOut31() {
          return aPCNumberOut31_;
        }

        public static final int APCNUMBERIN4_FIELD_NUMBER = 11;
        private int aPCNumberIn4_ = 0;
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberIn4 = 11;</code>
         * @return Whether the aPCNumberIn4 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberIn4() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberIn4 = 11;</code>
         * @return The aPCNumberIn4.
         */
        @java.lang.Override
        public int getAPCNumberIn4() {
          return aPCNumberIn4_;
        }

        public static final int APCNUMBEROUT4_FIELD_NUMBER = 12;
        private int aPCNumberOut4_ = 0;
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberOut4 = 12;</code>
         * @return Whether the aPCNumberOut4 field is set.
         */
        @java.lang.Override
        public boolean hasAPCNumberOut4() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
         * </pre>
         *
         * <code>optional uint32 APCNumberOut4 = 12;</code>
         * @return The aPCNumberOut4.
         */
        @java.lang.Override
        public int getAPCNumberOut4() {
          return aPCNumberOut4_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, aPCStatus1_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeUInt32(2, aPCStatus2_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt32(3, aPCStatus3_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeUInt32(4, aPCStatus4_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeUInt32(5, aPCNumberIn1_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeUInt32(6, aPCNumberOut1_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeUInt32(7, aPCNumberIn2_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeUInt32(8, aPCNumberOut2_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeUInt32(9, aPCNumberIn3_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeUInt32(10, aPCNumberOut31_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeUInt32(11, aPCNumberIn4_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeUInt32(12, aPCNumberOut4_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, aPCStatus1_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, aPCStatus2_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, aPCStatus3_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, aPCStatus4_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(5, aPCNumberIn1_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, aPCNumberOut1_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, aPCNumberIn2_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(8, aPCNumberOut2_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(9, aPCNumberIn3_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(10, aPCNumberOut31_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(11, aPCNumberIn4_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(12, aPCNumberOut4_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC) obj;

          if (hasAPCStatus1() != other.hasAPCStatus1()) return false;
          if (hasAPCStatus1()) {
            if (getAPCStatus1()
                != other.getAPCStatus1()) return false;
          }
          if (hasAPCStatus2() != other.hasAPCStatus2()) return false;
          if (hasAPCStatus2()) {
            if (getAPCStatus2()
                != other.getAPCStatus2()) return false;
          }
          if (hasAPCStatus3() != other.hasAPCStatus3()) return false;
          if (hasAPCStatus3()) {
            if (getAPCStatus3()
                != other.getAPCStatus3()) return false;
          }
          if (hasAPCStatus4() != other.hasAPCStatus4()) return false;
          if (hasAPCStatus4()) {
            if (getAPCStatus4()
                != other.getAPCStatus4()) return false;
          }
          if (hasAPCNumberIn1() != other.hasAPCNumberIn1()) return false;
          if (hasAPCNumberIn1()) {
            if (getAPCNumberIn1()
                != other.getAPCNumberIn1()) return false;
          }
          if (hasAPCNumberOut1() != other.hasAPCNumberOut1()) return false;
          if (hasAPCNumberOut1()) {
            if (getAPCNumberOut1()
                != other.getAPCNumberOut1()) return false;
          }
          if (hasAPCNumberIn2() != other.hasAPCNumberIn2()) return false;
          if (hasAPCNumberIn2()) {
            if (getAPCNumberIn2()
                != other.getAPCNumberIn2()) return false;
          }
          if (hasAPCNumberOut2() != other.hasAPCNumberOut2()) return false;
          if (hasAPCNumberOut2()) {
            if (getAPCNumberOut2()
                != other.getAPCNumberOut2()) return false;
          }
          if (hasAPCNumberIn3() != other.hasAPCNumberIn3()) return false;
          if (hasAPCNumberIn3()) {
            if (getAPCNumberIn3()
                != other.getAPCNumberIn3()) return false;
          }
          if (hasAPCNumberOut31() != other.hasAPCNumberOut31()) return false;
          if (hasAPCNumberOut31()) {
            if (getAPCNumberOut31()
                != other.getAPCNumberOut31()) return false;
          }
          if (hasAPCNumberIn4() != other.hasAPCNumberIn4()) return false;
          if (hasAPCNumberIn4()) {
            if (getAPCNumberIn4()
                != other.getAPCNumberIn4()) return false;
          }
          if (hasAPCNumberOut4() != other.hasAPCNumberOut4()) return false;
          if (hasAPCNumberOut4()) {
            if (getAPCNumberOut4()
                != other.getAPCNumberOut4()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasAPCStatus1()) {
            hash = (37 * hash) + APCSTATUS1_FIELD_NUMBER;
            hash = (53 * hash) + getAPCStatus1();
          }
          if (hasAPCStatus2()) {
            hash = (37 * hash) + APCSTATUS2_FIELD_NUMBER;
            hash = (53 * hash) + getAPCStatus2();
          }
          if (hasAPCStatus3()) {
            hash = (37 * hash) + APCSTATUS3_FIELD_NUMBER;
            hash = (53 * hash) + getAPCStatus3();
          }
          if (hasAPCStatus4()) {
            hash = (37 * hash) + APCSTATUS4_FIELD_NUMBER;
            hash = (53 * hash) + getAPCStatus4();
          }
          if (hasAPCNumberIn1()) {
            hash = (37 * hash) + APCNUMBERIN1_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberIn1();
          }
          if (hasAPCNumberOut1()) {
            hash = (37 * hash) + APCNUMBEROUT1_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberOut1();
          }
          if (hasAPCNumberIn2()) {
            hash = (37 * hash) + APCNUMBERIN2_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberIn2();
          }
          if (hasAPCNumberOut2()) {
            hash = (37 * hash) + APCNUMBEROUT2_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberOut2();
          }
          if (hasAPCNumberIn3()) {
            hash = (37 * hash) + APCNUMBERIN3_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberIn3();
          }
          if (hasAPCNumberOut31()) {
            hash = (37 * hash) + APCNUMBEROUT31_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberOut31();
          }
          if (hasAPCNumberIn4()) {
            hash = (37 * hash) + APCNUMBERIN4_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberIn4();
          }
          if (hasAPCNumberOut4()) {
            hash = (37 * hash) + APCNUMBEROUT4_FIELD_NUMBER;
            hash = (53 * hash) + getAPCNumberOut4();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Данные от ДПП IRMA. 
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            aPCStatus1_ = 0;
            aPCStatus2_ = 0;
            aPCStatus3_ = 0;
            aPCStatus4_ = 0;
            aPCNumberIn1_ = 0;
            aPCNumberOut1_ = 0;
            aPCNumberIn2_ = 0;
            aPCNumberOut2_ = 0;
            aPCNumberIn3_ = 0;
            aPCNumberOut31_ = 0;
            aPCNumberIn4_ = 0;
            aPCNumberOut4_ = 0;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.aPCStatus1_ = aPCStatus1_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.aPCStatus2_ = aPCStatus2_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.aPCStatus3_ = aPCStatus3_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.aPCStatus4_ = aPCStatus4_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.aPCNumberIn1_ = aPCNumberIn1_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.aPCNumberOut1_ = aPCNumberOut1_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.aPCNumberIn2_ = aPCNumberIn2_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.aPCNumberOut2_ = aPCNumberOut2_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.aPCNumberIn3_ = aPCNumberIn3_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.aPCNumberOut31_ = aPCNumberOut31_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.aPCNumberIn4_ = aPCNumberIn4_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.aPCNumberOut4_ = aPCNumberOut4_;
              to_bitField0_ |= 0x00000800;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance()) return this;
            if (other.hasAPCStatus1()) {
              setAPCStatus1(other.getAPCStatus1());
            }
            if (other.hasAPCStatus2()) {
              setAPCStatus2(other.getAPCStatus2());
            }
            if (other.hasAPCStatus3()) {
              setAPCStatus3(other.getAPCStatus3());
            }
            if (other.hasAPCStatus4()) {
              setAPCStatus4(other.getAPCStatus4());
            }
            if (other.hasAPCNumberIn1()) {
              setAPCNumberIn1(other.getAPCNumberIn1());
            }
            if (other.hasAPCNumberOut1()) {
              setAPCNumberOut1(other.getAPCNumberOut1());
            }
            if (other.hasAPCNumberIn2()) {
              setAPCNumberIn2(other.getAPCNumberIn2());
            }
            if (other.hasAPCNumberOut2()) {
              setAPCNumberOut2(other.getAPCNumberOut2());
            }
            if (other.hasAPCNumberIn3()) {
              setAPCNumberIn3(other.getAPCNumberIn3());
            }
            if (other.hasAPCNumberOut31()) {
              setAPCNumberOut31(other.getAPCNumberOut31());
            }
            if (other.hasAPCNumberIn4()) {
              setAPCNumberIn4(other.getAPCNumberIn4());
            }
            if (other.hasAPCNumberOut4()) {
              setAPCNumberOut4(other.getAPCNumberOut4());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    aPCStatus1_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    aPCStatus2_ = input.readUInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 24: {
                    aPCStatus3_ = input.readUInt32();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  case 32: {
                    aPCStatus4_ = input.readUInt32();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 32
                  case 40: {
                    aPCNumberIn1_ = input.readUInt32();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 40
                  case 48: {
                    aPCNumberOut1_ = input.readUInt32();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 48
                  case 56: {
                    aPCNumberIn2_ = input.readUInt32();
                    bitField0_ |= 0x00000040;
                    break;
                  } // case 56
                  case 64: {
                    aPCNumberOut2_ = input.readUInt32();
                    bitField0_ |= 0x00000080;
                    break;
                  } // case 64
                  case 72: {
                    aPCNumberIn3_ = input.readUInt32();
                    bitField0_ |= 0x00000100;
                    break;
                  } // case 72
                  case 80: {
                    aPCNumberOut31_ = input.readUInt32();
                    bitField0_ |= 0x00000200;
                    break;
                  } // case 80
                  case 88: {
                    aPCNumberIn4_ = input.readUInt32();
                    bitField0_ |= 0x00000400;
                    break;
                  } // case 88
                  case 96: {
                    aPCNumberOut4_ = input.readUInt32();
                    bitField0_ |= 0x00000800;
                    break;
                  } // case 96
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int aPCStatus1_ ;
          /**
           * <pre>
           *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus1 = 1;</code>
           * @return Whether the aPCStatus1 field is set.
           */
          @java.lang.Override
          public boolean hasAPCStatus1() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus1 = 1;</code>
           * @return The aPCStatus1.
           */
          @java.lang.Override
          public int getAPCStatus1() {
            return aPCStatus1_;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus1 = 1;</code>
           * @param value The aPCStatus1 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCStatus1(int value) {

            aPCStatus1_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #1: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus1 = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCStatus1() {
            bitField0_ = (bitField0_ & ~0x00000001);
            aPCStatus1_ = 0;
            onChanged();
            return this;
          }

          private int aPCStatus2_ ;
          /**
           * <pre>
           *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus2 = 2;</code>
           * @return Whether the aPCStatus2 field is set.
           */
          @java.lang.Override
          public boolean hasAPCStatus2() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus2 = 2;</code>
           * @return The aPCStatus2.
           */
          @java.lang.Override
          public int getAPCStatus2() {
            return aPCStatus2_;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus2 = 2;</code>
           * @param value The aPCStatus2 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCStatus2(int value) {

            aPCStatus2_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #2: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus2 = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCStatus2() {
            bitField0_ = (bitField0_ & ~0x00000002);
            aPCStatus2_ = 0;
            onChanged();
            return this;
          }

          private int aPCStatus3_ ;
          /**
           * <pre>
           *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus3 = 3;</code>
           * @return Whether the aPCStatus3 field is set.
           */
          @java.lang.Override
          public boolean hasAPCStatus3() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus3 = 3;</code>
           * @return The aPCStatus3.
           */
          @java.lang.Override
          public int getAPCStatus3() {
            return aPCStatus3_;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus3 = 3;</code>
           * @param value The aPCStatus3 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCStatus3(int value) {

            aPCStatus3_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #3: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus3 = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCStatus3() {
            bitField0_ = (bitField0_ & ~0x00000004);
            aPCStatus3_ = 0;
            onChanged();
            return this;
          }

          private int aPCStatus4_ ;
          /**
           * <pre>
           *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus4 = 4;</code>
           * @return Whether the aPCStatus4 field is set.
           */
          @java.lang.Override
          public boolean hasAPCStatus4() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus4 = 4;</code>
           * @return The aPCStatus4.
           */
          @java.lang.Override
          public int getAPCStatus4() {
            return aPCStatus4_;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus4 = 4;</code>
           * @param value The aPCStatus4 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCStatus4(int value) {

            aPCStatus4_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Статус ДПП IRMA #4: 0 – ок, 1 – «саботаж», 2 – «дефект», 3 – «датчик не отвечает»
           * </pre>
           *
           * <code>optional uint32 APCStatus4 = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCStatus4() {
            bitField0_ = (bitField0_ & ~0x00000008);
            aPCStatus4_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberIn1_ ;
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberIn1 = 5;</code>
           * @return Whether the aPCNumberIn1 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberIn1() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberIn1 = 5;</code>
           * @return The aPCNumberIn1.
           */
          @java.lang.Override
          public int getAPCNumberIn1() {
            return aPCNumberIn1_;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberIn1 = 5;</code>
           * @param value The aPCNumberIn1 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberIn1(int value) {

            aPCNumberIn1_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberIn1 = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberIn1() {
            bitField0_ = (bitField0_ & ~0x00000010);
            aPCNumberIn1_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberOut1_ ;
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberOut1 = 6;</code>
           * @return Whether the aPCNumberOut1 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberOut1() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberOut1 = 6;</code>
           * @return The aPCNumberOut1.
           */
          @java.lang.Override
          public int getAPCNumberOut1() {
            return aPCNumberOut1_;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberOut1 = 6;</code>
           * @param value The aPCNumberOut1 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberOut1(int value) {

            aPCNumberOut1_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #1
           * </pre>
           *
           * <code>optional uint32 APCNumberOut1 = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberOut1() {
            bitField0_ = (bitField0_ & ~0x00000020);
            aPCNumberOut1_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberIn2_ ;
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberIn2 = 7;</code>
           * @return Whether the aPCNumberIn2 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberIn2() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberIn2 = 7;</code>
           * @return The aPCNumberIn2.
           */
          @java.lang.Override
          public int getAPCNumberIn2() {
            return aPCNumberIn2_;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberIn2 = 7;</code>
           * @param value The aPCNumberIn2 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberIn2(int value) {

            aPCNumberIn2_ = value;
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberIn2 = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberIn2() {
            bitField0_ = (bitField0_ & ~0x00000040);
            aPCNumberIn2_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberOut2_ ;
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberOut2 = 8;</code>
           * @return Whether the aPCNumberOut2 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberOut2() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberOut2 = 8;</code>
           * @return The aPCNumberOut2.
           */
          @java.lang.Override
          public int getAPCNumberOut2() {
            return aPCNumberOut2_;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberOut2 = 8;</code>
           * @param value The aPCNumberOut2 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberOut2(int value) {

            aPCNumberOut2_ = value;
            bitField0_ |= 0x00000080;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #2
           * </pre>
           *
           * <code>optional uint32 APCNumberOut2 = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberOut2() {
            bitField0_ = (bitField0_ & ~0x00000080);
            aPCNumberOut2_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberIn3_ ;
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberIn3 = 9;</code>
           * @return Whether the aPCNumberIn3 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberIn3() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberIn3 = 9;</code>
           * @return The aPCNumberIn3.
           */
          @java.lang.Override
          public int getAPCNumberIn3() {
            return aPCNumberIn3_;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberIn3 = 9;</code>
           * @param value The aPCNumberIn3 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberIn3(int value) {

            aPCNumberIn3_ = value;
            bitField0_ |= 0x00000100;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberIn3 = 9;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberIn3() {
            bitField0_ = (bitField0_ & ~0x00000100);
            aPCNumberIn3_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberOut31_ ;
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberOut31 = 10;</code>
           * @return Whether the aPCNumberOut31 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberOut31() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberOut31 = 10;</code>
           * @return The aPCNumberOut31.
           */
          @java.lang.Override
          public int getAPCNumberOut31() {
            return aPCNumberOut31_;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberOut31 = 10;</code>
           * @param value The aPCNumberOut31 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberOut31(int value) {

            aPCNumberOut31_ = value;
            bitField0_ |= 0x00000200;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #3
           * </pre>
           *
           * <code>optional uint32 APCNumberOut31 = 10;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberOut31() {
            bitField0_ = (bitField0_ & ~0x00000200);
            aPCNumberOut31_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberIn4_ ;
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberIn4 = 11;</code>
           * @return Whether the aPCNumberIn4 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberIn4() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberIn4 = 11;</code>
           * @return The aPCNumberIn4.
           */
          @java.lang.Override
          public int getAPCNumberIn4() {
            return aPCNumberIn4_;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberIn4 = 11;</code>
           * @param value The aPCNumberIn4 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberIn4(int value) {

            aPCNumberIn4_ = value;
            bitField0_ |= 0x00000400;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вошедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberIn4 = 11;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberIn4() {
            bitField0_ = (bitField0_ & ~0x00000400);
            aPCNumberIn4_ = 0;
            onChanged();
            return this;
          }

          private int aPCNumberOut4_ ;
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberOut4 = 12;</code>
           * @return Whether the aPCNumberOut4 field is set.
           */
          @java.lang.Override
          public boolean hasAPCNumberOut4() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberOut4 = 12;</code>
           * @return The aPCNumberOut4.
           */
          @java.lang.Override
          public int getAPCNumberOut4() {
            return aPCNumberOut4_;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberOut4 = 12;</code>
           * @param value The aPCNumberOut4 to set.
           * @return This builder for chaining.
           */
          public Builder setAPCNumberOut4(int value) {

            aPCNumberOut4_ = value;
            bitField0_ |= 0x00000800;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[2] Количество вышедших пассажиров подсчитанное на  ДПП IRMA #4
           * </pre>
           *
           * <code>optional uint32 APCNumberOut4 = 12;</code>
           * @return This builder for chaining.
           */
          public Builder clearAPCNumberOut4() {
            bitField0_ = (bitField0_ & ~0x00000800);
            aPCNumberOut4_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.APC)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<APC>
            PARSER = new com.google.protobuf.AbstractParser<APC>() {
          @java.lang.Override
          public APC parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<APC> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<APC> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MobileEyeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *[1] Статус MobileEye (битовая маска событий)
         * </pre>
         *
         * <code>optional uint32 MobileEyeStatus = 1;</code>
         * @return Whether the mobileEyeStatus field is set.
         */
        boolean hasMobileEyeStatus();
        /**
         * <pre>
         *[1] Статус MobileEye (битовая маска событий)
         * </pre>
         *
         * <code>optional uint32 MobileEyeStatus = 1;</code>
         * @return The mobileEyeStatus.
         */
        int getMobileEyeStatus();

        /**
         * <pre>
         * Данные с MobileEye адресс кэн 700
         * </pre>
         *
         * <code>repeated bytes CAN700 = 2;</code>
         * @return A list containing the cAN700.
         */
        java.util.List<com.google.protobuf.ByteString> getCAN700List();
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 700
         * </pre>
         *
         * <code>repeated bytes CAN700 = 2;</code>
         * @return The count of cAN700.
         */
        int getCAN700Count();
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 700
         * </pre>
         *
         * <code>repeated bytes CAN700 = 2;</code>
         * @param index The index of the element to return.
         * @return The cAN700 at the given index.
         */
        com.google.protobuf.ByteString getCAN700(int index);

        /**
         * <pre>
         * Данные с MobileEye адресс кэн 727
         * </pre>
         *
         * <code>repeated bytes CAN727 = 3;</code>
         * @return A list containing the cAN727.
         */
        java.util.List<com.google.protobuf.ByteString> getCAN727List();
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 727
         * </pre>
         *
         * <code>repeated bytes CAN727 = 3;</code>
         * @return The count of cAN727.
         */
        int getCAN727Count();
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 727
         * </pre>
         *
         * <code>repeated bytes CAN727 = 3;</code>
         * @param index The index of the element to return.
         * @return The cAN727 at the given index.
         */
        com.google.protobuf.ByteString getCAN727(int index);

        /**
         * <pre>
         * Данные с MobileEye адресс кэн 760
         * </pre>
         *
         * <code>repeated bytes CAN760 = 4;</code>
         * @return A list containing the cAN760.
         */
        java.util.List<com.google.protobuf.ByteString> getCAN760List();
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 760
         * </pre>
         *
         * <code>repeated bytes CAN760 = 4;</code>
         * @return The count of cAN760.
         */
        int getCAN760Count();
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 760
         * </pre>
         *
         * <code>repeated bytes CAN760 = 4;</code>
         * @param index The index of the element to return.
         * @return The cAN760 at the given index.
         */
        com.google.protobuf.ByteString getCAN760(int index);
      }
      /**
       * <pre>
       * Данные от MobileEye 
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye}
       */
      public static final class MobileEye extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye)
          MobileEyeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use MobileEye.newBuilder() to construct.
        private MobileEye(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private MobileEye() {
          cAN700_ = emptyList(com.google.protobuf.ByteString.class);
          cAN727_ = emptyList(com.google.protobuf.ByteString.class);
          cAN760_ = emptyList(com.google.protobuf.ByteString.class);
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new MobileEye();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder.class);
        }

        private int bitField0_;
        public static final int MOBILEEYESTATUS_FIELD_NUMBER = 1;
        private int mobileEyeStatus_ = 0;
        /**
         * <pre>
         *[1] Статус MobileEye (битовая маска событий)
         * </pre>
         *
         * <code>optional uint32 MobileEyeStatus = 1;</code>
         * @return Whether the mobileEyeStatus field is set.
         */
        @java.lang.Override
        public boolean hasMobileEyeStatus() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[1] Статус MobileEye (битовая маска событий)
         * </pre>
         *
         * <code>optional uint32 MobileEyeStatus = 1;</code>
         * @return The mobileEyeStatus.
         */
        @java.lang.Override
        public int getMobileEyeStatus() {
          return mobileEyeStatus_;
        }

        public static final int CAN700_FIELD_NUMBER = 2;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> cAN700_ =
            emptyList(com.google.protobuf.ByteString.class);
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 700
         * </pre>
         *
         * <code>repeated bytes CAN700 = 2;</code>
         * @return A list containing the cAN700.
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.ByteString>
            getCAN700List() {
          return cAN700_;
        }
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 700
         * </pre>
         *
         * <code>repeated bytes CAN700 = 2;</code>
         * @return The count of cAN700.
         */
        public int getCAN700Count() {
          return cAN700_.size();
        }
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 700
         * </pre>
         *
         * <code>repeated bytes CAN700 = 2;</code>
         * @param index The index of the element to return.
         * @return The cAN700 at the given index.
         */
        public com.google.protobuf.ByteString getCAN700(int index) {
          return cAN700_.get(index);
        }

        public static final int CAN727_FIELD_NUMBER = 3;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> cAN727_ =
            emptyList(com.google.protobuf.ByteString.class);
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 727
         * </pre>
         *
         * <code>repeated bytes CAN727 = 3;</code>
         * @return A list containing the cAN727.
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.ByteString>
            getCAN727List() {
          return cAN727_;
        }
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 727
         * </pre>
         *
         * <code>repeated bytes CAN727 = 3;</code>
         * @return The count of cAN727.
         */
        public int getCAN727Count() {
          return cAN727_.size();
        }
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 727
         * </pre>
         *
         * <code>repeated bytes CAN727 = 3;</code>
         * @param index The index of the element to return.
         * @return The cAN727 at the given index.
         */
        public com.google.protobuf.ByteString getCAN727(int index) {
          return cAN727_.get(index);
        }

        public static final int CAN760_FIELD_NUMBER = 4;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> cAN760_ =
            emptyList(com.google.protobuf.ByteString.class);
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 760
         * </pre>
         *
         * <code>repeated bytes CAN760 = 4;</code>
         * @return A list containing the cAN760.
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.ByteString>
            getCAN760List() {
          return cAN760_;
        }
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 760
         * </pre>
         *
         * <code>repeated bytes CAN760 = 4;</code>
         * @return The count of cAN760.
         */
        public int getCAN760Count() {
          return cAN760_.size();
        }
        /**
         * <pre>
         * Данные с MobileEye адресс кэн 760
         * </pre>
         *
         * <code>repeated bytes CAN760 = 4;</code>
         * @param index The index of the element to return.
         * @return The cAN760 at the given index.
         */
        public com.google.protobuf.ByteString getCAN760(int index) {
          return cAN760_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, mobileEyeStatus_);
          }
          for (int i = 0; i < cAN700_.size(); i++) {
            output.writeBytes(2, cAN700_.get(i));
          }
          for (int i = 0; i < cAN727_.size(); i++) {
            output.writeBytes(3, cAN727_.get(i));
          }
          for (int i = 0; i < cAN760_.size(); i++) {
            output.writeBytes(4, cAN760_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, mobileEyeStatus_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < cAN700_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(cAN700_.get(i));
            }
            size += dataSize;
            size += 1 * getCAN700List().size();
          }
          {
            int dataSize = 0;
            for (int i = 0; i < cAN727_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(cAN727_.get(i));
            }
            size += dataSize;
            size += 1 * getCAN727List().size();
          }
          {
            int dataSize = 0;
            for (int i = 0; i < cAN760_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(cAN760_.get(i));
            }
            size += dataSize;
            size += 1 * getCAN760List().size();
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) obj;

          if (hasMobileEyeStatus() != other.hasMobileEyeStatus()) return false;
          if (hasMobileEyeStatus()) {
            if (getMobileEyeStatus()
                != other.getMobileEyeStatus()) return false;
          }
          if (!getCAN700List()
              .equals(other.getCAN700List())) return false;
          if (!getCAN727List()
              .equals(other.getCAN727List())) return false;
          if (!getCAN760List()
              .equals(other.getCAN760List())) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasMobileEyeStatus()) {
            hash = (37 * hash) + MOBILEEYESTATUS_FIELD_NUMBER;
            hash = (53 * hash) + getMobileEyeStatus();
          }
          if (getCAN700Count() > 0) {
            hash = (37 * hash) + CAN700_FIELD_NUMBER;
            hash = (53 * hash) + getCAN700List().hashCode();
          }
          if (getCAN727Count() > 0) {
            hash = (37 * hash) + CAN727_FIELD_NUMBER;
            hash = (53 * hash) + getCAN727List().hashCode();
          }
          if (getCAN760Count() > 0) {
            hash = (37 * hash) + CAN760_FIELD_NUMBER;
            hash = (53 * hash) + getCAN760List().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Данные от MobileEye 
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            mobileEyeStatus_ = 0;
            cAN700_ = emptyList(com.google.protobuf.ByteString.class);
            cAN727_ = emptyList(com.google.protobuf.ByteString.class);
            cAN760_ = emptyList(com.google.protobuf.ByteString.class);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.mobileEyeStatus_ = mobileEyeStatus_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              cAN700_.makeImmutable();
              result.cAN700_ = cAN700_;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              cAN727_.makeImmutable();
              result.cAN727_ = cAN727_;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              cAN760_.makeImmutable();
              result.cAN760_ = cAN760_;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance()) return this;
            if (other.hasMobileEyeStatus()) {
              setMobileEyeStatus(other.getMobileEyeStatus());
            }
            if (!other.cAN700_.isEmpty()) {
              if (cAN700_.isEmpty()) {
                cAN700_ = other.cAN700_;
                cAN700_.makeImmutable();
                bitField0_ |= 0x00000002;
              } else {
                ensureCAN700IsMutable();
                cAN700_.addAll(other.cAN700_);
              }
              onChanged();
            }
            if (!other.cAN727_.isEmpty()) {
              if (cAN727_.isEmpty()) {
                cAN727_ = other.cAN727_;
                cAN727_.makeImmutable();
                bitField0_ |= 0x00000004;
              } else {
                ensureCAN727IsMutable();
                cAN727_.addAll(other.cAN727_);
              }
              onChanged();
            }
            if (!other.cAN760_.isEmpty()) {
              if (cAN760_.isEmpty()) {
                cAN760_ = other.cAN760_;
                cAN760_.makeImmutable();
                bitField0_ |= 0x00000008;
              } else {
                ensureCAN760IsMutable();
                cAN760_.addAll(other.cAN760_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    mobileEyeStatus_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    com.google.protobuf.ByteString v = input.readBytes();
                    ensureCAN700IsMutable();
                    cAN700_.add(v);
                    break;
                  } // case 18
                  case 26: {
                    com.google.protobuf.ByteString v = input.readBytes();
                    ensureCAN727IsMutable();
                    cAN727_.add(v);
                    break;
                  } // case 26
                  case 34: {
                    com.google.protobuf.ByteString v = input.readBytes();
                    ensureCAN760IsMutable();
                    cAN760_.add(v);
                    break;
                  } // case 34
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int mobileEyeStatus_ ;
          /**
           * <pre>
           *[1] Статус MobileEye (битовая маска событий)
           * </pre>
           *
           * <code>optional uint32 MobileEyeStatus = 1;</code>
           * @return Whether the mobileEyeStatus field is set.
           */
          @java.lang.Override
          public boolean hasMobileEyeStatus() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           *[1] Статус MobileEye (битовая маска событий)
           * </pre>
           *
           * <code>optional uint32 MobileEyeStatus = 1;</code>
           * @return The mobileEyeStatus.
           */
          @java.lang.Override
          public int getMobileEyeStatus() {
            return mobileEyeStatus_;
          }
          /**
           * <pre>
           *[1] Статус MobileEye (битовая маска событий)
           * </pre>
           *
           * <code>optional uint32 MobileEyeStatus = 1;</code>
           * @param value The mobileEyeStatus to set.
           * @return This builder for chaining.
           */
          public Builder setMobileEyeStatus(int value) {

            mobileEyeStatus_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[1] Статус MobileEye (битовая маска событий)
           * </pre>
           *
           * <code>optional uint32 MobileEyeStatus = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearMobileEyeStatus() {
            bitField0_ = (bitField0_ & ~0x00000001);
            mobileEyeStatus_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> cAN700_ = emptyList(com.google.protobuf.ByteString.class);
          private void ensureCAN700IsMutable() {
            if (!cAN700_.isModifiable()) {
              cAN700_ = makeMutableCopy(cAN700_);
            }
            bitField0_ |= 0x00000002;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @return A list containing the cAN700.
           */
          public java.util.List<com.google.protobuf.ByteString>
              getCAN700List() {
            cAN700_.makeImmutable();
            return cAN700_;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @return The count of cAN700.
           */
          public int getCAN700Count() {
            return cAN700_.size();
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @param index The index of the element to return.
           * @return The cAN700 at the given index.
           */
          public com.google.protobuf.ByteString getCAN700(int index) {
            return cAN700_.get(index);
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @param index The index to set the value at.
           * @param value The cAN700 to set.
           * @return This builder for chaining.
           */
          public Builder setCAN700(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureCAN700IsMutable();
            cAN700_.set(index, value);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @param value The cAN700 to add.
           * @return This builder for chaining.
           */
          public Builder addCAN700(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureCAN700IsMutable();
            cAN700_.add(value);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @param values The cAN700 to add.
           * @return This builder for chaining.
           */
          public Builder addAllCAN700(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureCAN700IsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, cAN700_);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 700
           * </pre>
           *
           * <code>repeated bytes CAN700 = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearCAN700() {
            cAN700_ = emptyList(com.google.protobuf.ByteString.class);
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> cAN727_ = emptyList(com.google.protobuf.ByteString.class);
          private void ensureCAN727IsMutable() {
            if (!cAN727_.isModifiable()) {
              cAN727_ = makeMutableCopy(cAN727_);
            }
            bitField0_ |= 0x00000004;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @return A list containing the cAN727.
           */
          public java.util.List<com.google.protobuf.ByteString>
              getCAN727List() {
            cAN727_.makeImmutable();
            return cAN727_;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @return The count of cAN727.
           */
          public int getCAN727Count() {
            return cAN727_.size();
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @param index The index of the element to return.
           * @return The cAN727 at the given index.
           */
          public com.google.protobuf.ByteString getCAN727(int index) {
            return cAN727_.get(index);
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @param index The index to set the value at.
           * @param value The cAN727 to set.
           * @return This builder for chaining.
           */
          public Builder setCAN727(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureCAN727IsMutable();
            cAN727_.set(index, value);
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @param value The cAN727 to add.
           * @return This builder for chaining.
           */
          public Builder addCAN727(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureCAN727IsMutable();
            cAN727_.add(value);
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @param values The cAN727 to add.
           * @return This builder for chaining.
           */
          public Builder addAllCAN727(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureCAN727IsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, cAN727_);
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 727
           * </pre>
           *
           * <code>repeated bytes CAN727 = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearCAN727() {
            cAN727_ = emptyList(com.google.protobuf.ByteString.class);
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> cAN760_ = emptyList(com.google.protobuf.ByteString.class);
          private void ensureCAN760IsMutable() {
            if (!cAN760_.isModifiable()) {
              cAN760_ = makeMutableCopy(cAN760_);
            }
            bitField0_ |= 0x00000008;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @return A list containing the cAN760.
           */
          public java.util.List<com.google.protobuf.ByteString>
              getCAN760List() {
            cAN760_.makeImmutable();
            return cAN760_;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @return The count of cAN760.
           */
          public int getCAN760Count() {
            return cAN760_.size();
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @param index The index of the element to return.
           * @return The cAN760 at the given index.
           */
          public com.google.protobuf.ByteString getCAN760(int index) {
            return cAN760_.get(index);
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @param index The index to set the value at.
           * @param value The cAN760 to set.
           * @return This builder for chaining.
           */
          public Builder setCAN760(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureCAN760IsMutable();
            cAN760_.set(index, value);
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @param value The cAN760 to add.
           * @return This builder for chaining.
           */
          public Builder addCAN760(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureCAN760IsMutable();
            cAN760_.add(value);
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @param values The cAN760 to add.
           * @return This builder for chaining.
           */
          public Builder addAllCAN760(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureCAN760IsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, cAN760_);
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Данные с MobileEye адресс кэн 760
           * </pre>
           *
           * <code>repeated bytes CAN760 = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearCAN760() {
            cAN760_ = emptyList(com.google.protobuf.ByteString.class);
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.MobileEye)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<MobileEye>
            PARSER = new com.google.protobuf.AbstractParser<MobileEye>() {
          @java.lang.Override
          public MobileEye parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<MobileEye> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<MobileEye> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface SafeDrivingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
         * </pre>
         *
         * <code>optional uint32 EventMask = 1;</code>
         * @return Whether the eventMask field is set.
         */
        boolean hasEventMask();
        /**
         * <pre>
         *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
         * </pre>
         *
         * <code>optional uint32 EventMask = 1;</code>
         * @return The eventMask.
         */
        int getEventMask();

        /**
         * <pre>
         *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
         * </pre>
         *
         * <code>optional uint32 SpeedThreshold = 2;</code>
         * @return Whether the speedThreshold field is set.
         */
        boolean hasSpeedThreshold();
        /**
         * <pre>
         *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
         * </pre>
         *
         * <code>optional uint32 SpeedThreshold = 2;</code>
         * @return The speedThreshold.
         */
        int getSpeedThreshold();

        /**
         * <pre>
         *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
         * </pre>
         *
         * <code>optional uint32 RPMThreshold = 3;</code>
         * @return Whether the rPMThreshold field is set.
         */
        boolean hasRPMThreshold();
        /**
         * <pre>
         *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
         * </pre>
         *
         * <code>optional uint32 RPMThreshold = 3;</code>
         * @return The rPMThreshold.
         */
        int getRPMThreshold();

        /**
         * <pre>
         *[4]
         * </pre>
         *
         * <code>repeated float AccelDangThs = 4 [packed = true];</code>
         * @return A list containing the accelDangThs.
         */
        java.util.List<java.lang.Float> getAccelDangThsList();
        /**
         * <pre>
         *[4]
         * </pre>
         *
         * <code>repeated float AccelDangThs = 4 [packed = true];</code>
         * @return The count of accelDangThs.
         */
        int getAccelDangThsCount();
        /**
         * <pre>
         *[4]
         * </pre>
         *
         * <code>repeated float AccelDangThs = 4 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The accelDangThs at the given index.
         */
        float getAccelDangThs(int index);
      }
      /**
       * <pre>
       * Данные о безопасном вождении 
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving}
       */
      public static final class SafeDriving extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving)
          SafeDrivingOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use SafeDriving.newBuilder() to construct.
        private SafeDriving(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private SafeDriving() {
          accelDangThs_ = emptyFloatList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new SafeDriving();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder.class);
        }

        private int bitField0_;
        public static final int EVENTMASK_FIELD_NUMBER = 1;
        private int eventMask_ = 0;
        /**
         * <pre>
         *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
         * </pre>
         *
         * <code>optional uint32 EventMask = 1;</code>
         * @return Whether the eventMask field is set.
         */
        @java.lang.Override
        public boolean hasEventMask() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
         * </pre>
         *
         * <code>optional uint32 EventMask = 1;</code>
         * @return The eventMask.
         */
        @java.lang.Override
        public int getEventMask() {
          return eventMask_;
        }

        public static final int SPEEDTHRESHOLD_FIELD_NUMBER = 2;
        private int speedThreshold_ = 0;
        /**
         * <pre>
         *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
         * </pre>
         *
         * <code>optional uint32 SpeedThreshold = 2;</code>
         * @return Whether the speedThreshold field is set.
         */
        @java.lang.Override
        public boolean hasSpeedThreshold() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
         * </pre>
         *
         * <code>optional uint32 SpeedThreshold = 2;</code>
         * @return The speedThreshold.
         */
        @java.lang.Override
        public int getSpeedThreshold() {
          return speedThreshold_;
        }

        public static final int RPMTHRESHOLD_FIELD_NUMBER = 3;
        private int rPMThreshold_ = 0;
        /**
         * <pre>
         *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
         * </pre>
         *
         * <code>optional uint32 RPMThreshold = 3;</code>
         * @return Whether the rPMThreshold field is set.
         */
        @java.lang.Override
        public boolean hasRPMThreshold() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
         * </pre>
         *
         * <code>optional uint32 RPMThreshold = 3;</code>
         * @return The rPMThreshold.
         */
        @java.lang.Override
        public int getRPMThreshold() {
          return rPMThreshold_;
        }

        public static final int ACCELDANGTHS_FIELD_NUMBER = 4;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.FloatList accelDangThs_ =
            emptyFloatList();
        /**
         * <pre>
         *[4]
         * </pre>
         *
         * <code>repeated float AccelDangThs = 4 [packed = true];</code>
         * @return A list containing the accelDangThs.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getAccelDangThsList() {
          return accelDangThs_;
        }
        /**
         * <pre>
         *[4]
         * </pre>
         *
         * <code>repeated float AccelDangThs = 4 [packed = true];</code>
         * @return The count of accelDangThs.
         */
        public int getAccelDangThsCount() {
          return accelDangThs_.size();
        }
        /**
         * <pre>
         *[4]
         * </pre>
         *
         * <code>repeated float AccelDangThs = 4 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The accelDangThs at the given index.
         */
        public float getAccelDangThs(int index) {
          return accelDangThs_.getFloat(index);
        }
        private int accelDangThsMemoizedSerializedSize = -1;

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, eventMask_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeUInt32(2, speedThreshold_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt32(3, rPMThreshold_);
          }
          if (getAccelDangThsList().size() > 0) {
            output.writeUInt32NoTag(34);
            output.writeUInt32NoTag(accelDangThsMemoizedSerializedSize);
          }
          for (int i = 0; i < accelDangThs_.size(); i++) {
            output.writeFloatNoTag(accelDangThs_.getFloat(i));
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, eventMask_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, speedThreshold_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, rPMThreshold_);
          }
          {
            int dataSize = 0;
            dataSize = 4 * getAccelDangThsList().size();
            size += dataSize;
            if (!getAccelDangThsList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            accelDangThsMemoizedSerializedSize = dataSize;
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) obj;

          if (hasEventMask() != other.hasEventMask()) return false;
          if (hasEventMask()) {
            if (getEventMask()
                != other.getEventMask()) return false;
          }
          if (hasSpeedThreshold() != other.hasSpeedThreshold()) return false;
          if (hasSpeedThreshold()) {
            if (getSpeedThreshold()
                != other.getSpeedThreshold()) return false;
          }
          if (hasRPMThreshold() != other.hasRPMThreshold()) return false;
          if (hasRPMThreshold()) {
            if (getRPMThreshold()
                != other.getRPMThreshold()) return false;
          }
          if (!getAccelDangThsList()
              .equals(other.getAccelDangThsList())) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasEventMask()) {
            hash = (37 * hash) + EVENTMASK_FIELD_NUMBER;
            hash = (53 * hash) + getEventMask();
          }
          if (hasSpeedThreshold()) {
            hash = (37 * hash) + SPEEDTHRESHOLD_FIELD_NUMBER;
            hash = (53 * hash) + getSpeedThreshold();
          }
          if (hasRPMThreshold()) {
            hash = (37 * hash) + RPMTHRESHOLD_FIELD_NUMBER;
            hash = (53 * hash) + getRPMThreshold();
          }
          if (getAccelDangThsCount() > 0) {
            hash = (37 * hash) + ACCELDANGTHS_FIELD_NUMBER;
            hash = (53 * hash) + getAccelDangThsList().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Данные о безопасном вождении 
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            eventMask_ = 0;
            speedThreshold_ = 0;
            rPMThreshold_ = 0;
            accelDangThs_ = emptyFloatList();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.eventMask_ = eventMask_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.speedThreshold_ = speedThreshold_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.rPMThreshold_ = rPMThreshold_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              accelDangThs_.makeImmutable();
              result.accelDangThs_ = accelDangThs_;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance()) return this;
            if (other.hasEventMask()) {
              setEventMask(other.getEventMask());
            }
            if (other.hasSpeedThreshold()) {
              setSpeedThreshold(other.getSpeedThreshold());
            }
            if (other.hasRPMThreshold()) {
              setRPMThreshold(other.getRPMThreshold());
            }
            if (!other.accelDangThs_.isEmpty()) {
              if (accelDangThs_.isEmpty()) {
                accelDangThs_ = other.accelDangThs_;
                accelDangThs_.makeImmutable();
                bitField0_ |= 0x00000008;
              } else {
                ensureAccelDangThsIsMutable();
                accelDangThs_.addAll(other.accelDangThs_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    eventMask_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    speedThreshold_ = input.readUInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 24: {
                    rPMThreshold_ = input.readUInt32();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  case 37: {
                    float v = input.readFloat();
                    ensureAccelDangThsIsMutable();
                    accelDangThs_.addFloat(v);
                    break;
                  } // case 37
                  case 34: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    int alloc = length > 4096 ? 4096 : length;
                    ensureAccelDangThsIsMutable(alloc / 4);
                    while (input.getBytesUntilLimit() > 0) {
                      accelDangThs_.addFloat(input.readFloat());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 34
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int eventMask_ ;
          /**
           * <pre>
           *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
           * </pre>
           *
           * <code>optional uint32 EventMask = 1;</code>
           * @return Whether the eventMask field is set.
           */
          @java.lang.Override
          public boolean hasEventMask() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
           * </pre>
           *
           * <code>optional uint32 EventMask = 1;</code>
           * @return The eventMask.
           */
          @java.lang.Override
          public int getEventMask() {
            return eventMask_;
          }
          /**
           * <pre>
           *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
           * </pre>
           *
           * <code>optional uint32 EventMask = 1;</code>
           * @param value The eventMask to set.
           * @return This builder for chaining.
           */
          public Builder setEventMask(int value) {

            eventMask_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[4] Инициатор посылки события (Битовая маска) 0 – Скорость, 1 – Обороты, 2 – Ускорение, 3 – Боковое ускорение, 4 - Ускорение торможения, 5 - Вертикальное ускорение
           * </pre>
           *
           * <code>optional uint32 EventMask = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearEventMask() {
            bitField0_ = (bitField0_ & ~0x00000001);
            eventMask_ = 0;
            onChanged();
            return this;
          }

          private int speedThreshold_ ;
          /**
           * <pre>
           *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
           * </pre>
           *
           * <code>optional uint32 SpeedThreshold = 2;</code>
           * @return Whether the speedThreshold field is set.
           */
          @java.lang.Override
          public boolean hasSpeedThreshold() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
           * </pre>
           *
           * <code>optional uint32 SpeedThreshold = 2;</code>
           * @return The speedThreshold.
           */
          @java.lang.Override
          public int getSpeedThreshold() {
            return speedThreshold_;
          }
          /**
           * <pre>
           *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
           * </pre>
           *
           * <code>optional uint32 SpeedThreshold = 2;</code>
           * @param value The speedThreshold to set.
           * @return This builder for chaining.
           */
          public Builder setSpeedThreshold(int value) {

            speedThreshold_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[4] Порог Скорости, поле присутствует если EventMask/Бит 0 = 1
           * </pre>
           *
           * <code>optional uint32 SpeedThreshold = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearSpeedThreshold() {
            bitField0_ = (bitField0_ & ~0x00000002);
            speedThreshold_ = 0;
            onChanged();
            return this;
          }

          private int rPMThreshold_ ;
          /**
           * <pre>
           *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
           * </pre>
           *
           * <code>optional uint32 RPMThreshold = 3;</code>
           * @return Whether the rPMThreshold field is set.
           */
          @java.lang.Override
          public boolean hasRPMThreshold() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
           * </pre>
           *
           * <code>optional uint32 RPMThreshold = 3;</code>
           * @return The rPMThreshold.
           */
          @java.lang.Override
          public int getRPMThreshold() {
            return rPMThreshold_;
          }
          /**
           * <pre>
           *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
           * </pre>
           *
           * <code>optional uint32 RPMThreshold = 3;</code>
           * @param value The rPMThreshold to set.
           * @return This builder for chaining.
           */
          public Builder setRPMThreshold(int value) {

            rPMThreshold_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[4] Порог Оборотов, поле присутствует если EventMask/Бит 1 = 1
           * </pre>
           *
           * <code>optional uint32 RPMThreshold = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearRPMThreshold() {
            bitField0_ = (bitField0_ & ~0x00000004);
            rPMThreshold_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList accelDangThs_ = emptyFloatList();
          private void ensureAccelDangThsIsMutable() {
            if (!accelDangThs_.isModifiable()) {
              accelDangThs_ = makeMutableCopy(accelDangThs_);
            }
            bitField0_ |= 0x00000008;
          }
          private void ensureAccelDangThsIsMutable(int capacity) {
            if (!accelDangThs_.isModifiable()) {
              accelDangThs_ = makeMutableCopy(accelDangThs_, capacity);
            }
            bitField0_ |= 0x00000008;
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @return A list containing the accelDangThs.
           */
          public java.util.List<java.lang.Float>
              getAccelDangThsList() {
            accelDangThs_.makeImmutable();
            return accelDangThs_;
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @return The count of accelDangThs.
           */
          public int getAccelDangThsCount() {
            return accelDangThs_.size();
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @param index The index of the element to return.
           * @return The accelDangThs at the given index.
           */
          public float getAccelDangThs(int index) {
            return accelDangThs_.getFloat(index);
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @param index The index to set the value at.
           * @param value The accelDangThs to set.
           * @return This builder for chaining.
           */
          public Builder setAccelDangThs(
              int index, float value) {

            ensureAccelDangThsIsMutable();
            accelDangThs_.setFloat(index, value);
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @param value The accelDangThs to add.
           * @return This builder for chaining.
           */
          public Builder addAccelDangThs(float value) {

            ensureAccelDangThsIsMutable();
            accelDangThs_.addFloat(value);
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @param values The accelDangThs to add.
           * @return This builder for chaining.
           */
          public Builder addAllAccelDangThs(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureAccelDangThsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, accelDangThs_);
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[4]
           * </pre>
           *
           * <code>repeated float AccelDangThs = 4 [packed = true];</code>
           * @return This builder for chaining.
           */
          public Builder clearAccelDangThs() {
            accelDangThs_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.SafeDriving)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<SafeDriving>
            PARSER = new com.google.protobuf.AbstractParser<SafeDriving>() {
          @java.lang.Override
          public SafeDriving parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<SafeDriving> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<SafeDriving> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface GenCommOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
         * @return Whether the gENOILPRESS1 field is set.
         */
        boolean hasGENOILPRESS1();
        /**
         * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
         * @return The gENOILPRESS1.
         */
        int getGENOILPRESS1();

        /**
         * <code>optional sint32 GEN_TEMP1 = 2;</code>
         * @return Whether the gENTEMP1 field is set.
         */
        boolean hasGENTEMP1();
        /**
         * <code>optional sint32 GEN_TEMP1 = 2;</code>
         * @return The gENTEMP1.
         */
        int getGENTEMP1();

        /**
         * <code>optional float GEN_VOLT1 = 3;</code>
         * @return Whether the gENVOLT1 field is set.
         */
        boolean hasGENVOLT1();
        /**
         * <code>optional float GEN_VOLT1 = 3;</code>
         * @return The gENVOLT1.
         */
        float getGENVOLT1();

        /**
         * <code>optional uint32 GEN_RPM1 = 4;</code>
         * @return Whether the gENRPM1 field is set.
         */
        boolean hasGENRPM1();
        /**
         * <code>optional uint32 GEN_RPM1 = 4;</code>
         * @return The gENRPM1.
         */
        int getGENRPM1();

        /**
         * <code>optional float GEN_UL1_1 = 5;</code>
         * @return Whether the gENUL11 field is set.
         */
        boolean hasGENUL11();
        /**
         * <code>optional float GEN_UL1_1 = 5;</code>
         * @return The gENUL11.
         */
        float getGENUL11();

        /**
         * <code>optional float GEN_UL2_1 = 6;</code>
         * @return Whether the gENUL21 field is set.
         */
        boolean hasGENUL21();
        /**
         * <code>optional float GEN_UL2_1 = 6;</code>
         * @return The gENUL21.
         */
        float getGENUL21();

        /**
         * <code>optional float GEN_UL3_1 = 7;</code>
         * @return Whether the gENUL31 field is set.
         */
        boolean hasGENUL31();
        /**
         * <code>optional float GEN_UL3_1 = 7;</code>
         * @return The gENUL31.
         */
        float getGENUL31();

        /**
         * <code>optional float GEN_IL1_1 = 8;</code>
         * @return Whether the gENIL11 field is set.
         */
        boolean hasGENIL11();
        /**
         * <code>optional float GEN_IL1_1 = 8;</code>
         * @return The gENIL11.
         */
        float getGENIL11();

        /**
         * <code>optional float GEN_IL2_1 = 9;</code>
         * @return Whether the gENIL21 field is set.
         */
        boolean hasGENIL21();
        /**
         * <code>optional float GEN_IL2_1 = 9;</code>
         * @return The gENIL21.
         */
        float getGENIL21();

        /**
         * <code>optional float GEN_IL3_1 = 10;</code>
         * @return Whether the gENIL31 field is set.
         */
        boolean hasGENIL31();
        /**
         * <code>optional float GEN_IL3_1 = 10;</code>
         * @return The gENIL31.
         */
        float getGENIL31();

        /**
         * <code>optional uint32 GEN_STATUS1 = 11;</code>
         * @return Whether the gENSTATUS1 field is set.
         */
        boolean hasGENSTATUS1();
        /**
         * <code>optional uint32 GEN_STATUS1 = 11;</code>
         * @return The gENSTATUS1.
         */
        int getGENSTATUS1();

        /**
         * <code>optional uint32 GEN_HOURS1 = 12;</code>
         * @return Whether the gENHOURS1 field is set.
         */
        boolean hasGENHOURS1();
        /**
         * <code>optional uint32 GEN_HOURS1 = 12;</code>
         * @return The gENHOURS1.
         */
        int getGENHOURS1();

        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM1 = 13;</code>
         * @return A list containing the gENALARM1.
         */
        java.util.List<com.google.protobuf.ByteString> getGENALARM1List();
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM1 = 13;</code>
         * @return The count of gENALARM1.
         */
        int getGENALARM1Count();
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM1 = 13;</code>
         * @param index The index of the element to return.
         * @return The gENALARM1 at the given index.
         */
        com.google.protobuf.ByteString getGENALARM1(int index);

        /**
         * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
         * @return Whether the gENOILPRESS2 field is set.
         */
        boolean hasGENOILPRESS2();
        /**
         * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
         * @return The gENOILPRESS2.
         */
        int getGENOILPRESS2();

        /**
         * <code>optional sint32 GEN_TEMP2 = 15;</code>
         * @return Whether the gENTEMP2 field is set.
         */
        boolean hasGENTEMP2();
        /**
         * <code>optional sint32 GEN_TEMP2 = 15;</code>
         * @return The gENTEMP2.
         */
        int getGENTEMP2();

        /**
         * <code>optional float GEN_VOLT2 = 16;</code>
         * @return Whether the gENVOLT2 field is set.
         */
        boolean hasGENVOLT2();
        /**
         * <code>optional float GEN_VOLT2 = 16;</code>
         * @return The gENVOLT2.
         */
        float getGENVOLT2();

        /**
         * <code>optional uint32 GEN_RPM2 = 17;</code>
         * @return Whether the gENRPM2 field is set.
         */
        boolean hasGENRPM2();
        /**
         * <code>optional uint32 GEN_RPM2 = 17;</code>
         * @return The gENRPM2.
         */
        int getGENRPM2();

        /**
         * <code>optional float GEN_UL1_2 = 18;</code>
         * @return Whether the gENUL12 field is set.
         */
        boolean hasGENUL12();
        /**
         * <code>optional float GEN_UL1_2 = 18;</code>
         * @return The gENUL12.
         */
        float getGENUL12();

        /**
         * <code>optional float GEN_UL2_2 = 19;</code>
         * @return Whether the gENUL22 field is set.
         */
        boolean hasGENUL22();
        /**
         * <code>optional float GEN_UL2_2 = 19;</code>
         * @return The gENUL22.
         */
        float getGENUL22();

        /**
         * <code>optional float GEN_UL3_2 = 20;</code>
         * @return Whether the gENUL32 field is set.
         */
        boolean hasGENUL32();
        /**
         * <code>optional float GEN_UL3_2 = 20;</code>
         * @return The gENUL32.
         */
        float getGENUL32();

        /**
         * <code>optional float GEN_IL1_2 = 21;</code>
         * @return Whether the gENIL12 field is set.
         */
        boolean hasGENIL12();
        /**
         * <code>optional float GEN_IL1_2 = 21;</code>
         * @return The gENIL12.
         */
        float getGENIL12();

        /**
         * <code>optional float GEN_IL2_2 = 22;</code>
         * @return Whether the gENIL22 field is set.
         */
        boolean hasGENIL22();
        /**
         * <code>optional float GEN_IL2_2 = 22;</code>
         * @return The gENIL22.
         */
        float getGENIL22();

        /**
         * <code>optional float GEN_IL3_2 = 23;</code>
         * @return Whether the gENIL32 field is set.
         */
        boolean hasGENIL32();
        /**
         * <code>optional float GEN_IL3_2 = 23;</code>
         * @return The gENIL32.
         */
        float getGENIL32();

        /**
         * <code>optional uint32 GEN_STATUS2 = 24;</code>
         * @return Whether the gENSTATUS2 field is set.
         */
        boolean hasGENSTATUS2();
        /**
         * <code>optional uint32 GEN_STATUS2 = 24;</code>
         * @return The gENSTATUS2.
         */
        int getGENSTATUS2();

        /**
         * <code>optional uint32 GEN_HOURS2 = 25;</code>
         * @return Whether the gENHOURS2 field is set.
         */
        boolean hasGENHOURS2();
        /**
         * <code>optional uint32 GEN_HOURS2 = 25;</code>
         * @return The gENHOURS2.
         */
        int getGENHOURS2();

        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM2 = 26;</code>
         * @return A list containing the gENALARM2.
         */
        java.util.List<com.google.protobuf.ByteString> getGENALARM2List();
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM2 = 26;</code>
         * @return The count of gENALARM2.
         */
        int getGENALARM2Count();
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM2 = 26;</code>
         * @param index The index of the element to return.
         * @return The gENALARM2 at the given index.
         */
        com.google.protobuf.ByteString getGENALARM2(int index);

        /**
         * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
         * @return Whether the gENOILPRESS3 field is set.
         */
        boolean hasGENOILPRESS3();
        /**
         * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
         * @return The gENOILPRESS3.
         */
        int getGENOILPRESS3();

        /**
         * <code>optional sint32 GEN_TEMP3 = 28;</code>
         * @return Whether the gENTEMP3 field is set.
         */
        boolean hasGENTEMP3();
        /**
         * <code>optional sint32 GEN_TEMP3 = 28;</code>
         * @return The gENTEMP3.
         */
        int getGENTEMP3();

        /**
         * <code>optional float GEN_VOLT3 = 29;</code>
         * @return Whether the gENVOLT3 field is set.
         */
        boolean hasGENVOLT3();
        /**
         * <code>optional float GEN_VOLT3 = 29;</code>
         * @return The gENVOLT3.
         */
        float getGENVOLT3();

        /**
         * <code>optional uint32 GEN_RPM3 = 30;</code>
         * @return Whether the gENRPM3 field is set.
         */
        boolean hasGENRPM3();
        /**
         * <code>optional uint32 GEN_RPM3 = 30;</code>
         * @return The gENRPM3.
         */
        int getGENRPM3();

        /**
         * <code>optional float GEN_UL1_3 = 31;</code>
         * @return Whether the gENUL13 field is set.
         */
        boolean hasGENUL13();
        /**
         * <code>optional float GEN_UL1_3 = 31;</code>
         * @return The gENUL13.
         */
        float getGENUL13();

        /**
         * <code>optional float GEN_UL2_3 = 32;</code>
         * @return Whether the gENUL23 field is set.
         */
        boolean hasGENUL23();
        /**
         * <code>optional float GEN_UL2_3 = 32;</code>
         * @return The gENUL23.
         */
        float getGENUL23();

        /**
         * <code>optional float GEN_UL3_3 = 33;</code>
         * @return Whether the gENUL33 field is set.
         */
        boolean hasGENUL33();
        /**
         * <code>optional float GEN_UL3_3 = 33;</code>
         * @return The gENUL33.
         */
        float getGENUL33();

        /**
         * <code>optional float GEN_IL1_3 = 34;</code>
         * @return Whether the gENIL13 field is set.
         */
        boolean hasGENIL13();
        /**
         * <code>optional float GEN_IL1_3 = 34;</code>
         * @return The gENIL13.
         */
        float getGENIL13();

        /**
         * <code>optional float GEN_IL2_3 = 35;</code>
         * @return Whether the gENIL23 field is set.
         */
        boolean hasGENIL23();
        /**
         * <code>optional float GEN_IL2_3 = 35;</code>
         * @return The gENIL23.
         */
        float getGENIL23();

        /**
         * <code>optional float GEN_IL3_3 = 36;</code>
         * @return Whether the gENIL33 field is set.
         */
        boolean hasGENIL33();
        /**
         * <code>optional float GEN_IL3_3 = 36;</code>
         * @return The gENIL33.
         */
        float getGENIL33();

        /**
         * <code>optional uint32 GEN_STATUS3 = 37;</code>
         * @return Whether the gENSTATUS3 field is set.
         */
        boolean hasGENSTATUS3();
        /**
         * <code>optional uint32 GEN_STATUS3 = 37;</code>
         * @return The gENSTATUS3.
         */
        int getGENSTATUS3();

        /**
         * <code>optional uint32 GEN_HOURS3 = 38;</code>
         * @return Whether the gENHOURS3 field is set.
         */
        boolean hasGENHOURS3();
        /**
         * <code>optional uint32 GEN_HOURS3 = 38;</code>
         * @return The gENHOURS3.
         */
        int getGENHOURS3();

        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM3 = 39;</code>
         * @return A list containing the gENALARM3.
         */
        java.util.List<com.google.protobuf.ByteString> getGENALARM3List();
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM3 = 39;</code>
         * @return The count of gENALARM3.
         */
        int getGENALARM3Count();
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM3 = 39;</code>
         * @param index The index of the element to return.
         * @return The gENALARM3 at the given index.
         */
        com.google.protobuf.ByteString getGENALARM3(int index);

        /**
         * <pre>
         * величина напряжения зарядного генератора 
         * </pre>
         *
         * <code>optional float GEN_UC = 40;</code>
         * @return Whether the gENUC field is set.
         */
        boolean hasGENUC();
        /**
         * <pre>
         * величина напряжения зарядного генератора 
         * </pre>
         *
         * <code>optional float GEN_UC = 40;</code>
         * @return The gENUC.
         */
        float getGENUC();

        /**
         * <pre>
         * ток заряда стартерных АКБ 
         * </pre>
         *
         * <code>optional uint32 GEN_IC = 41;</code>
         * @return Whether the gENIC field is set.
         */
        boolean hasGENIC();
        /**
         * <pre>
         * ток заряда стартерных АКБ 
         * </pre>
         *
         * <code>optional uint32 GEN_IC = 41;</code>
         * @return The gENIC.
         */
        int getGENIC();

        /**
         * <pre>
         * частота выдаваемого напряжения 
         * </pre>
         *
         * <code>optional float GEN_FREQ = 42;</code>
         * @return Whether the gENFREQ field is set.
         */
        boolean hasGENFREQ();
        /**
         * <pre>
         * частота выдаваемого напряжения 
         * </pre>
         *
         * <code>optional float GEN_FREQ = 42;</code>
         * @return The gENFREQ.
         */
        float getGENFREQ();

        /**
         * <pre>
         * напряжения линейные 
         * </pre>
         *
         * <code>optional float GEN_UL1L2 = 43;</code>
         * @return Whether the gENUL1L2 field is set.
         */
        boolean hasGENUL1L2();
        /**
         * <pre>
         * напряжения линейные 
         * </pre>
         *
         * <code>optional float GEN_UL1L2 = 43;</code>
         * @return The gENUL1L2.
         */
        float getGENUL1L2();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL2L3 = 44;</code>
         * @return Whether the gENUL2L3 field is set.
         */
        boolean hasGENUL2L3();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL2L3 = 44;</code>
         * @return The gENUL2L3.
         */
        float getGENUL2L3();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL1L3 = 45;</code>
         * @return Whether the gENUL1L3 field is set.
         */
        boolean hasGENUL1L3();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL1L3 = 45;</code>
         * @return The gENUL1L3.
         */
        float getGENUL1L3();

        /**
         * <pre>
         * активная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L1 = 46;</code>
         * @return Whether the pOWACTL1 field is set.
         */
        boolean hasPOWACTL1();
        /**
         * <pre>
         * активная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L1 = 46;</code>
         * @return The pOWACTL1.
         */
        int getPOWACTL1();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L2 = 47;</code>
         * @return Whether the pOWACTL2 field is set.
         */
        boolean hasPOWACTL2();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L2 = 47;</code>
         * @return The pOWACTL2.
         */
        int getPOWACTL2();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L3 = 48;</code>
         * @return Whether the pOWACTL3 field is set.
         */
        boolean hasPOWACTL3();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L3 = 48;</code>
         * @return The pOWACTL3.
         */
        int getPOWACTL3();

        /**
         * <pre>
         * полная мощность
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L1 = 49;</code>
         * @return Whether the pOWFULLL1 field is set.
         */
        boolean hasPOWFULLL1();
        /**
         * <pre>
         * полная мощность
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L1 = 49;</code>
         * @return The pOWFULLL1.
         */
        int getPOWFULLL1();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L2 = 50;</code>
         * @return Whether the pOWFULLL2 field is set.
         */
        boolean hasPOWFULLL2();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L2 = 50;</code>
         * @return The pOWFULLL2.
         */
        int getPOWFULLL2();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L3 = 51;</code>
         * @return Whether the pOWFULLL3 field is set.
         */
        boolean hasPOWFULLL3();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L3 = 51;</code>
         * @return The pOWFULLL3.
         */
        int getPOWFULLL3();

        /**
         * <pre>
         * реактивная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L1 = 52;</code>
         * @return Whether the pOWREACTL1 field is set.
         */
        boolean hasPOWREACTL1();
        /**
         * <pre>
         * реактивная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L1 = 52;</code>
         * @return The pOWREACTL1.
         */
        int getPOWREACTL1();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L2 = 53;</code>
         * @return Whether the pOWREACTL2 field is set.
         */
        boolean hasPOWREACTL2();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L2 = 53;</code>
         * @return The pOWREACTL2.
         */
        int getPOWREACTL2();

        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L3 = 54;</code>
         * @return Whether the pOWREACTL3 field is set.
         */
        boolean hasPOWREACTL3();
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L3 = 54;</code>
         * @return The pOWREACTL3.
         */
        int getPOWREACTL3();

        /**
         * <pre>
         * коэффициент мощности
         * </pre>
         *
         * <code>optional float POW_KOEF = 55;</code>
         * @return Whether the pOWKOEF field is set.
         */
        boolean hasPOWKOEF();
        /**
         * <pre>
         * коэффициент мощности
         * </pre>
         *
         * <code>optional float POW_KOEF = 55;</code>
         * @return The pOWKOEF.
         */
        float getPOWKOEF();

        /**
         * <pre>
         * общая выработка электроэнергии 
         * </pre>
         *
         * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
         * @return Whether the pOWGENTOTAL field is set.
         */
        boolean hasPOWGENTOTAL();
        /**
         * <pre>
         * общая выработка электроэнергии 
         * </pre>
         *
         * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
         * @return The pOWGENTOTAL.
         */
        int getPOWGENTOTAL();

        /**
         * <pre>
         * текущий объём топлива
         * </pre>
         *
         * <code>optional uint32 FUEL_LEVEL = 57;</code>
         * @return Whether the fUELLEVEL field is set.
         */
        boolean hasFUELLEVEL();
        /**
         * <pre>
         * текущий объём топлива
         * </pre>
         *
         * <code>optional uint32 FUEL_LEVEL = 57;</code>
         * @return The fUELLEVEL.
         */
        int getFUELLEVEL();

        /**
         * <pre>
         * состояние регистра состояния 0 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_0 = 60;</code>
         * @return Whether the sMSREGS0 field is set.
         */
        boolean hasSMSREGS0();
        /**
         * <pre>
         * состояние регистра состояния 0 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_0 = 60;</code>
         * @return The sMSREGS0.
         */
        int getSMSREGS0();

        /**
         * <pre>
         * состояние регистра состояния 1 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_1 = 61;</code>
         * @return Whether the sMSREGS1 field is set.
         */
        boolean hasSMSREGS1();
        /**
         * <pre>
         * состояние регистра состояния 1 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_1 = 61;</code>
         * @return The sMSREGS1.
         */
        int getSMSREGS1();

        /**
         * <pre>
         * состояние регистра состояния 2 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_2 = 62;</code>
         * @return Whether the sMSREGS2 field is set.
         */
        boolean hasSMSREGS2();
        /**
         * <pre>
         * состояние регистра состояния 2 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_2 = 62;</code>
         * @return The sMSREGS2.
         */
        int getSMSREGS2();

        /**
         * <pre>
         * состояние регистра состояния 3 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_3 = 63;</code>
         * @return Whether the sMSREGS3 field is set.
         */
        boolean hasSMSREGS3();
        /**
         * <pre>
         * состояние регистра состояния 3 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_3 = 63;</code>
         * @return The sMSREGS3.
         */
        int getSMSREGS3();

        /**
         * <pre>
         * состояние регистра состояния 4 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_4 = 64;</code>
         * @return Whether the sMSREGS4 field is set.
         */
        boolean hasSMSREGS4();
        /**
         * <pre>
         * состояние регистра состояния 4 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_4 = 64;</code>
         * @return The sMSREGS4.
         */
        int getSMSREGS4();
      }
      /**
       * <pre>
       * Данные о GenComm генераторе
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm}
       */
      public static final class GenComm extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm)
          GenCommOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use GenComm.newBuilder() to construct.
        private GenComm(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private GenComm() {
          gENALARM1_ = emptyList(com.google.protobuf.ByteString.class);
          gENALARM2_ = emptyList(com.google.protobuf.ByteString.class);
          gENALARM3_ = emptyList(com.google.protobuf.ByteString.class);
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new GenComm();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        public static final int GEN_OILPRESS1_FIELD_NUMBER = 1;
        private int gENOILPRESS1_ = 0;
        /**
         * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
         * @return Whether the gENOILPRESS1 field is set.
         */
        @java.lang.Override
        public boolean hasGENOILPRESS1() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
         * @return The gENOILPRESS1.
         */
        @java.lang.Override
        public int getGENOILPRESS1() {
          return gENOILPRESS1_;
        }

        public static final int GEN_TEMP1_FIELD_NUMBER = 2;
        private int gENTEMP1_ = 0;
        /**
         * <code>optional sint32 GEN_TEMP1 = 2;</code>
         * @return Whether the gENTEMP1 field is set.
         */
        @java.lang.Override
        public boolean hasGENTEMP1() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional sint32 GEN_TEMP1 = 2;</code>
         * @return The gENTEMP1.
         */
        @java.lang.Override
        public int getGENTEMP1() {
          return gENTEMP1_;
        }

        public static final int GEN_VOLT1_FIELD_NUMBER = 3;
        private float gENVOLT1_ = 0F;
        /**
         * <code>optional float GEN_VOLT1 = 3;</code>
         * @return Whether the gENVOLT1 field is set.
         */
        @java.lang.Override
        public boolean hasGENVOLT1() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional float GEN_VOLT1 = 3;</code>
         * @return The gENVOLT1.
         */
        @java.lang.Override
        public float getGENVOLT1() {
          return gENVOLT1_;
        }

        public static final int GEN_RPM1_FIELD_NUMBER = 4;
        private int gENRPM1_ = 0;
        /**
         * <code>optional uint32 GEN_RPM1 = 4;</code>
         * @return Whether the gENRPM1 field is set.
         */
        @java.lang.Override
        public boolean hasGENRPM1() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 GEN_RPM1 = 4;</code>
         * @return The gENRPM1.
         */
        @java.lang.Override
        public int getGENRPM1() {
          return gENRPM1_;
        }

        public static final int GEN_UL1_1_FIELD_NUMBER = 5;
        private float gENUL11_ = 0F;
        /**
         * <code>optional float GEN_UL1_1 = 5;</code>
         * @return Whether the gENUL11 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL11() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional float GEN_UL1_1 = 5;</code>
         * @return The gENUL11.
         */
        @java.lang.Override
        public float getGENUL11() {
          return gENUL11_;
        }

        public static final int GEN_UL2_1_FIELD_NUMBER = 6;
        private float gENUL21_ = 0F;
        /**
         * <code>optional float GEN_UL2_1 = 6;</code>
         * @return Whether the gENUL21 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL21() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional float GEN_UL2_1 = 6;</code>
         * @return The gENUL21.
         */
        @java.lang.Override
        public float getGENUL21() {
          return gENUL21_;
        }

        public static final int GEN_UL3_1_FIELD_NUMBER = 7;
        private float gENUL31_ = 0F;
        /**
         * <code>optional float GEN_UL3_1 = 7;</code>
         * @return Whether the gENUL31 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL31() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional float GEN_UL3_1 = 7;</code>
         * @return The gENUL31.
         */
        @java.lang.Override
        public float getGENUL31() {
          return gENUL31_;
        }

        public static final int GEN_IL1_1_FIELD_NUMBER = 8;
        private float gENIL11_ = 0F;
        /**
         * <code>optional float GEN_IL1_1 = 8;</code>
         * @return Whether the gENIL11 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL11() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional float GEN_IL1_1 = 8;</code>
         * @return The gENIL11.
         */
        @java.lang.Override
        public float getGENIL11() {
          return gENIL11_;
        }

        public static final int GEN_IL2_1_FIELD_NUMBER = 9;
        private float gENIL21_ = 0F;
        /**
         * <code>optional float GEN_IL2_1 = 9;</code>
         * @return Whether the gENIL21 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL21() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional float GEN_IL2_1 = 9;</code>
         * @return The gENIL21.
         */
        @java.lang.Override
        public float getGENIL21() {
          return gENIL21_;
        }

        public static final int GEN_IL3_1_FIELD_NUMBER = 10;
        private float gENIL31_ = 0F;
        /**
         * <code>optional float GEN_IL3_1 = 10;</code>
         * @return Whether the gENIL31 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL31() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional float GEN_IL3_1 = 10;</code>
         * @return The gENIL31.
         */
        @java.lang.Override
        public float getGENIL31() {
          return gENIL31_;
        }

        public static final int GEN_STATUS1_FIELD_NUMBER = 11;
        private int gENSTATUS1_ = 0;
        /**
         * <code>optional uint32 GEN_STATUS1 = 11;</code>
         * @return Whether the gENSTATUS1 field is set.
         */
        @java.lang.Override
        public boolean hasGENSTATUS1() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional uint32 GEN_STATUS1 = 11;</code>
         * @return The gENSTATUS1.
         */
        @java.lang.Override
        public int getGENSTATUS1() {
          return gENSTATUS1_;
        }

        public static final int GEN_HOURS1_FIELD_NUMBER = 12;
        private int gENHOURS1_ = 0;
        /**
         * <code>optional uint32 GEN_HOURS1 = 12;</code>
         * @return Whether the gENHOURS1 field is set.
         */
        @java.lang.Override
        public boolean hasGENHOURS1() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional uint32 GEN_HOURS1 = 12;</code>
         * @return The gENHOURS1.
         */
        @java.lang.Override
        public int getGENHOURS1() {
          return gENHOURS1_;
        }

        public static final int GEN_ALARM1_FIELD_NUMBER = 13;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> gENALARM1_ =
            emptyList(com.google.protobuf.ByteString.class);
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM1 = 13;</code>
         * @return A list containing the gENALARM1.
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.ByteString>
            getGENALARM1List() {
          return gENALARM1_;
        }
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM1 = 13;</code>
         * @return The count of gENALARM1.
         */
        public int getGENALARM1Count() {
          return gENALARM1_.size();
        }
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM1 = 13;</code>
         * @param index The index of the element to return.
         * @return The gENALARM1 at the given index.
         */
        public com.google.protobuf.ByteString getGENALARM1(int index) {
          return gENALARM1_.get(index);
        }

        public static final int GEN_OILPRESS2_FIELD_NUMBER = 14;
        private int gENOILPRESS2_ = 0;
        /**
         * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
         * @return Whether the gENOILPRESS2 field is set.
         */
        @java.lang.Override
        public boolean hasGENOILPRESS2() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
         * @return The gENOILPRESS2.
         */
        @java.lang.Override
        public int getGENOILPRESS2() {
          return gENOILPRESS2_;
        }

        public static final int GEN_TEMP2_FIELD_NUMBER = 15;
        private int gENTEMP2_ = 0;
        /**
         * <code>optional sint32 GEN_TEMP2 = 15;</code>
         * @return Whether the gENTEMP2 field is set.
         */
        @java.lang.Override
        public boolean hasGENTEMP2() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <code>optional sint32 GEN_TEMP2 = 15;</code>
         * @return The gENTEMP2.
         */
        @java.lang.Override
        public int getGENTEMP2() {
          return gENTEMP2_;
        }

        public static final int GEN_VOLT2_FIELD_NUMBER = 16;
        private float gENVOLT2_ = 0F;
        /**
         * <code>optional float GEN_VOLT2 = 16;</code>
         * @return Whether the gENVOLT2 field is set.
         */
        @java.lang.Override
        public boolean hasGENVOLT2() {
          return ((bitField0_ & 0x00004000) != 0);
        }
        /**
         * <code>optional float GEN_VOLT2 = 16;</code>
         * @return The gENVOLT2.
         */
        @java.lang.Override
        public float getGENVOLT2() {
          return gENVOLT2_;
        }

        public static final int GEN_RPM2_FIELD_NUMBER = 17;
        private int gENRPM2_ = 0;
        /**
         * <code>optional uint32 GEN_RPM2 = 17;</code>
         * @return Whether the gENRPM2 field is set.
         */
        @java.lang.Override
        public boolean hasGENRPM2() {
          return ((bitField0_ & 0x00008000) != 0);
        }
        /**
         * <code>optional uint32 GEN_RPM2 = 17;</code>
         * @return The gENRPM2.
         */
        @java.lang.Override
        public int getGENRPM2() {
          return gENRPM2_;
        }

        public static final int GEN_UL1_2_FIELD_NUMBER = 18;
        private float gENUL12_ = 0F;
        /**
         * <code>optional float GEN_UL1_2 = 18;</code>
         * @return Whether the gENUL12 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL12() {
          return ((bitField0_ & 0x00010000) != 0);
        }
        /**
         * <code>optional float GEN_UL1_2 = 18;</code>
         * @return The gENUL12.
         */
        @java.lang.Override
        public float getGENUL12() {
          return gENUL12_;
        }

        public static final int GEN_UL2_2_FIELD_NUMBER = 19;
        private float gENUL22_ = 0F;
        /**
         * <code>optional float GEN_UL2_2 = 19;</code>
         * @return Whether the gENUL22 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL22() {
          return ((bitField0_ & 0x00020000) != 0);
        }
        /**
         * <code>optional float GEN_UL2_2 = 19;</code>
         * @return The gENUL22.
         */
        @java.lang.Override
        public float getGENUL22() {
          return gENUL22_;
        }

        public static final int GEN_UL3_2_FIELD_NUMBER = 20;
        private float gENUL32_ = 0F;
        /**
         * <code>optional float GEN_UL3_2 = 20;</code>
         * @return Whether the gENUL32 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL32() {
          return ((bitField0_ & 0x00040000) != 0);
        }
        /**
         * <code>optional float GEN_UL3_2 = 20;</code>
         * @return The gENUL32.
         */
        @java.lang.Override
        public float getGENUL32() {
          return gENUL32_;
        }

        public static final int GEN_IL1_2_FIELD_NUMBER = 21;
        private float gENIL12_ = 0F;
        /**
         * <code>optional float GEN_IL1_2 = 21;</code>
         * @return Whether the gENIL12 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL12() {
          return ((bitField0_ & 0x00080000) != 0);
        }
        /**
         * <code>optional float GEN_IL1_2 = 21;</code>
         * @return The gENIL12.
         */
        @java.lang.Override
        public float getGENIL12() {
          return gENIL12_;
        }

        public static final int GEN_IL2_2_FIELD_NUMBER = 22;
        private float gENIL22_ = 0F;
        /**
         * <code>optional float GEN_IL2_2 = 22;</code>
         * @return Whether the gENIL22 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL22() {
          return ((bitField0_ & 0x00100000) != 0);
        }
        /**
         * <code>optional float GEN_IL2_2 = 22;</code>
         * @return The gENIL22.
         */
        @java.lang.Override
        public float getGENIL22() {
          return gENIL22_;
        }

        public static final int GEN_IL3_2_FIELD_NUMBER = 23;
        private float gENIL32_ = 0F;
        /**
         * <code>optional float GEN_IL3_2 = 23;</code>
         * @return Whether the gENIL32 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL32() {
          return ((bitField0_ & 0x00200000) != 0);
        }
        /**
         * <code>optional float GEN_IL3_2 = 23;</code>
         * @return The gENIL32.
         */
        @java.lang.Override
        public float getGENIL32() {
          return gENIL32_;
        }

        public static final int GEN_STATUS2_FIELD_NUMBER = 24;
        private int gENSTATUS2_ = 0;
        /**
         * <code>optional uint32 GEN_STATUS2 = 24;</code>
         * @return Whether the gENSTATUS2 field is set.
         */
        @java.lang.Override
        public boolean hasGENSTATUS2() {
          return ((bitField0_ & 0x00400000) != 0);
        }
        /**
         * <code>optional uint32 GEN_STATUS2 = 24;</code>
         * @return The gENSTATUS2.
         */
        @java.lang.Override
        public int getGENSTATUS2() {
          return gENSTATUS2_;
        }

        public static final int GEN_HOURS2_FIELD_NUMBER = 25;
        private int gENHOURS2_ = 0;
        /**
         * <code>optional uint32 GEN_HOURS2 = 25;</code>
         * @return Whether the gENHOURS2 field is set.
         */
        @java.lang.Override
        public boolean hasGENHOURS2() {
          return ((bitField0_ & 0x00800000) != 0);
        }
        /**
         * <code>optional uint32 GEN_HOURS2 = 25;</code>
         * @return The gENHOURS2.
         */
        @java.lang.Override
        public int getGENHOURS2() {
          return gENHOURS2_;
        }

        public static final int GEN_ALARM2_FIELD_NUMBER = 26;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> gENALARM2_ =
            emptyList(com.google.protobuf.ByteString.class);
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM2 = 26;</code>
         * @return A list containing the gENALARM2.
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.ByteString>
            getGENALARM2List() {
          return gENALARM2_;
        }
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM2 = 26;</code>
         * @return The count of gENALARM2.
         */
        public int getGENALARM2Count() {
          return gENALARM2_.size();
        }
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM2 = 26;</code>
         * @param index The index of the element to return.
         * @return The gENALARM2 at the given index.
         */
        public com.google.protobuf.ByteString getGENALARM2(int index) {
          return gENALARM2_.get(index);
        }

        public static final int GEN_OILPRESS3_FIELD_NUMBER = 27;
        private int gENOILPRESS3_ = 0;
        /**
         * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
         * @return Whether the gENOILPRESS3 field is set.
         */
        @java.lang.Override
        public boolean hasGENOILPRESS3() {
          return ((bitField0_ & 0x01000000) != 0);
        }
        /**
         * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
         * @return The gENOILPRESS3.
         */
        @java.lang.Override
        public int getGENOILPRESS3() {
          return gENOILPRESS3_;
        }

        public static final int GEN_TEMP3_FIELD_NUMBER = 28;
        private int gENTEMP3_ = 0;
        /**
         * <code>optional sint32 GEN_TEMP3 = 28;</code>
         * @return Whether the gENTEMP3 field is set.
         */
        @java.lang.Override
        public boolean hasGENTEMP3() {
          return ((bitField0_ & 0x02000000) != 0);
        }
        /**
         * <code>optional sint32 GEN_TEMP3 = 28;</code>
         * @return The gENTEMP3.
         */
        @java.lang.Override
        public int getGENTEMP3() {
          return gENTEMP3_;
        }

        public static final int GEN_VOLT3_FIELD_NUMBER = 29;
        private float gENVOLT3_ = 0F;
        /**
         * <code>optional float GEN_VOLT3 = 29;</code>
         * @return Whether the gENVOLT3 field is set.
         */
        @java.lang.Override
        public boolean hasGENVOLT3() {
          return ((bitField0_ & 0x04000000) != 0);
        }
        /**
         * <code>optional float GEN_VOLT3 = 29;</code>
         * @return The gENVOLT3.
         */
        @java.lang.Override
        public float getGENVOLT3() {
          return gENVOLT3_;
        }

        public static final int GEN_RPM3_FIELD_NUMBER = 30;
        private int gENRPM3_ = 0;
        /**
         * <code>optional uint32 GEN_RPM3 = 30;</code>
         * @return Whether the gENRPM3 field is set.
         */
        @java.lang.Override
        public boolean hasGENRPM3() {
          return ((bitField0_ & 0x08000000) != 0);
        }
        /**
         * <code>optional uint32 GEN_RPM3 = 30;</code>
         * @return The gENRPM3.
         */
        @java.lang.Override
        public int getGENRPM3() {
          return gENRPM3_;
        }

        public static final int GEN_UL1_3_FIELD_NUMBER = 31;
        private float gENUL13_ = 0F;
        /**
         * <code>optional float GEN_UL1_3 = 31;</code>
         * @return Whether the gENUL13 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL13() {
          return ((bitField0_ & 0x10000000) != 0);
        }
        /**
         * <code>optional float GEN_UL1_3 = 31;</code>
         * @return The gENUL13.
         */
        @java.lang.Override
        public float getGENUL13() {
          return gENUL13_;
        }

        public static final int GEN_UL2_3_FIELD_NUMBER = 32;
        private float gENUL23_ = 0F;
        /**
         * <code>optional float GEN_UL2_3 = 32;</code>
         * @return Whether the gENUL23 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL23() {
          return ((bitField0_ & 0x20000000) != 0);
        }
        /**
         * <code>optional float GEN_UL2_3 = 32;</code>
         * @return The gENUL23.
         */
        @java.lang.Override
        public float getGENUL23() {
          return gENUL23_;
        }

        public static final int GEN_UL3_3_FIELD_NUMBER = 33;
        private float gENUL33_ = 0F;
        /**
         * <code>optional float GEN_UL3_3 = 33;</code>
         * @return Whether the gENUL33 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL33() {
          return ((bitField0_ & 0x40000000) != 0);
        }
        /**
         * <code>optional float GEN_UL3_3 = 33;</code>
         * @return The gENUL33.
         */
        @java.lang.Override
        public float getGENUL33() {
          return gENUL33_;
        }

        public static final int GEN_IL1_3_FIELD_NUMBER = 34;
        private float gENIL13_ = 0F;
        /**
         * <code>optional float GEN_IL1_3 = 34;</code>
         * @return Whether the gENIL13 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL13() {
          return ((bitField0_ & 0x80000000) != 0);
        }
        /**
         * <code>optional float GEN_IL1_3 = 34;</code>
         * @return The gENIL13.
         */
        @java.lang.Override
        public float getGENIL13() {
          return gENIL13_;
        }

        public static final int GEN_IL2_3_FIELD_NUMBER = 35;
        private float gENIL23_ = 0F;
        /**
         * <code>optional float GEN_IL2_3 = 35;</code>
         * @return Whether the gENIL23 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL23() {
          return ((bitField1_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float GEN_IL2_3 = 35;</code>
         * @return The gENIL23.
         */
        @java.lang.Override
        public float getGENIL23() {
          return gENIL23_;
        }

        public static final int GEN_IL3_3_FIELD_NUMBER = 36;
        private float gENIL33_ = 0F;
        /**
         * <code>optional float GEN_IL3_3 = 36;</code>
         * @return Whether the gENIL33 field is set.
         */
        @java.lang.Override
        public boolean hasGENIL33() {
          return ((bitField1_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float GEN_IL3_3 = 36;</code>
         * @return The gENIL33.
         */
        @java.lang.Override
        public float getGENIL33() {
          return gENIL33_;
        }

        public static final int GEN_STATUS3_FIELD_NUMBER = 37;
        private int gENSTATUS3_ = 0;
        /**
         * <code>optional uint32 GEN_STATUS3 = 37;</code>
         * @return Whether the gENSTATUS3 field is set.
         */
        @java.lang.Override
        public boolean hasGENSTATUS3() {
          return ((bitField1_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 GEN_STATUS3 = 37;</code>
         * @return The gENSTATUS3.
         */
        @java.lang.Override
        public int getGENSTATUS3() {
          return gENSTATUS3_;
        }

        public static final int GEN_HOURS3_FIELD_NUMBER = 38;
        private int gENHOURS3_ = 0;
        /**
         * <code>optional uint32 GEN_HOURS3 = 38;</code>
         * @return Whether the gENHOURS3 field is set.
         */
        @java.lang.Override
        public boolean hasGENHOURS3() {
          return ((bitField1_ & 0x00000008) != 0);
        }
        /**
         * <code>optional uint32 GEN_HOURS3 = 38;</code>
         * @return The gENHOURS3.
         */
        @java.lang.Override
        public int getGENHOURS3() {
          return gENHOURS3_;
        }

        public static final int GEN_ALARM3_FIELD_NUMBER = 39;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> gENALARM3_ =
            emptyList(com.google.protobuf.ByteString.class);
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM3 = 39;</code>
         * @return A list containing the gENALARM3.
         */
        @java.lang.Override
        public java.util.List<com.google.protobuf.ByteString>
            getGENALARM3List() {
          return gENALARM3_;
        }
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM3 = 39;</code>
         * @return The count of gENALARM3.
         */
        public int getGENALARM3Count() {
          return gENALARM3_.size();
        }
        /**
         * <pre>
         *[28]
         * </pre>
         *
         * <code>repeated bytes GEN_ALARM3 = 39;</code>
         * @param index The index of the element to return.
         * @return The gENALARM3 at the given index.
         */
        public com.google.protobuf.ByteString getGENALARM3(int index) {
          return gENALARM3_.get(index);
        }

        public static final int GEN_UC_FIELD_NUMBER = 40;
        private float gENUC_ = 0F;
        /**
         * <pre>
         * величина напряжения зарядного генератора 
         * </pre>
         *
         * <code>optional float GEN_UC = 40;</code>
         * @return Whether the gENUC field is set.
         */
        @java.lang.Override
        public boolean hasGENUC() {
          return ((bitField1_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * величина напряжения зарядного генератора 
         * </pre>
         *
         * <code>optional float GEN_UC = 40;</code>
         * @return The gENUC.
         */
        @java.lang.Override
        public float getGENUC() {
          return gENUC_;
        }

        public static final int GEN_IC_FIELD_NUMBER = 41;
        private int gENIC_ = 0;
        /**
         * <pre>
         * ток заряда стартерных АКБ 
         * </pre>
         *
         * <code>optional uint32 GEN_IC = 41;</code>
         * @return Whether the gENIC field is set.
         */
        @java.lang.Override
        public boolean hasGENIC() {
          return ((bitField1_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * ток заряда стартерных АКБ 
         * </pre>
         *
         * <code>optional uint32 GEN_IC = 41;</code>
         * @return The gENIC.
         */
        @java.lang.Override
        public int getGENIC() {
          return gENIC_;
        }

        public static final int GEN_FREQ_FIELD_NUMBER = 42;
        private float gENFREQ_ = 0F;
        /**
         * <pre>
         * частота выдаваемого напряжения 
         * </pre>
         *
         * <code>optional float GEN_FREQ = 42;</code>
         * @return Whether the gENFREQ field is set.
         */
        @java.lang.Override
        public boolean hasGENFREQ() {
          return ((bitField1_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * частота выдаваемого напряжения 
         * </pre>
         *
         * <code>optional float GEN_FREQ = 42;</code>
         * @return The gENFREQ.
         */
        @java.lang.Override
        public float getGENFREQ() {
          return gENFREQ_;
        }

        public static final int GEN_UL1L2_FIELD_NUMBER = 43;
        private float gENUL1L2_ = 0F;
        /**
         * <pre>
         * напряжения линейные 
         * </pre>
         *
         * <code>optional float GEN_UL1L2 = 43;</code>
         * @return Whether the gENUL1L2 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL1L2() {
          return ((bitField1_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * напряжения линейные 
         * </pre>
         *
         * <code>optional float GEN_UL1L2 = 43;</code>
         * @return The gENUL1L2.
         */
        @java.lang.Override
        public float getGENUL1L2() {
          return gENUL1L2_;
        }

        public static final int GEN_UL2L3_FIELD_NUMBER = 44;
        private float gENUL2L3_ = 0F;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL2L3 = 44;</code>
         * @return Whether the gENUL2L3 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL2L3() {
          return ((bitField1_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL2L3 = 44;</code>
         * @return The gENUL2L3.
         */
        @java.lang.Override
        public float getGENUL2L3() {
          return gENUL2L3_;
        }

        public static final int GEN_UL1L3_FIELD_NUMBER = 45;
        private float gENUL1L3_ = 0F;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL1L3 = 45;</code>
         * @return Whether the gENUL1L3 field is set.
         */
        @java.lang.Override
        public boolean hasGENUL1L3() {
          return ((bitField1_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional float GEN_UL1L3 = 45;</code>
         * @return The gENUL1L3.
         */
        @java.lang.Override
        public float getGENUL1L3() {
          return gENUL1L3_;
        }

        public static final int POW_ACT_L1_FIELD_NUMBER = 46;
        private int pOWACTL1_ = 0;
        /**
         * <pre>
         * активная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L1 = 46;</code>
         * @return Whether the pOWACTL1 field is set.
         */
        @java.lang.Override
        public boolean hasPOWACTL1() {
          return ((bitField1_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * активная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L1 = 46;</code>
         * @return The pOWACTL1.
         */
        @java.lang.Override
        public int getPOWACTL1() {
          return pOWACTL1_;
        }

        public static final int POW_ACT_L2_FIELD_NUMBER = 47;
        private int pOWACTL2_ = 0;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L2 = 47;</code>
         * @return Whether the pOWACTL2 field is set.
         */
        @java.lang.Override
        public boolean hasPOWACTL2() {
          return ((bitField1_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L2 = 47;</code>
         * @return The pOWACTL2.
         */
        @java.lang.Override
        public int getPOWACTL2() {
          return pOWACTL2_;
        }

        public static final int POW_ACT_L3_FIELD_NUMBER = 48;
        private int pOWACTL3_ = 0;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L3 = 48;</code>
         * @return Whether the pOWACTL3 field is set.
         */
        @java.lang.Override
        public boolean hasPOWACTL3() {
          return ((bitField1_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_ACT_L3 = 48;</code>
         * @return The pOWACTL3.
         */
        @java.lang.Override
        public int getPOWACTL3() {
          return pOWACTL3_;
        }

        public static final int POW_FULL_L1_FIELD_NUMBER = 49;
        private int pOWFULLL1_ = 0;
        /**
         * <pre>
         * полная мощность
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L1 = 49;</code>
         * @return Whether the pOWFULLL1 field is set.
         */
        @java.lang.Override
        public boolean hasPOWFULLL1() {
          return ((bitField1_ & 0x00002000) != 0);
        }
        /**
         * <pre>
         * полная мощность
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L1 = 49;</code>
         * @return The pOWFULLL1.
         */
        @java.lang.Override
        public int getPOWFULLL1() {
          return pOWFULLL1_;
        }

        public static final int POW_FULL_L2_FIELD_NUMBER = 50;
        private int pOWFULLL2_ = 0;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L2 = 50;</code>
         * @return Whether the pOWFULLL2 field is set.
         */
        @java.lang.Override
        public boolean hasPOWFULLL2() {
          return ((bitField1_ & 0x00004000) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L2 = 50;</code>
         * @return The pOWFULLL2.
         */
        @java.lang.Override
        public int getPOWFULLL2() {
          return pOWFULLL2_;
        }

        public static final int POW_FULL_L3_FIELD_NUMBER = 51;
        private int pOWFULLL3_ = 0;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L3 = 51;</code>
         * @return Whether the pOWFULLL3 field is set.
         */
        @java.lang.Override
        public boolean hasPOWFULLL3() {
          return ((bitField1_ & 0x00008000) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_FULL_L3 = 51;</code>
         * @return The pOWFULLL3.
         */
        @java.lang.Override
        public int getPOWFULLL3() {
          return pOWFULLL3_;
        }

        public static final int POW_REACT_L1_FIELD_NUMBER = 52;
        private int pOWREACTL1_ = 0;
        /**
         * <pre>
         * реактивная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L1 = 52;</code>
         * @return Whether the pOWREACTL1 field is set.
         */
        @java.lang.Override
        public boolean hasPOWREACTL1() {
          return ((bitField1_ & 0x00010000) != 0);
        }
        /**
         * <pre>
         * реактивная мощность 
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L1 = 52;</code>
         * @return The pOWREACTL1.
         */
        @java.lang.Override
        public int getPOWREACTL1() {
          return pOWREACTL1_;
        }

        public static final int POW_REACT_L2_FIELD_NUMBER = 53;
        private int pOWREACTL2_ = 0;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L2 = 53;</code>
         * @return Whether the pOWREACTL2 field is set.
         */
        @java.lang.Override
        public boolean hasPOWREACTL2() {
          return ((bitField1_ & 0x00020000) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L2 = 53;</code>
         * @return The pOWREACTL2.
         */
        @java.lang.Override
        public int getPOWREACTL2() {
          return pOWREACTL2_;
        }

        public static final int POW_REACT_L3_FIELD_NUMBER = 54;
        private int pOWREACTL3_ = 0;
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L3 = 54;</code>
         * @return Whether the pOWREACTL3 field is set.
         */
        @java.lang.Override
        public boolean hasPOWREACTL3() {
          return ((bitField1_ & 0x00040000) != 0);
        }
        /**
         * <pre>
         * --
         * </pre>
         *
         * <code>optional uint32 POW_REACT_L3 = 54;</code>
         * @return The pOWREACTL3.
         */
        @java.lang.Override
        public int getPOWREACTL3() {
          return pOWREACTL3_;
        }

        public static final int POW_KOEF_FIELD_NUMBER = 55;
        private float pOWKOEF_ = 0F;
        /**
         * <pre>
         * коэффициент мощности
         * </pre>
         *
         * <code>optional float POW_KOEF = 55;</code>
         * @return Whether the pOWKOEF field is set.
         */
        @java.lang.Override
        public boolean hasPOWKOEF() {
          return ((bitField1_ & 0x00080000) != 0);
        }
        /**
         * <pre>
         * коэффициент мощности
         * </pre>
         *
         * <code>optional float POW_KOEF = 55;</code>
         * @return The pOWKOEF.
         */
        @java.lang.Override
        public float getPOWKOEF() {
          return pOWKOEF_;
        }

        public static final int POW_GEN_TOTAL_FIELD_NUMBER = 56;
        private int pOWGENTOTAL_ = 0;
        /**
         * <pre>
         * общая выработка электроэнергии 
         * </pre>
         *
         * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
         * @return Whether the pOWGENTOTAL field is set.
         */
        @java.lang.Override
        public boolean hasPOWGENTOTAL() {
          return ((bitField1_ & 0x00100000) != 0);
        }
        /**
         * <pre>
         * общая выработка электроэнергии 
         * </pre>
         *
         * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
         * @return The pOWGENTOTAL.
         */
        @java.lang.Override
        public int getPOWGENTOTAL() {
          return pOWGENTOTAL_;
        }

        public static final int FUEL_LEVEL_FIELD_NUMBER = 57;
        private int fUELLEVEL_ = 0;
        /**
         * <pre>
         * текущий объём топлива
         * </pre>
         *
         * <code>optional uint32 FUEL_LEVEL = 57;</code>
         * @return Whether the fUELLEVEL field is set.
         */
        @java.lang.Override
        public boolean hasFUELLEVEL() {
          return ((bitField1_ & 0x00200000) != 0);
        }
        /**
         * <pre>
         * текущий объём топлива
         * </pre>
         *
         * <code>optional uint32 FUEL_LEVEL = 57;</code>
         * @return The fUELLEVEL.
         */
        @java.lang.Override
        public int getFUELLEVEL() {
          return fUELLEVEL_;
        }

        public static final int SMS_REGS_0_FIELD_NUMBER = 60;
        private int sMSREGS0_ = 0;
        /**
         * <pre>
         * состояние регистра состояния 0 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_0 = 60;</code>
         * @return Whether the sMSREGS0 field is set.
         */
        @java.lang.Override
        public boolean hasSMSREGS0() {
          return ((bitField1_ & 0x00400000) != 0);
        }
        /**
         * <pre>
         * состояние регистра состояния 0 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_0 = 60;</code>
         * @return The sMSREGS0.
         */
        @java.lang.Override
        public int getSMSREGS0() {
          return sMSREGS0_;
        }

        public static final int SMS_REGS_1_FIELD_NUMBER = 61;
        private int sMSREGS1_ = 0;
        /**
         * <pre>
         * состояние регистра состояния 1 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_1 = 61;</code>
         * @return Whether the sMSREGS1 field is set.
         */
        @java.lang.Override
        public boolean hasSMSREGS1() {
          return ((bitField1_ & 0x00800000) != 0);
        }
        /**
         * <pre>
         * состояние регистра состояния 1 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_1 = 61;</code>
         * @return The sMSREGS1.
         */
        @java.lang.Override
        public int getSMSREGS1() {
          return sMSREGS1_;
        }

        public static final int SMS_REGS_2_FIELD_NUMBER = 62;
        private int sMSREGS2_ = 0;
        /**
         * <pre>
         * состояние регистра состояния 2 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_2 = 62;</code>
         * @return Whether the sMSREGS2 field is set.
         */
        @java.lang.Override
        public boolean hasSMSREGS2() {
          return ((bitField1_ & 0x01000000) != 0);
        }
        /**
         * <pre>
         * состояние регистра состояния 2 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_2 = 62;</code>
         * @return The sMSREGS2.
         */
        @java.lang.Override
        public int getSMSREGS2() {
          return sMSREGS2_;
        }

        public static final int SMS_REGS_3_FIELD_NUMBER = 63;
        private int sMSREGS3_ = 0;
        /**
         * <pre>
         * состояние регистра состояния 3 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_3 = 63;</code>
         * @return Whether the sMSREGS3 field is set.
         */
        @java.lang.Override
        public boolean hasSMSREGS3() {
          return ((bitField1_ & 0x02000000) != 0);
        }
        /**
         * <pre>
         * состояние регистра состояния 3 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_3 = 63;</code>
         * @return The sMSREGS3.
         */
        @java.lang.Override
        public int getSMSREGS3() {
          return sMSREGS3_;
        }

        public static final int SMS_REGS_4_FIELD_NUMBER = 64;
        private int sMSREGS4_ = 0;
        /**
         * <pre>
         * состояние регистра состояния 4 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_4 = 64;</code>
         * @return Whether the sMSREGS4 field is set.
         */
        @java.lang.Override
        public boolean hasSMSREGS4() {
          return ((bitField1_ & 0x04000000) != 0);
        }
        /**
         * <pre>
         * состояние регистра состояния 4 для SMS-оповещений (для отладки)
         * </pre>
         *
         * <code>optional uint32 SMS_REGS_4 = 64;</code>
         * @return The sMSREGS4.
         */
        @java.lang.Override
        public int getSMSREGS4() {
          return sMSREGS4_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt32(1, gENOILPRESS1_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeSInt32(2, gENTEMP1_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeFloat(3, gENVOLT1_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeUInt32(4, gENRPM1_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeFloat(5, gENUL11_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeFloat(6, gENUL21_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeFloat(7, gENUL31_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeFloat(8, gENIL11_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeFloat(9, gENIL21_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeFloat(10, gENIL31_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            output.writeUInt32(11, gENSTATUS1_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            output.writeUInt32(12, gENHOURS1_);
          }
          for (int i = 0; i < gENALARM1_.size(); i++) {
            output.writeBytes(13, gENALARM1_.get(i));
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            output.writeUInt32(14, gENOILPRESS2_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            output.writeSInt32(15, gENTEMP2_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            output.writeFloat(16, gENVOLT2_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            output.writeUInt32(17, gENRPM2_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            output.writeFloat(18, gENUL12_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            output.writeFloat(19, gENUL22_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            output.writeFloat(20, gENUL32_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            output.writeFloat(21, gENIL12_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            output.writeFloat(22, gENIL22_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            output.writeFloat(23, gENIL32_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            output.writeUInt32(24, gENSTATUS2_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            output.writeUInt32(25, gENHOURS2_);
          }
          for (int i = 0; i < gENALARM2_.size(); i++) {
            output.writeBytes(26, gENALARM2_.get(i));
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            output.writeUInt32(27, gENOILPRESS3_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            output.writeSInt32(28, gENTEMP3_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            output.writeFloat(29, gENVOLT3_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            output.writeUInt32(30, gENRPM3_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            output.writeFloat(31, gENUL13_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            output.writeFloat(32, gENUL23_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            output.writeFloat(33, gENUL33_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            output.writeFloat(34, gENIL13_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            output.writeFloat(35, gENIL23_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            output.writeFloat(36, gENIL33_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            output.writeUInt32(37, gENSTATUS3_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            output.writeUInt32(38, gENHOURS3_);
          }
          for (int i = 0; i < gENALARM3_.size(); i++) {
            output.writeBytes(39, gENALARM3_.get(i));
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            output.writeFloat(40, gENUC_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            output.writeUInt32(41, gENIC_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            output.writeFloat(42, gENFREQ_);
          }
          if (((bitField1_ & 0x00000080) != 0)) {
            output.writeFloat(43, gENUL1L2_);
          }
          if (((bitField1_ & 0x00000100) != 0)) {
            output.writeFloat(44, gENUL2L3_);
          }
          if (((bitField1_ & 0x00000200) != 0)) {
            output.writeFloat(45, gENUL1L3_);
          }
          if (((bitField1_ & 0x00000400) != 0)) {
            output.writeUInt32(46, pOWACTL1_);
          }
          if (((bitField1_ & 0x00000800) != 0)) {
            output.writeUInt32(47, pOWACTL2_);
          }
          if (((bitField1_ & 0x00001000) != 0)) {
            output.writeUInt32(48, pOWACTL3_);
          }
          if (((bitField1_ & 0x00002000) != 0)) {
            output.writeUInt32(49, pOWFULLL1_);
          }
          if (((bitField1_ & 0x00004000) != 0)) {
            output.writeUInt32(50, pOWFULLL2_);
          }
          if (((bitField1_ & 0x00008000) != 0)) {
            output.writeUInt32(51, pOWFULLL3_);
          }
          if (((bitField1_ & 0x00010000) != 0)) {
            output.writeUInt32(52, pOWREACTL1_);
          }
          if (((bitField1_ & 0x00020000) != 0)) {
            output.writeUInt32(53, pOWREACTL2_);
          }
          if (((bitField1_ & 0x00040000) != 0)) {
            output.writeUInt32(54, pOWREACTL3_);
          }
          if (((bitField1_ & 0x00080000) != 0)) {
            output.writeFloat(55, pOWKOEF_);
          }
          if (((bitField1_ & 0x00100000) != 0)) {
            output.writeUInt32(56, pOWGENTOTAL_);
          }
          if (((bitField1_ & 0x00200000) != 0)) {
            output.writeUInt32(57, fUELLEVEL_);
          }
          if (((bitField1_ & 0x00400000) != 0)) {
            output.writeUInt32(60, sMSREGS0_);
          }
          if (((bitField1_ & 0x00800000) != 0)) {
            output.writeUInt32(61, sMSREGS1_);
          }
          if (((bitField1_ & 0x01000000) != 0)) {
            output.writeUInt32(62, sMSREGS2_);
          }
          if (((bitField1_ & 0x02000000) != 0)) {
            output.writeUInt32(63, sMSREGS3_);
          }
          if (((bitField1_ & 0x04000000) != 0)) {
            output.writeUInt32(64, sMSREGS4_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, gENOILPRESS1_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(2, gENTEMP1_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, gENVOLT1_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, gENRPM1_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, gENUL11_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(6, gENUL21_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(7, gENUL31_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(8, gENIL11_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(9, gENIL21_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(10, gENIL31_);
          }
          if (((bitField0_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(11, gENSTATUS1_);
          }
          if (((bitField0_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(12, gENHOURS1_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < gENALARM1_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(gENALARM1_.get(i));
            }
            size += dataSize;
            size += 1 * getGENALARM1List().size();
          }
          if (((bitField0_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(14, gENOILPRESS2_);
          }
          if (((bitField0_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(15, gENTEMP2_);
          }
          if (((bitField0_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(16, gENVOLT2_);
          }
          if (((bitField0_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(17, gENRPM2_);
          }
          if (((bitField0_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(18, gENUL12_);
          }
          if (((bitField0_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(19, gENUL22_);
          }
          if (((bitField0_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(20, gENUL32_);
          }
          if (((bitField0_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(21, gENIL12_);
          }
          if (((bitField0_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(22, gENIL22_);
          }
          if (((bitField0_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(23, gENIL32_);
          }
          if (((bitField0_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(24, gENSTATUS2_);
          }
          if (((bitField0_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(25, gENHOURS2_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < gENALARM2_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(gENALARM2_.get(i));
            }
            size += dataSize;
            size += 2 * getGENALARM2List().size();
          }
          if (((bitField0_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(27, gENOILPRESS3_);
          }
          if (((bitField0_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(28, gENTEMP3_);
          }
          if (((bitField0_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(29, gENVOLT3_);
          }
          if (((bitField0_ & 0x08000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(30, gENRPM3_);
          }
          if (((bitField0_ & 0x10000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(31, gENUL13_);
          }
          if (((bitField0_ & 0x20000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(32, gENUL23_);
          }
          if (((bitField0_ & 0x40000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(33, gENUL33_);
          }
          if (((bitField0_ & 0x80000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(34, gENIL13_);
          }
          if (((bitField1_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(35, gENIL23_);
          }
          if (((bitField1_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(36, gENIL33_);
          }
          if (((bitField1_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(37, gENSTATUS3_);
          }
          if (((bitField1_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(38, gENHOURS3_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < gENALARM3_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeBytesSizeNoTag(gENALARM3_.get(i));
            }
            size += dataSize;
            size += 2 * getGENALARM3List().size();
          }
          if (((bitField1_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(40, gENUC_);
          }
          if (((bitField1_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(41, gENIC_);
          }
          if (((bitField1_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(42, gENFREQ_);
          }
          if (((bitField1_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(43, gENUL1L2_);
          }
          if (((bitField1_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(44, gENUL2L3_);
          }
          if (((bitField1_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(45, gENUL1L3_);
          }
          if (((bitField1_ & 0x00000400) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(46, pOWACTL1_);
          }
          if (((bitField1_ & 0x00000800) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(47, pOWACTL2_);
          }
          if (((bitField1_ & 0x00001000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(48, pOWACTL3_);
          }
          if (((bitField1_ & 0x00002000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(49, pOWFULLL1_);
          }
          if (((bitField1_ & 0x00004000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(50, pOWFULLL2_);
          }
          if (((bitField1_ & 0x00008000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(51, pOWFULLL3_);
          }
          if (((bitField1_ & 0x00010000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(52, pOWREACTL1_);
          }
          if (((bitField1_ & 0x00020000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(53, pOWREACTL2_);
          }
          if (((bitField1_ & 0x00040000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(54, pOWREACTL3_);
          }
          if (((bitField1_ & 0x00080000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(55, pOWKOEF_);
          }
          if (((bitField1_ & 0x00100000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(56, pOWGENTOTAL_);
          }
          if (((bitField1_ & 0x00200000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(57, fUELLEVEL_);
          }
          if (((bitField1_ & 0x00400000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(60, sMSREGS0_);
          }
          if (((bitField1_ & 0x00800000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(61, sMSREGS1_);
          }
          if (((bitField1_ & 0x01000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(62, sMSREGS2_);
          }
          if (((bitField1_ & 0x02000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(63, sMSREGS3_);
          }
          if (((bitField1_ & 0x04000000) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(64, sMSREGS4_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) obj;

          if (hasGENOILPRESS1() != other.hasGENOILPRESS1()) return false;
          if (hasGENOILPRESS1()) {
            if (getGENOILPRESS1()
                != other.getGENOILPRESS1()) return false;
          }
          if (hasGENTEMP1() != other.hasGENTEMP1()) return false;
          if (hasGENTEMP1()) {
            if (getGENTEMP1()
                != other.getGENTEMP1()) return false;
          }
          if (hasGENVOLT1() != other.hasGENVOLT1()) return false;
          if (hasGENVOLT1()) {
            if (java.lang.Float.floatToIntBits(getGENVOLT1())
                != java.lang.Float.floatToIntBits(
                    other.getGENVOLT1())) return false;
          }
          if (hasGENRPM1() != other.hasGENRPM1()) return false;
          if (hasGENRPM1()) {
            if (getGENRPM1()
                != other.getGENRPM1()) return false;
          }
          if (hasGENUL11() != other.hasGENUL11()) return false;
          if (hasGENUL11()) {
            if (java.lang.Float.floatToIntBits(getGENUL11())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL11())) return false;
          }
          if (hasGENUL21() != other.hasGENUL21()) return false;
          if (hasGENUL21()) {
            if (java.lang.Float.floatToIntBits(getGENUL21())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL21())) return false;
          }
          if (hasGENUL31() != other.hasGENUL31()) return false;
          if (hasGENUL31()) {
            if (java.lang.Float.floatToIntBits(getGENUL31())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL31())) return false;
          }
          if (hasGENIL11() != other.hasGENIL11()) return false;
          if (hasGENIL11()) {
            if (java.lang.Float.floatToIntBits(getGENIL11())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL11())) return false;
          }
          if (hasGENIL21() != other.hasGENIL21()) return false;
          if (hasGENIL21()) {
            if (java.lang.Float.floatToIntBits(getGENIL21())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL21())) return false;
          }
          if (hasGENIL31() != other.hasGENIL31()) return false;
          if (hasGENIL31()) {
            if (java.lang.Float.floatToIntBits(getGENIL31())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL31())) return false;
          }
          if (hasGENSTATUS1() != other.hasGENSTATUS1()) return false;
          if (hasGENSTATUS1()) {
            if (getGENSTATUS1()
                != other.getGENSTATUS1()) return false;
          }
          if (hasGENHOURS1() != other.hasGENHOURS1()) return false;
          if (hasGENHOURS1()) {
            if (getGENHOURS1()
                != other.getGENHOURS1()) return false;
          }
          if (!getGENALARM1List()
              .equals(other.getGENALARM1List())) return false;
          if (hasGENOILPRESS2() != other.hasGENOILPRESS2()) return false;
          if (hasGENOILPRESS2()) {
            if (getGENOILPRESS2()
                != other.getGENOILPRESS2()) return false;
          }
          if (hasGENTEMP2() != other.hasGENTEMP2()) return false;
          if (hasGENTEMP2()) {
            if (getGENTEMP2()
                != other.getGENTEMP2()) return false;
          }
          if (hasGENVOLT2() != other.hasGENVOLT2()) return false;
          if (hasGENVOLT2()) {
            if (java.lang.Float.floatToIntBits(getGENVOLT2())
                != java.lang.Float.floatToIntBits(
                    other.getGENVOLT2())) return false;
          }
          if (hasGENRPM2() != other.hasGENRPM2()) return false;
          if (hasGENRPM2()) {
            if (getGENRPM2()
                != other.getGENRPM2()) return false;
          }
          if (hasGENUL12() != other.hasGENUL12()) return false;
          if (hasGENUL12()) {
            if (java.lang.Float.floatToIntBits(getGENUL12())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL12())) return false;
          }
          if (hasGENUL22() != other.hasGENUL22()) return false;
          if (hasGENUL22()) {
            if (java.lang.Float.floatToIntBits(getGENUL22())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL22())) return false;
          }
          if (hasGENUL32() != other.hasGENUL32()) return false;
          if (hasGENUL32()) {
            if (java.lang.Float.floatToIntBits(getGENUL32())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL32())) return false;
          }
          if (hasGENIL12() != other.hasGENIL12()) return false;
          if (hasGENIL12()) {
            if (java.lang.Float.floatToIntBits(getGENIL12())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL12())) return false;
          }
          if (hasGENIL22() != other.hasGENIL22()) return false;
          if (hasGENIL22()) {
            if (java.lang.Float.floatToIntBits(getGENIL22())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL22())) return false;
          }
          if (hasGENIL32() != other.hasGENIL32()) return false;
          if (hasGENIL32()) {
            if (java.lang.Float.floatToIntBits(getGENIL32())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL32())) return false;
          }
          if (hasGENSTATUS2() != other.hasGENSTATUS2()) return false;
          if (hasGENSTATUS2()) {
            if (getGENSTATUS2()
                != other.getGENSTATUS2()) return false;
          }
          if (hasGENHOURS2() != other.hasGENHOURS2()) return false;
          if (hasGENHOURS2()) {
            if (getGENHOURS2()
                != other.getGENHOURS2()) return false;
          }
          if (!getGENALARM2List()
              .equals(other.getGENALARM2List())) return false;
          if (hasGENOILPRESS3() != other.hasGENOILPRESS3()) return false;
          if (hasGENOILPRESS3()) {
            if (getGENOILPRESS3()
                != other.getGENOILPRESS3()) return false;
          }
          if (hasGENTEMP3() != other.hasGENTEMP3()) return false;
          if (hasGENTEMP3()) {
            if (getGENTEMP3()
                != other.getGENTEMP3()) return false;
          }
          if (hasGENVOLT3() != other.hasGENVOLT3()) return false;
          if (hasGENVOLT3()) {
            if (java.lang.Float.floatToIntBits(getGENVOLT3())
                != java.lang.Float.floatToIntBits(
                    other.getGENVOLT3())) return false;
          }
          if (hasGENRPM3() != other.hasGENRPM3()) return false;
          if (hasGENRPM3()) {
            if (getGENRPM3()
                != other.getGENRPM3()) return false;
          }
          if (hasGENUL13() != other.hasGENUL13()) return false;
          if (hasGENUL13()) {
            if (java.lang.Float.floatToIntBits(getGENUL13())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL13())) return false;
          }
          if (hasGENUL23() != other.hasGENUL23()) return false;
          if (hasGENUL23()) {
            if (java.lang.Float.floatToIntBits(getGENUL23())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL23())) return false;
          }
          if (hasGENUL33() != other.hasGENUL33()) return false;
          if (hasGENUL33()) {
            if (java.lang.Float.floatToIntBits(getGENUL33())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL33())) return false;
          }
          if (hasGENIL13() != other.hasGENIL13()) return false;
          if (hasGENIL13()) {
            if (java.lang.Float.floatToIntBits(getGENIL13())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL13())) return false;
          }
          if (hasGENIL23() != other.hasGENIL23()) return false;
          if (hasGENIL23()) {
            if (java.lang.Float.floatToIntBits(getGENIL23())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL23())) return false;
          }
          if (hasGENIL33() != other.hasGENIL33()) return false;
          if (hasGENIL33()) {
            if (java.lang.Float.floatToIntBits(getGENIL33())
                != java.lang.Float.floatToIntBits(
                    other.getGENIL33())) return false;
          }
          if (hasGENSTATUS3() != other.hasGENSTATUS3()) return false;
          if (hasGENSTATUS3()) {
            if (getGENSTATUS3()
                != other.getGENSTATUS3()) return false;
          }
          if (hasGENHOURS3() != other.hasGENHOURS3()) return false;
          if (hasGENHOURS3()) {
            if (getGENHOURS3()
                != other.getGENHOURS3()) return false;
          }
          if (!getGENALARM3List()
              .equals(other.getGENALARM3List())) return false;
          if (hasGENUC() != other.hasGENUC()) return false;
          if (hasGENUC()) {
            if (java.lang.Float.floatToIntBits(getGENUC())
                != java.lang.Float.floatToIntBits(
                    other.getGENUC())) return false;
          }
          if (hasGENIC() != other.hasGENIC()) return false;
          if (hasGENIC()) {
            if (getGENIC()
                != other.getGENIC()) return false;
          }
          if (hasGENFREQ() != other.hasGENFREQ()) return false;
          if (hasGENFREQ()) {
            if (java.lang.Float.floatToIntBits(getGENFREQ())
                != java.lang.Float.floatToIntBits(
                    other.getGENFREQ())) return false;
          }
          if (hasGENUL1L2() != other.hasGENUL1L2()) return false;
          if (hasGENUL1L2()) {
            if (java.lang.Float.floatToIntBits(getGENUL1L2())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL1L2())) return false;
          }
          if (hasGENUL2L3() != other.hasGENUL2L3()) return false;
          if (hasGENUL2L3()) {
            if (java.lang.Float.floatToIntBits(getGENUL2L3())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL2L3())) return false;
          }
          if (hasGENUL1L3() != other.hasGENUL1L3()) return false;
          if (hasGENUL1L3()) {
            if (java.lang.Float.floatToIntBits(getGENUL1L3())
                != java.lang.Float.floatToIntBits(
                    other.getGENUL1L3())) return false;
          }
          if (hasPOWACTL1() != other.hasPOWACTL1()) return false;
          if (hasPOWACTL1()) {
            if (getPOWACTL1()
                != other.getPOWACTL1()) return false;
          }
          if (hasPOWACTL2() != other.hasPOWACTL2()) return false;
          if (hasPOWACTL2()) {
            if (getPOWACTL2()
                != other.getPOWACTL2()) return false;
          }
          if (hasPOWACTL3() != other.hasPOWACTL3()) return false;
          if (hasPOWACTL3()) {
            if (getPOWACTL3()
                != other.getPOWACTL3()) return false;
          }
          if (hasPOWFULLL1() != other.hasPOWFULLL1()) return false;
          if (hasPOWFULLL1()) {
            if (getPOWFULLL1()
                != other.getPOWFULLL1()) return false;
          }
          if (hasPOWFULLL2() != other.hasPOWFULLL2()) return false;
          if (hasPOWFULLL2()) {
            if (getPOWFULLL2()
                != other.getPOWFULLL2()) return false;
          }
          if (hasPOWFULLL3() != other.hasPOWFULLL3()) return false;
          if (hasPOWFULLL3()) {
            if (getPOWFULLL3()
                != other.getPOWFULLL3()) return false;
          }
          if (hasPOWREACTL1() != other.hasPOWREACTL1()) return false;
          if (hasPOWREACTL1()) {
            if (getPOWREACTL1()
                != other.getPOWREACTL1()) return false;
          }
          if (hasPOWREACTL2() != other.hasPOWREACTL2()) return false;
          if (hasPOWREACTL2()) {
            if (getPOWREACTL2()
                != other.getPOWREACTL2()) return false;
          }
          if (hasPOWREACTL3() != other.hasPOWREACTL3()) return false;
          if (hasPOWREACTL3()) {
            if (getPOWREACTL3()
                != other.getPOWREACTL3()) return false;
          }
          if (hasPOWKOEF() != other.hasPOWKOEF()) return false;
          if (hasPOWKOEF()) {
            if (java.lang.Float.floatToIntBits(getPOWKOEF())
                != java.lang.Float.floatToIntBits(
                    other.getPOWKOEF())) return false;
          }
          if (hasPOWGENTOTAL() != other.hasPOWGENTOTAL()) return false;
          if (hasPOWGENTOTAL()) {
            if (getPOWGENTOTAL()
                != other.getPOWGENTOTAL()) return false;
          }
          if (hasFUELLEVEL() != other.hasFUELLEVEL()) return false;
          if (hasFUELLEVEL()) {
            if (getFUELLEVEL()
                != other.getFUELLEVEL()) return false;
          }
          if (hasSMSREGS0() != other.hasSMSREGS0()) return false;
          if (hasSMSREGS0()) {
            if (getSMSREGS0()
                != other.getSMSREGS0()) return false;
          }
          if (hasSMSREGS1() != other.hasSMSREGS1()) return false;
          if (hasSMSREGS1()) {
            if (getSMSREGS1()
                != other.getSMSREGS1()) return false;
          }
          if (hasSMSREGS2() != other.hasSMSREGS2()) return false;
          if (hasSMSREGS2()) {
            if (getSMSREGS2()
                != other.getSMSREGS2()) return false;
          }
          if (hasSMSREGS3() != other.hasSMSREGS3()) return false;
          if (hasSMSREGS3()) {
            if (getSMSREGS3()
                != other.getSMSREGS3()) return false;
          }
          if (hasSMSREGS4() != other.hasSMSREGS4()) return false;
          if (hasSMSREGS4()) {
            if (getSMSREGS4()
                != other.getSMSREGS4()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasGENOILPRESS1()) {
            hash = (37 * hash) + GEN_OILPRESS1_FIELD_NUMBER;
            hash = (53 * hash) + getGENOILPRESS1();
          }
          if (hasGENTEMP1()) {
            hash = (37 * hash) + GEN_TEMP1_FIELD_NUMBER;
            hash = (53 * hash) + getGENTEMP1();
          }
          if (hasGENVOLT1()) {
            hash = (37 * hash) + GEN_VOLT1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENVOLT1());
          }
          if (hasGENRPM1()) {
            hash = (37 * hash) + GEN_RPM1_FIELD_NUMBER;
            hash = (53 * hash) + getGENRPM1();
          }
          if (hasGENUL11()) {
            hash = (37 * hash) + GEN_UL1_1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL11());
          }
          if (hasGENUL21()) {
            hash = (37 * hash) + GEN_UL2_1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL21());
          }
          if (hasGENUL31()) {
            hash = (37 * hash) + GEN_UL3_1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL31());
          }
          if (hasGENIL11()) {
            hash = (37 * hash) + GEN_IL1_1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL11());
          }
          if (hasGENIL21()) {
            hash = (37 * hash) + GEN_IL2_1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL21());
          }
          if (hasGENIL31()) {
            hash = (37 * hash) + GEN_IL3_1_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL31());
          }
          if (hasGENSTATUS1()) {
            hash = (37 * hash) + GEN_STATUS1_FIELD_NUMBER;
            hash = (53 * hash) + getGENSTATUS1();
          }
          if (hasGENHOURS1()) {
            hash = (37 * hash) + GEN_HOURS1_FIELD_NUMBER;
            hash = (53 * hash) + getGENHOURS1();
          }
          if (getGENALARM1Count() > 0) {
            hash = (37 * hash) + GEN_ALARM1_FIELD_NUMBER;
            hash = (53 * hash) + getGENALARM1List().hashCode();
          }
          if (hasGENOILPRESS2()) {
            hash = (37 * hash) + GEN_OILPRESS2_FIELD_NUMBER;
            hash = (53 * hash) + getGENOILPRESS2();
          }
          if (hasGENTEMP2()) {
            hash = (37 * hash) + GEN_TEMP2_FIELD_NUMBER;
            hash = (53 * hash) + getGENTEMP2();
          }
          if (hasGENVOLT2()) {
            hash = (37 * hash) + GEN_VOLT2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENVOLT2());
          }
          if (hasGENRPM2()) {
            hash = (37 * hash) + GEN_RPM2_FIELD_NUMBER;
            hash = (53 * hash) + getGENRPM2();
          }
          if (hasGENUL12()) {
            hash = (37 * hash) + GEN_UL1_2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL12());
          }
          if (hasGENUL22()) {
            hash = (37 * hash) + GEN_UL2_2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL22());
          }
          if (hasGENUL32()) {
            hash = (37 * hash) + GEN_UL3_2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL32());
          }
          if (hasGENIL12()) {
            hash = (37 * hash) + GEN_IL1_2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL12());
          }
          if (hasGENIL22()) {
            hash = (37 * hash) + GEN_IL2_2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL22());
          }
          if (hasGENIL32()) {
            hash = (37 * hash) + GEN_IL3_2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL32());
          }
          if (hasGENSTATUS2()) {
            hash = (37 * hash) + GEN_STATUS2_FIELD_NUMBER;
            hash = (53 * hash) + getGENSTATUS2();
          }
          if (hasGENHOURS2()) {
            hash = (37 * hash) + GEN_HOURS2_FIELD_NUMBER;
            hash = (53 * hash) + getGENHOURS2();
          }
          if (getGENALARM2Count() > 0) {
            hash = (37 * hash) + GEN_ALARM2_FIELD_NUMBER;
            hash = (53 * hash) + getGENALARM2List().hashCode();
          }
          if (hasGENOILPRESS3()) {
            hash = (37 * hash) + GEN_OILPRESS3_FIELD_NUMBER;
            hash = (53 * hash) + getGENOILPRESS3();
          }
          if (hasGENTEMP3()) {
            hash = (37 * hash) + GEN_TEMP3_FIELD_NUMBER;
            hash = (53 * hash) + getGENTEMP3();
          }
          if (hasGENVOLT3()) {
            hash = (37 * hash) + GEN_VOLT3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENVOLT3());
          }
          if (hasGENRPM3()) {
            hash = (37 * hash) + GEN_RPM3_FIELD_NUMBER;
            hash = (53 * hash) + getGENRPM3();
          }
          if (hasGENUL13()) {
            hash = (37 * hash) + GEN_UL1_3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL13());
          }
          if (hasGENUL23()) {
            hash = (37 * hash) + GEN_UL2_3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL23());
          }
          if (hasGENUL33()) {
            hash = (37 * hash) + GEN_UL3_3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL33());
          }
          if (hasGENIL13()) {
            hash = (37 * hash) + GEN_IL1_3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL13());
          }
          if (hasGENIL23()) {
            hash = (37 * hash) + GEN_IL2_3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL23());
          }
          if (hasGENIL33()) {
            hash = (37 * hash) + GEN_IL3_3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENIL33());
          }
          if (hasGENSTATUS3()) {
            hash = (37 * hash) + GEN_STATUS3_FIELD_NUMBER;
            hash = (53 * hash) + getGENSTATUS3();
          }
          if (hasGENHOURS3()) {
            hash = (37 * hash) + GEN_HOURS3_FIELD_NUMBER;
            hash = (53 * hash) + getGENHOURS3();
          }
          if (getGENALARM3Count() > 0) {
            hash = (37 * hash) + GEN_ALARM3_FIELD_NUMBER;
            hash = (53 * hash) + getGENALARM3List().hashCode();
          }
          if (hasGENUC()) {
            hash = (37 * hash) + GEN_UC_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUC());
          }
          if (hasGENIC()) {
            hash = (37 * hash) + GEN_IC_FIELD_NUMBER;
            hash = (53 * hash) + getGENIC();
          }
          if (hasGENFREQ()) {
            hash = (37 * hash) + GEN_FREQ_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENFREQ());
          }
          if (hasGENUL1L2()) {
            hash = (37 * hash) + GEN_UL1L2_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL1L2());
          }
          if (hasGENUL2L3()) {
            hash = (37 * hash) + GEN_UL2L3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL2L3());
          }
          if (hasGENUL1L3()) {
            hash = (37 * hash) + GEN_UL1L3_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getGENUL1L3());
          }
          if (hasPOWACTL1()) {
            hash = (37 * hash) + POW_ACT_L1_FIELD_NUMBER;
            hash = (53 * hash) + getPOWACTL1();
          }
          if (hasPOWACTL2()) {
            hash = (37 * hash) + POW_ACT_L2_FIELD_NUMBER;
            hash = (53 * hash) + getPOWACTL2();
          }
          if (hasPOWACTL3()) {
            hash = (37 * hash) + POW_ACT_L3_FIELD_NUMBER;
            hash = (53 * hash) + getPOWACTL3();
          }
          if (hasPOWFULLL1()) {
            hash = (37 * hash) + POW_FULL_L1_FIELD_NUMBER;
            hash = (53 * hash) + getPOWFULLL1();
          }
          if (hasPOWFULLL2()) {
            hash = (37 * hash) + POW_FULL_L2_FIELD_NUMBER;
            hash = (53 * hash) + getPOWFULLL2();
          }
          if (hasPOWFULLL3()) {
            hash = (37 * hash) + POW_FULL_L3_FIELD_NUMBER;
            hash = (53 * hash) + getPOWFULLL3();
          }
          if (hasPOWREACTL1()) {
            hash = (37 * hash) + POW_REACT_L1_FIELD_NUMBER;
            hash = (53 * hash) + getPOWREACTL1();
          }
          if (hasPOWREACTL2()) {
            hash = (37 * hash) + POW_REACT_L2_FIELD_NUMBER;
            hash = (53 * hash) + getPOWREACTL2();
          }
          if (hasPOWREACTL3()) {
            hash = (37 * hash) + POW_REACT_L3_FIELD_NUMBER;
            hash = (53 * hash) + getPOWREACTL3();
          }
          if (hasPOWKOEF()) {
            hash = (37 * hash) + POW_KOEF_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getPOWKOEF());
          }
          if (hasPOWGENTOTAL()) {
            hash = (37 * hash) + POW_GEN_TOTAL_FIELD_NUMBER;
            hash = (53 * hash) + getPOWGENTOTAL();
          }
          if (hasFUELLEVEL()) {
            hash = (37 * hash) + FUEL_LEVEL_FIELD_NUMBER;
            hash = (53 * hash) + getFUELLEVEL();
          }
          if (hasSMSREGS0()) {
            hash = (37 * hash) + SMS_REGS_0_FIELD_NUMBER;
            hash = (53 * hash) + getSMSREGS0();
          }
          if (hasSMSREGS1()) {
            hash = (37 * hash) + SMS_REGS_1_FIELD_NUMBER;
            hash = (53 * hash) + getSMSREGS1();
          }
          if (hasSMSREGS2()) {
            hash = (37 * hash) + SMS_REGS_2_FIELD_NUMBER;
            hash = (53 * hash) + getSMSREGS2();
          }
          if (hasSMSREGS3()) {
            hash = (37 * hash) + SMS_REGS_3_FIELD_NUMBER;
            hash = (53 * hash) + getSMSREGS3();
          }
          if (hasSMSREGS4()) {
            hash = (37 * hash) + SMS_REGS_4_FIELD_NUMBER;
            hash = (53 * hash) + getSMSREGS4();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Данные о GenComm генераторе
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            bitField1_ = 0;
            gENOILPRESS1_ = 0;
            gENTEMP1_ = 0;
            gENVOLT1_ = 0F;
            gENRPM1_ = 0;
            gENUL11_ = 0F;
            gENUL21_ = 0F;
            gENUL31_ = 0F;
            gENIL11_ = 0F;
            gENIL21_ = 0F;
            gENIL31_ = 0F;
            gENSTATUS1_ = 0;
            gENHOURS1_ = 0;
            gENALARM1_ = emptyList(com.google.protobuf.ByteString.class);
            gENOILPRESS2_ = 0;
            gENTEMP2_ = 0;
            gENVOLT2_ = 0F;
            gENRPM2_ = 0;
            gENUL12_ = 0F;
            gENUL22_ = 0F;
            gENUL32_ = 0F;
            gENIL12_ = 0F;
            gENIL22_ = 0F;
            gENIL32_ = 0F;
            gENSTATUS2_ = 0;
            gENHOURS2_ = 0;
            gENALARM2_ = emptyList(com.google.protobuf.ByteString.class);
            gENOILPRESS3_ = 0;
            gENTEMP3_ = 0;
            gENVOLT3_ = 0F;
            gENRPM3_ = 0;
            gENUL13_ = 0F;
            gENUL23_ = 0F;
            gENUL33_ = 0F;
            gENIL13_ = 0F;
            gENIL23_ = 0F;
            gENIL33_ = 0F;
            gENSTATUS3_ = 0;
            gENHOURS3_ = 0;
            gENALARM3_ = emptyList(com.google.protobuf.ByteString.class);
            gENUC_ = 0F;
            gENIC_ = 0;
            gENFREQ_ = 0F;
            gENUL1L2_ = 0F;
            gENUL2L3_ = 0F;
            gENUL1L3_ = 0F;
            pOWACTL1_ = 0;
            pOWACTL2_ = 0;
            pOWACTL3_ = 0;
            pOWFULLL1_ = 0;
            pOWFULLL2_ = 0;
            pOWFULLL3_ = 0;
            pOWREACTL1_ = 0;
            pOWREACTL2_ = 0;
            pOWREACTL3_ = 0;
            pOWKOEF_ = 0F;
            pOWGENTOTAL_ = 0;
            fUELLEVEL_ = 0;
            sMSREGS0_ = 0;
            sMSREGS1_ = 0;
            sMSREGS2_ = 0;
            sMSREGS3_ = 0;
            sMSREGS4_ = 0;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            if (bitField1_ != 0) { buildPartial1(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.gENOILPRESS1_ = gENOILPRESS1_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.gENTEMP1_ = gENTEMP1_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.gENVOLT1_ = gENVOLT1_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.gENRPM1_ = gENRPM1_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.gENUL11_ = gENUL11_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.gENUL21_ = gENUL21_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.gENUL31_ = gENUL31_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.gENIL11_ = gENIL11_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.gENIL21_ = gENIL21_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.gENIL31_ = gENIL31_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              result.gENSTATUS1_ = gENSTATUS1_;
              to_bitField0_ |= 0x00000400;
            }
            if (((from_bitField0_ & 0x00000800) != 0)) {
              result.gENHOURS1_ = gENHOURS1_;
              to_bitField0_ |= 0x00000800;
            }
            if (((from_bitField0_ & 0x00001000) != 0)) {
              gENALARM1_.makeImmutable();
              result.gENALARM1_ = gENALARM1_;
            }
            if (((from_bitField0_ & 0x00002000) != 0)) {
              result.gENOILPRESS2_ = gENOILPRESS2_;
              to_bitField0_ |= 0x00001000;
            }
            if (((from_bitField0_ & 0x00004000) != 0)) {
              result.gENTEMP2_ = gENTEMP2_;
              to_bitField0_ |= 0x00002000;
            }
            if (((from_bitField0_ & 0x00008000) != 0)) {
              result.gENVOLT2_ = gENVOLT2_;
              to_bitField0_ |= 0x00004000;
            }
            if (((from_bitField0_ & 0x00010000) != 0)) {
              result.gENRPM2_ = gENRPM2_;
              to_bitField0_ |= 0x00008000;
            }
            if (((from_bitField0_ & 0x00020000) != 0)) {
              result.gENUL12_ = gENUL12_;
              to_bitField0_ |= 0x00010000;
            }
            if (((from_bitField0_ & 0x00040000) != 0)) {
              result.gENUL22_ = gENUL22_;
              to_bitField0_ |= 0x00020000;
            }
            if (((from_bitField0_ & 0x00080000) != 0)) {
              result.gENUL32_ = gENUL32_;
              to_bitField0_ |= 0x00040000;
            }
            if (((from_bitField0_ & 0x00100000) != 0)) {
              result.gENIL12_ = gENIL12_;
              to_bitField0_ |= 0x00080000;
            }
            if (((from_bitField0_ & 0x00200000) != 0)) {
              result.gENIL22_ = gENIL22_;
              to_bitField0_ |= 0x00100000;
            }
            if (((from_bitField0_ & 0x00400000) != 0)) {
              result.gENIL32_ = gENIL32_;
              to_bitField0_ |= 0x00200000;
            }
            if (((from_bitField0_ & 0x00800000) != 0)) {
              result.gENSTATUS2_ = gENSTATUS2_;
              to_bitField0_ |= 0x00400000;
            }
            if (((from_bitField0_ & 0x01000000) != 0)) {
              result.gENHOURS2_ = gENHOURS2_;
              to_bitField0_ |= 0x00800000;
            }
            if (((from_bitField0_ & 0x02000000) != 0)) {
              gENALARM2_.makeImmutable();
              result.gENALARM2_ = gENALARM2_;
            }
            if (((from_bitField0_ & 0x04000000) != 0)) {
              result.gENOILPRESS3_ = gENOILPRESS3_;
              to_bitField0_ |= 0x01000000;
            }
            if (((from_bitField0_ & 0x08000000) != 0)) {
              result.gENTEMP3_ = gENTEMP3_;
              to_bitField0_ |= 0x02000000;
            }
            if (((from_bitField0_ & 0x10000000) != 0)) {
              result.gENVOLT3_ = gENVOLT3_;
              to_bitField0_ |= 0x04000000;
            }
            if (((from_bitField0_ & 0x20000000) != 0)) {
              result.gENRPM3_ = gENRPM3_;
              to_bitField0_ |= 0x08000000;
            }
            if (((from_bitField0_ & 0x40000000) != 0)) {
              result.gENUL13_ = gENUL13_;
              to_bitField0_ |= 0x10000000;
            }
            if (((from_bitField0_ & 0x80000000) != 0)) {
              result.gENUL23_ = gENUL23_;
              to_bitField0_ |= 0x20000000;
            }
            result.bitField0_ |= to_bitField0_;
          }

          private void buildPartial1(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm result) {
            int from_bitField1_ = bitField1_;
            int to_bitField0_ = 0;
            if (((from_bitField1_ & 0x00000001) != 0)) {
              result.gENUL33_ = gENUL33_;
              to_bitField0_ |= 0x40000000;
            }
            if (((from_bitField1_ & 0x00000002) != 0)) {
              result.gENIL13_ = gENIL13_;
              to_bitField0_ |= 0x80000000;
            }
            int to_bitField1_ = 0;
            if (((from_bitField1_ & 0x00000004) != 0)) {
              result.gENIL23_ = gENIL23_;
              to_bitField1_ |= 0x00000001;
            }
            if (((from_bitField1_ & 0x00000008) != 0)) {
              result.gENIL33_ = gENIL33_;
              to_bitField1_ |= 0x00000002;
            }
            if (((from_bitField1_ & 0x00000010) != 0)) {
              result.gENSTATUS3_ = gENSTATUS3_;
              to_bitField1_ |= 0x00000004;
            }
            if (((from_bitField1_ & 0x00000020) != 0)) {
              result.gENHOURS3_ = gENHOURS3_;
              to_bitField1_ |= 0x00000008;
            }
            if (((from_bitField1_ & 0x00000040) != 0)) {
              gENALARM3_.makeImmutable();
              result.gENALARM3_ = gENALARM3_;
            }
            if (((from_bitField1_ & 0x00000080) != 0)) {
              result.gENUC_ = gENUC_;
              to_bitField1_ |= 0x00000010;
            }
            if (((from_bitField1_ & 0x00000100) != 0)) {
              result.gENIC_ = gENIC_;
              to_bitField1_ |= 0x00000020;
            }
            if (((from_bitField1_ & 0x00000200) != 0)) {
              result.gENFREQ_ = gENFREQ_;
              to_bitField1_ |= 0x00000040;
            }
            if (((from_bitField1_ & 0x00000400) != 0)) {
              result.gENUL1L2_ = gENUL1L2_;
              to_bitField1_ |= 0x00000080;
            }
            if (((from_bitField1_ & 0x00000800) != 0)) {
              result.gENUL2L3_ = gENUL2L3_;
              to_bitField1_ |= 0x00000100;
            }
            if (((from_bitField1_ & 0x00001000) != 0)) {
              result.gENUL1L3_ = gENUL1L3_;
              to_bitField1_ |= 0x00000200;
            }
            if (((from_bitField1_ & 0x00002000) != 0)) {
              result.pOWACTL1_ = pOWACTL1_;
              to_bitField1_ |= 0x00000400;
            }
            if (((from_bitField1_ & 0x00004000) != 0)) {
              result.pOWACTL2_ = pOWACTL2_;
              to_bitField1_ |= 0x00000800;
            }
            if (((from_bitField1_ & 0x00008000) != 0)) {
              result.pOWACTL3_ = pOWACTL3_;
              to_bitField1_ |= 0x00001000;
            }
            if (((from_bitField1_ & 0x00010000) != 0)) {
              result.pOWFULLL1_ = pOWFULLL1_;
              to_bitField1_ |= 0x00002000;
            }
            if (((from_bitField1_ & 0x00020000) != 0)) {
              result.pOWFULLL2_ = pOWFULLL2_;
              to_bitField1_ |= 0x00004000;
            }
            if (((from_bitField1_ & 0x00040000) != 0)) {
              result.pOWFULLL3_ = pOWFULLL3_;
              to_bitField1_ |= 0x00008000;
            }
            if (((from_bitField1_ & 0x00080000) != 0)) {
              result.pOWREACTL1_ = pOWREACTL1_;
              to_bitField1_ |= 0x00010000;
            }
            if (((from_bitField1_ & 0x00100000) != 0)) {
              result.pOWREACTL2_ = pOWREACTL2_;
              to_bitField1_ |= 0x00020000;
            }
            if (((from_bitField1_ & 0x00200000) != 0)) {
              result.pOWREACTL3_ = pOWREACTL3_;
              to_bitField1_ |= 0x00040000;
            }
            if (((from_bitField1_ & 0x00400000) != 0)) {
              result.pOWKOEF_ = pOWKOEF_;
              to_bitField1_ |= 0x00080000;
            }
            if (((from_bitField1_ & 0x00800000) != 0)) {
              result.pOWGENTOTAL_ = pOWGENTOTAL_;
              to_bitField1_ |= 0x00100000;
            }
            if (((from_bitField1_ & 0x01000000) != 0)) {
              result.fUELLEVEL_ = fUELLEVEL_;
              to_bitField1_ |= 0x00200000;
            }
            if (((from_bitField1_ & 0x02000000) != 0)) {
              result.sMSREGS0_ = sMSREGS0_;
              to_bitField1_ |= 0x00400000;
            }
            if (((from_bitField1_ & 0x04000000) != 0)) {
              result.sMSREGS1_ = sMSREGS1_;
              to_bitField1_ |= 0x00800000;
            }
            if (((from_bitField1_ & 0x08000000) != 0)) {
              result.sMSREGS2_ = sMSREGS2_;
              to_bitField1_ |= 0x01000000;
            }
            if (((from_bitField1_ & 0x10000000) != 0)) {
              result.sMSREGS3_ = sMSREGS3_;
              to_bitField1_ |= 0x02000000;
            }
            if (((from_bitField1_ & 0x20000000) != 0)) {
              result.sMSREGS4_ = sMSREGS4_;
              to_bitField1_ |= 0x04000000;
            }
            result.bitField0_ |= to_bitField0_;
            result.bitField1_ |= to_bitField1_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance()) return this;
            if (other.hasGENOILPRESS1()) {
              setGENOILPRESS1(other.getGENOILPRESS1());
            }
            if (other.hasGENTEMP1()) {
              setGENTEMP1(other.getGENTEMP1());
            }
            if (other.hasGENVOLT1()) {
              setGENVOLT1(other.getGENVOLT1());
            }
            if (other.hasGENRPM1()) {
              setGENRPM1(other.getGENRPM1());
            }
            if (other.hasGENUL11()) {
              setGENUL11(other.getGENUL11());
            }
            if (other.hasGENUL21()) {
              setGENUL21(other.getGENUL21());
            }
            if (other.hasGENUL31()) {
              setGENUL31(other.getGENUL31());
            }
            if (other.hasGENIL11()) {
              setGENIL11(other.getGENIL11());
            }
            if (other.hasGENIL21()) {
              setGENIL21(other.getGENIL21());
            }
            if (other.hasGENIL31()) {
              setGENIL31(other.getGENIL31());
            }
            if (other.hasGENSTATUS1()) {
              setGENSTATUS1(other.getGENSTATUS1());
            }
            if (other.hasGENHOURS1()) {
              setGENHOURS1(other.getGENHOURS1());
            }
            if (!other.gENALARM1_.isEmpty()) {
              if (gENALARM1_.isEmpty()) {
                gENALARM1_ = other.gENALARM1_;
                gENALARM1_.makeImmutable();
                bitField0_ |= 0x00001000;
              } else {
                ensureGENALARM1IsMutable();
                gENALARM1_.addAll(other.gENALARM1_);
              }
              onChanged();
            }
            if (other.hasGENOILPRESS2()) {
              setGENOILPRESS2(other.getGENOILPRESS2());
            }
            if (other.hasGENTEMP2()) {
              setGENTEMP2(other.getGENTEMP2());
            }
            if (other.hasGENVOLT2()) {
              setGENVOLT2(other.getGENVOLT2());
            }
            if (other.hasGENRPM2()) {
              setGENRPM2(other.getGENRPM2());
            }
            if (other.hasGENUL12()) {
              setGENUL12(other.getGENUL12());
            }
            if (other.hasGENUL22()) {
              setGENUL22(other.getGENUL22());
            }
            if (other.hasGENUL32()) {
              setGENUL32(other.getGENUL32());
            }
            if (other.hasGENIL12()) {
              setGENIL12(other.getGENIL12());
            }
            if (other.hasGENIL22()) {
              setGENIL22(other.getGENIL22());
            }
            if (other.hasGENIL32()) {
              setGENIL32(other.getGENIL32());
            }
            if (other.hasGENSTATUS2()) {
              setGENSTATUS2(other.getGENSTATUS2());
            }
            if (other.hasGENHOURS2()) {
              setGENHOURS2(other.getGENHOURS2());
            }
            if (!other.gENALARM2_.isEmpty()) {
              if (gENALARM2_.isEmpty()) {
                gENALARM2_ = other.gENALARM2_;
                gENALARM2_.makeImmutable();
                bitField0_ |= 0x02000000;
              } else {
                ensureGENALARM2IsMutable();
                gENALARM2_.addAll(other.gENALARM2_);
              }
              onChanged();
            }
            if (other.hasGENOILPRESS3()) {
              setGENOILPRESS3(other.getGENOILPRESS3());
            }
            if (other.hasGENTEMP3()) {
              setGENTEMP3(other.getGENTEMP3());
            }
            if (other.hasGENVOLT3()) {
              setGENVOLT3(other.getGENVOLT3());
            }
            if (other.hasGENRPM3()) {
              setGENRPM3(other.getGENRPM3());
            }
            if (other.hasGENUL13()) {
              setGENUL13(other.getGENUL13());
            }
            if (other.hasGENUL23()) {
              setGENUL23(other.getGENUL23());
            }
            if (other.hasGENUL33()) {
              setGENUL33(other.getGENUL33());
            }
            if (other.hasGENIL13()) {
              setGENIL13(other.getGENIL13());
            }
            if (other.hasGENIL23()) {
              setGENIL23(other.getGENIL23());
            }
            if (other.hasGENIL33()) {
              setGENIL33(other.getGENIL33());
            }
            if (other.hasGENSTATUS3()) {
              setGENSTATUS3(other.getGENSTATUS3());
            }
            if (other.hasGENHOURS3()) {
              setGENHOURS3(other.getGENHOURS3());
            }
            if (!other.gENALARM3_.isEmpty()) {
              if (gENALARM3_.isEmpty()) {
                gENALARM3_ = other.gENALARM3_;
                gENALARM3_.makeImmutable();
                bitField1_ |= 0x00000040;
              } else {
                ensureGENALARM3IsMutable();
                gENALARM3_.addAll(other.gENALARM3_);
              }
              onChanged();
            }
            if (other.hasGENUC()) {
              setGENUC(other.getGENUC());
            }
            if (other.hasGENIC()) {
              setGENIC(other.getGENIC());
            }
            if (other.hasGENFREQ()) {
              setGENFREQ(other.getGENFREQ());
            }
            if (other.hasGENUL1L2()) {
              setGENUL1L2(other.getGENUL1L2());
            }
            if (other.hasGENUL2L3()) {
              setGENUL2L3(other.getGENUL2L3());
            }
            if (other.hasGENUL1L3()) {
              setGENUL1L3(other.getGENUL1L3());
            }
            if (other.hasPOWACTL1()) {
              setPOWACTL1(other.getPOWACTL1());
            }
            if (other.hasPOWACTL2()) {
              setPOWACTL2(other.getPOWACTL2());
            }
            if (other.hasPOWACTL3()) {
              setPOWACTL3(other.getPOWACTL3());
            }
            if (other.hasPOWFULLL1()) {
              setPOWFULLL1(other.getPOWFULLL1());
            }
            if (other.hasPOWFULLL2()) {
              setPOWFULLL2(other.getPOWFULLL2());
            }
            if (other.hasPOWFULLL3()) {
              setPOWFULLL3(other.getPOWFULLL3());
            }
            if (other.hasPOWREACTL1()) {
              setPOWREACTL1(other.getPOWREACTL1());
            }
            if (other.hasPOWREACTL2()) {
              setPOWREACTL2(other.getPOWREACTL2());
            }
            if (other.hasPOWREACTL3()) {
              setPOWREACTL3(other.getPOWREACTL3());
            }
            if (other.hasPOWKOEF()) {
              setPOWKOEF(other.getPOWKOEF());
            }
            if (other.hasPOWGENTOTAL()) {
              setPOWGENTOTAL(other.getPOWGENTOTAL());
            }
            if (other.hasFUELLEVEL()) {
              setFUELLEVEL(other.getFUELLEVEL());
            }
            if (other.hasSMSREGS0()) {
              setSMSREGS0(other.getSMSREGS0());
            }
            if (other.hasSMSREGS1()) {
              setSMSREGS1(other.getSMSREGS1());
            }
            if (other.hasSMSREGS2()) {
              setSMSREGS2(other.getSMSREGS2());
            }
            if (other.hasSMSREGS3()) {
              setSMSREGS3(other.getSMSREGS3());
            }
            if (other.hasSMSREGS4()) {
              setSMSREGS4(other.getSMSREGS4());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    gENOILPRESS1_ = input.readUInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    gENTEMP1_ = input.readSInt32();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 29: {
                    gENVOLT1_ = input.readFloat();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 29
                  case 32: {
                    gENRPM1_ = input.readUInt32();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 32
                  case 45: {
                    gENUL11_ = input.readFloat();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 45
                  case 53: {
                    gENUL21_ = input.readFloat();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 53
                  case 61: {
                    gENUL31_ = input.readFloat();
                    bitField0_ |= 0x00000040;
                    break;
                  } // case 61
                  case 69: {
                    gENIL11_ = input.readFloat();
                    bitField0_ |= 0x00000080;
                    break;
                  } // case 69
                  case 77: {
                    gENIL21_ = input.readFloat();
                    bitField0_ |= 0x00000100;
                    break;
                  } // case 77
                  case 85: {
                    gENIL31_ = input.readFloat();
                    bitField0_ |= 0x00000200;
                    break;
                  } // case 85
                  case 88: {
                    gENSTATUS1_ = input.readUInt32();
                    bitField0_ |= 0x00000400;
                    break;
                  } // case 88
                  case 96: {
                    gENHOURS1_ = input.readUInt32();
                    bitField0_ |= 0x00000800;
                    break;
                  } // case 96
                  case 106: {
                    com.google.protobuf.ByteString v = input.readBytes();
                    ensureGENALARM1IsMutable();
                    gENALARM1_.add(v);
                    break;
                  } // case 106
                  case 112: {
                    gENOILPRESS2_ = input.readUInt32();
                    bitField0_ |= 0x00002000;
                    break;
                  } // case 112
                  case 120: {
                    gENTEMP2_ = input.readSInt32();
                    bitField0_ |= 0x00004000;
                    break;
                  } // case 120
                  case 133: {
                    gENVOLT2_ = input.readFloat();
                    bitField0_ |= 0x00008000;
                    break;
                  } // case 133
                  case 136: {
                    gENRPM2_ = input.readUInt32();
                    bitField0_ |= 0x00010000;
                    break;
                  } // case 136
                  case 149: {
                    gENUL12_ = input.readFloat();
                    bitField0_ |= 0x00020000;
                    break;
                  } // case 149
                  case 157: {
                    gENUL22_ = input.readFloat();
                    bitField0_ |= 0x00040000;
                    break;
                  } // case 157
                  case 165: {
                    gENUL32_ = input.readFloat();
                    bitField0_ |= 0x00080000;
                    break;
                  } // case 165
                  case 173: {
                    gENIL12_ = input.readFloat();
                    bitField0_ |= 0x00100000;
                    break;
                  } // case 173
                  case 181: {
                    gENIL22_ = input.readFloat();
                    bitField0_ |= 0x00200000;
                    break;
                  } // case 181
                  case 189: {
                    gENIL32_ = input.readFloat();
                    bitField0_ |= 0x00400000;
                    break;
                  } // case 189
                  case 192: {
                    gENSTATUS2_ = input.readUInt32();
                    bitField0_ |= 0x00800000;
                    break;
                  } // case 192
                  case 200: {
                    gENHOURS2_ = input.readUInt32();
                    bitField0_ |= 0x01000000;
                    break;
                  } // case 200
                  case 210: {
                    com.google.protobuf.ByteString v = input.readBytes();
                    ensureGENALARM2IsMutable();
                    gENALARM2_.add(v);
                    break;
                  } // case 210
                  case 216: {
                    gENOILPRESS3_ = input.readUInt32();
                    bitField0_ |= 0x04000000;
                    break;
                  } // case 216
                  case 224: {
                    gENTEMP3_ = input.readSInt32();
                    bitField0_ |= 0x08000000;
                    break;
                  } // case 224
                  case 237: {
                    gENVOLT3_ = input.readFloat();
                    bitField0_ |= 0x10000000;
                    break;
                  } // case 237
                  case 240: {
                    gENRPM3_ = input.readUInt32();
                    bitField0_ |= 0x20000000;
                    break;
                  } // case 240
                  case 253: {
                    gENUL13_ = input.readFloat();
                    bitField0_ |= 0x40000000;
                    break;
                  } // case 253
                  case 261: {
                    gENUL23_ = input.readFloat();
                    bitField0_ |= 0x80000000;
                    break;
                  } // case 261
                  case 269: {
                    gENUL33_ = input.readFloat();
                    bitField1_ |= 0x00000001;
                    break;
                  } // case 269
                  case 277: {
                    gENIL13_ = input.readFloat();
                    bitField1_ |= 0x00000002;
                    break;
                  } // case 277
                  case 285: {
                    gENIL23_ = input.readFloat();
                    bitField1_ |= 0x00000004;
                    break;
                  } // case 285
                  case 293: {
                    gENIL33_ = input.readFloat();
                    bitField1_ |= 0x00000008;
                    break;
                  } // case 293
                  case 296: {
                    gENSTATUS3_ = input.readUInt32();
                    bitField1_ |= 0x00000010;
                    break;
                  } // case 296
                  case 304: {
                    gENHOURS3_ = input.readUInt32();
                    bitField1_ |= 0x00000020;
                    break;
                  } // case 304
                  case 314: {
                    com.google.protobuf.ByteString v = input.readBytes();
                    ensureGENALARM3IsMutable();
                    gENALARM3_.add(v);
                    break;
                  } // case 314
                  case 325: {
                    gENUC_ = input.readFloat();
                    bitField1_ |= 0x00000080;
                    break;
                  } // case 325
                  case 328: {
                    gENIC_ = input.readUInt32();
                    bitField1_ |= 0x00000100;
                    break;
                  } // case 328
                  case 341: {
                    gENFREQ_ = input.readFloat();
                    bitField1_ |= 0x00000200;
                    break;
                  } // case 341
                  case 349: {
                    gENUL1L2_ = input.readFloat();
                    bitField1_ |= 0x00000400;
                    break;
                  } // case 349
                  case 357: {
                    gENUL2L3_ = input.readFloat();
                    bitField1_ |= 0x00000800;
                    break;
                  } // case 357
                  case 365: {
                    gENUL1L3_ = input.readFloat();
                    bitField1_ |= 0x00001000;
                    break;
                  } // case 365
                  case 368: {
                    pOWACTL1_ = input.readUInt32();
                    bitField1_ |= 0x00002000;
                    break;
                  } // case 368
                  case 376: {
                    pOWACTL2_ = input.readUInt32();
                    bitField1_ |= 0x00004000;
                    break;
                  } // case 376
                  case 384: {
                    pOWACTL3_ = input.readUInt32();
                    bitField1_ |= 0x00008000;
                    break;
                  } // case 384
                  case 392: {
                    pOWFULLL1_ = input.readUInt32();
                    bitField1_ |= 0x00010000;
                    break;
                  } // case 392
                  case 400: {
                    pOWFULLL2_ = input.readUInt32();
                    bitField1_ |= 0x00020000;
                    break;
                  } // case 400
                  case 408: {
                    pOWFULLL3_ = input.readUInt32();
                    bitField1_ |= 0x00040000;
                    break;
                  } // case 408
                  case 416: {
                    pOWREACTL1_ = input.readUInt32();
                    bitField1_ |= 0x00080000;
                    break;
                  } // case 416
                  case 424: {
                    pOWREACTL2_ = input.readUInt32();
                    bitField1_ |= 0x00100000;
                    break;
                  } // case 424
                  case 432: {
                    pOWREACTL3_ = input.readUInt32();
                    bitField1_ |= 0x00200000;
                    break;
                  } // case 432
                  case 445: {
                    pOWKOEF_ = input.readFloat();
                    bitField1_ |= 0x00400000;
                    break;
                  } // case 445
                  case 448: {
                    pOWGENTOTAL_ = input.readUInt32();
                    bitField1_ |= 0x00800000;
                    break;
                  } // case 448
                  case 456: {
                    fUELLEVEL_ = input.readUInt32();
                    bitField1_ |= 0x01000000;
                    break;
                  } // case 456
                  case 480: {
                    sMSREGS0_ = input.readUInt32();
                    bitField1_ |= 0x02000000;
                    break;
                  } // case 480
                  case 488: {
                    sMSREGS1_ = input.readUInt32();
                    bitField1_ |= 0x04000000;
                    break;
                  } // case 488
                  case 496: {
                    sMSREGS2_ = input.readUInt32();
                    bitField1_ |= 0x08000000;
                    break;
                  } // case 496
                  case 504: {
                    sMSREGS3_ = input.readUInt32();
                    bitField1_ |= 0x10000000;
                    break;
                  } // case 504
                  case 512: {
                    sMSREGS4_ = input.readUInt32();
                    bitField1_ |= 0x20000000;
                    break;
                  } // case 512
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;
          private int bitField1_;

          private int gENOILPRESS1_ ;
          /**
           * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
           * @return Whether the gENOILPRESS1 field is set.
           */
          @java.lang.Override
          public boolean hasGENOILPRESS1() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
           * @return The gENOILPRESS1.
           */
          @java.lang.Override
          public int getGENOILPRESS1() {
            return gENOILPRESS1_;
          }
          /**
           * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
           * @param value The gENOILPRESS1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENOILPRESS1(int value) {

            gENOILPRESS1_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_OILPRESS1 = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENOILPRESS1() {
            bitField0_ = (bitField0_ & ~0x00000001);
            gENOILPRESS1_ = 0;
            onChanged();
            return this;
          }

          private int gENTEMP1_ ;
          /**
           * <code>optional sint32 GEN_TEMP1 = 2;</code>
           * @return Whether the gENTEMP1 field is set.
           */
          @java.lang.Override
          public boolean hasGENTEMP1() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional sint32 GEN_TEMP1 = 2;</code>
           * @return The gENTEMP1.
           */
          @java.lang.Override
          public int getGENTEMP1() {
            return gENTEMP1_;
          }
          /**
           * <code>optional sint32 GEN_TEMP1 = 2;</code>
           * @param value The gENTEMP1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENTEMP1(int value) {

            gENTEMP1_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional sint32 GEN_TEMP1 = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENTEMP1() {
            bitField0_ = (bitField0_ & ~0x00000002);
            gENTEMP1_ = 0;
            onChanged();
            return this;
          }

          private float gENVOLT1_ ;
          /**
           * <code>optional float GEN_VOLT1 = 3;</code>
           * @return Whether the gENVOLT1 field is set.
           */
          @java.lang.Override
          public boolean hasGENVOLT1() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float GEN_VOLT1 = 3;</code>
           * @return The gENVOLT1.
           */
          @java.lang.Override
          public float getGENVOLT1() {
            return gENVOLT1_;
          }
          /**
           * <code>optional float GEN_VOLT1 = 3;</code>
           * @param value The gENVOLT1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENVOLT1(float value) {

            gENVOLT1_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_VOLT1 = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENVOLT1() {
            bitField0_ = (bitField0_ & ~0x00000004);
            gENVOLT1_ = 0F;
            onChanged();
            return this;
          }

          private int gENRPM1_ ;
          /**
           * <code>optional uint32 GEN_RPM1 = 4;</code>
           * @return Whether the gENRPM1 field is set.
           */
          @java.lang.Override
          public boolean hasGENRPM1() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional uint32 GEN_RPM1 = 4;</code>
           * @return The gENRPM1.
           */
          @java.lang.Override
          public int getGENRPM1() {
            return gENRPM1_;
          }
          /**
           * <code>optional uint32 GEN_RPM1 = 4;</code>
           * @param value The gENRPM1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENRPM1(int value) {

            gENRPM1_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_RPM1 = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENRPM1() {
            bitField0_ = (bitField0_ & ~0x00000008);
            gENRPM1_ = 0;
            onChanged();
            return this;
          }

          private float gENUL11_ ;
          /**
           * <code>optional float GEN_UL1_1 = 5;</code>
           * @return Whether the gENUL11 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL11() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional float GEN_UL1_1 = 5;</code>
           * @return The gENUL11.
           */
          @java.lang.Override
          public float getGENUL11() {
            return gENUL11_;
          }
          /**
           * <code>optional float GEN_UL1_1 = 5;</code>
           * @param value The gENUL11 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL11(float value) {

            gENUL11_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL1_1 = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL11() {
            bitField0_ = (bitField0_ & ~0x00000010);
            gENUL11_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL21_ ;
          /**
           * <code>optional float GEN_UL2_1 = 6;</code>
           * @return Whether the gENUL21 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL21() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional float GEN_UL2_1 = 6;</code>
           * @return The gENUL21.
           */
          @java.lang.Override
          public float getGENUL21() {
            return gENUL21_;
          }
          /**
           * <code>optional float GEN_UL2_1 = 6;</code>
           * @param value The gENUL21 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL21(float value) {

            gENUL21_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL2_1 = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL21() {
            bitField0_ = (bitField0_ & ~0x00000020);
            gENUL21_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL31_ ;
          /**
           * <code>optional float GEN_UL3_1 = 7;</code>
           * @return Whether the gENUL31 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL31() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional float GEN_UL3_1 = 7;</code>
           * @return The gENUL31.
           */
          @java.lang.Override
          public float getGENUL31() {
            return gENUL31_;
          }
          /**
           * <code>optional float GEN_UL3_1 = 7;</code>
           * @param value The gENUL31 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL31(float value) {

            gENUL31_ = value;
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL3_1 = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL31() {
            bitField0_ = (bitField0_ & ~0x00000040);
            gENUL31_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL11_ ;
          /**
           * <code>optional float GEN_IL1_1 = 8;</code>
           * @return Whether the gENIL11 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL11() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional float GEN_IL1_1 = 8;</code>
           * @return The gENIL11.
           */
          @java.lang.Override
          public float getGENIL11() {
            return gENIL11_;
          }
          /**
           * <code>optional float GEN_IL1_1 = 8;</code>
           * @param value The gENIL11 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL11(float value) {

            gENIL11_ = value;
            bitField0_ |= 0x00000080;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL1_1 = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL11() {
            bitField0_ = (bitField0_ & ~0x00000080);
            gENIL11_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL21_ ;
          /**
           * <code>optional float GEN_IL2_1 = 9;</code>
           * @return Whether the gENIL21 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL21() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional float GEN_IL2_1 = 9;</code>
           * @return The gENIL21.
           */
          @java.lang.Override
          public float getGENIL21() {
            return gENIL21_;
          }
          /**
           * <code>optional float GEN_IL2_1 = 9;</code>
           * @param value The gENIL21 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL21(float value) {

            gENIL21_ = value;
            bitField0_ |= 0x00000100;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL2_1 = 9;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL21() {
            bitField0_ = (bitField0_ & ~0x00000100);
            gENIL21_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL31_ ;
          /**
           * <code>optional float GEN_IL3_1 = 10;</code>
           * @return Whether the gENIL31 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL31() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional float GEN_IL3_1 = 10;</code>
           * @return The gENIL31.
           */
          @java.lang.Override
          public float getGENIL31() {
            return gENIL31_;
          }
          /**
           * <code>optional float GEN_IL3_1 = 10;</code>
           * @param value The gENIL31 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL31(float value) {

            gENIL31_ = value;
            bitField0_ |= 0x00000200;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL3_1 = 10;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL31() {
            bitField0_ = (bitField0_ & ~0x00000200);
            gENIL31_ = 0F;
            onChanged();
            return this;
          }

          private int gENSTATUS1_ ;
          /**
           * <code>optional uint32 GEN_STATUS1 = 11;</code>
           * @return Whether the gENSTATUS1 field is set.
           */
          @java.lang.Override
          public boolean hasGENSTATUS1() {
            return ((bitField0_ & 0x00000400) != 0);
          }
          /**
           * <code>optional uint32 GEN_STATUS1 = 11;</code>
           * @return The gENSTATUS1.
           */
          @java.lang.Override
          public int getGENSTATUS1() {
            return gENSTATUS1_;
          }
          /**
           * <code>optional uint32 GEN_STATUS1 = 11;</code>
           * @param value The gENSTATUS1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENSTATUS1(int value) {

            gENSTATUS1_ = value;
            bitField0_ |= 0x00000400;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_STATUS1 = 11;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENSTATUS1() {
            bitField0_ = (bitField0_ & ~0x00000400);
            gENSTATUS1_ = 0;
            onChanged();
            return this;
          }

          private int gENHOURS1_ ;
          /**
           * <code>optional uint32 GEN_HOURS1 = 12;</code>
           * @return Whether the gENHOURS1 field is set.
           */
          @java.lang.Override
          public boolean hasGENHOURS1() {
            return ((bitField0_ & 0x00000800) != 0);
          }
          /**
           * <code>optional uint32 GEN_HOURS1 = 12;</code>
           * @return The gENHOURS1.
           */
          @java.lang.Override
          public int getGENHOURS1() {
            return gENHOURS1_;
          }
          /**
           * <code>optional uint32 GEN_HOURS1 = 12;</code>
           * @param value The gENHOURS1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENHOURS1(int value) {

            gENHOURS1_ = value;
            bitField0_ |= 0x00000800;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_HOURS1 = 12;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENHOURS1() {
            bitField0_ = (bitField0_ & ~0x00000800);
            gENHOURS1_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> gENALARM1_ = emptyList(com.google.protobuf.ByteString.class);
          private void ensureGENALARM1IsMutable() {
            if (!gENALARM1_.isModifiable()) {
              gENALARM1_ = makeMutableCopy(gENALARM1_);
            }
            bitField0_ |= 0x00001000;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @return A list containing the gENALARM1.
           */
          public java.util.List<com.google.protobuf.ByteString>
              getGENALARM1List() {
            gENALARM1_.makeImmutable();
            return gENALARM1_;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @return The count of gENALARM1.
           */
          public int getGENALARM1Count() {
            return gENALARM1_.size();
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @param index The index of the element to return.
           * @return The gENALARM1 at the given index.
           */
          public com.google.protobuf.ByteString getGENALARM1(int index) {
            return gENALARM1_.get(index);
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @param index The index to set the value at.
           * @param value The gENALARM1 to set.
           * @return This builder for chaining.
           */
          public Builder setGENALARM1(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureGENALARM1IsMutable();
            gENALARM1_.set(index, value);
            bitField0_ |= 0x00001000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @param value The gENALARM1 to add.
           * @return This builder for chaining.
           */
          public Builder addGENALARM1(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureGENALARM1IsMutable();
            gENALARM1_.add(value);
            bitField0_ |= 0x00001000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @param values The gENALARM1 to add.
           * @return This builder for chaining.
           */
          public Builder addAllGENALARM1(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureGENALARM1IsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gENALARM1_);
            bitField0_ |= 0x00001000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM1 = 13;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENALARM1() {
            gENALARM1_ = emptyList(com.google.protobuf.ByteString.class);
            bitField0_ = (bitField0_ & ~0x00001000);
            onChanged();
            return this;
          }

          private int gENOILPRESS2_ ;
          /**
           * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
           * @return Whether the gENOILPRESS2 field is set.
           */
          @java.lang.Override
          public boolean hasGENOILPRESS2() {
            return ((bitField0_ & 0x00002000) != 0);
          }
          /**
           * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
           * @return The gENOILPRESS2.
           */
          @java.lang.Override
          public int getGENOILPRESS2() {
            return gENOILPRESS2_;
          }
          /**
           * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
           * @param value The gENOILPRESS2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENOILPRESS2(int value) {

            gENOILPRESS2_ = value;
            bitField0_ |= 0x00002000;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_OILPRESS2 = 14;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENOILPRESS2() {
            bitField0_ = (bitField0_ & ~0x00002000);
            gENOILPRESS2_ = 0;
            onChanged();
            return this;
          }

          private int gENTEMP2_ ;
          /**
           * <code>optional sint32 GEN_TEMP2 = 15;</code>
           * @return Whether the gENTEMP2 field is set.
           */
          @java.lang.Override
          public boolean hasGENTEMP2() {
            return ((bitField0_ & 0x00004000) != 0);
          }
          /**
           * <code>optional sint32 GEN_TEMP2 = 15;</code>
           * @return The gENTEMP2.
           */
          @java.lang.Override
          public int getGENTEMP2() {
            return gENTEMP2_;
          }
          /**
           * <code>optional sint32 GEN_TEMP2 = 15;</code>
           * @param value The gENTEMP2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENTEMP2(int value) {

            gENTEMP2_ = value;
            bitField0_ |= 0x00004000;
            onChanged();
            return this;
          }
          /**
           * <code>optional sint32 GEN_TEMP2 = 15;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENTEMP2() {
            bitField0_ = (bitField0_ & ~0x00004000);
            gENTEMP2_ = 0;
            onChanged();
            return this;
          }

          private float gENVOLT2_ ;
          /**
           * <code>optional float GEN_VOLT2 = 16;</code>
           * @return Whether the gENVOLT2 field is set.
           */
          @java.lang.Override
          public boolean hasGENVOLT2() {
            return ((bitField0_ & 0x00008000) != 0);
          }
          /**
           * <code>optional float GEN_VOLT2 = 16;</code>
           * @return The gENVOLT2.
           */
          @java.lang.Override
          public float getGENVOLT2() {
            return gENVOLT2_;
          }
          /**
           * <code>optional float GEN_VOLT2 = 16;</code>
           * @param value The gENVOLT2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENVOLT2(float value) {

            gENVOLT2_ = value;
            bitField0_ |= 0x00008000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_VOLT2 = 16;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENVOLT2() {
            bitField0_ = (bitField0_ & ~0x00008000);
            gENVOLT2_ = 0F;
            onChanged();
            return this;
          }

          private int gENRPM2_ ;
          /**
           * <code>optional uint32 GEN_RPM2 = 17;</code>
           * @return Whether the gENRPM2 field is set.
           */
          @java.lang.Override
          public boolean hasGENRPM2() {
            return ((bitField0_ & 0x00010000) != 0);
          }
          /**
           * <code>optional uint32 GEN_RPM2 = 17;</code>
           * @return The gENRPM2.
           */
          @java.lang.Override
          public int getGENRPM2() {
            return gENRPM2_;
          }
          /**
           * <code>optional uint32 GEN_RPM2 = 17;</code>
           * @param value The gENRPM2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENRPM2(int value) {

            gENRPM2_ = value;
            bitField0_ |= 0x00010000;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_RPM2 = 17;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENRPM2() {
            bitField0_ = (bitField0_ & ~0x00010000);
            gENRPM2_ = 0;
            onChanged();
            return this;
          }

          private float gENUL12_ ;
          /**
           * <code>optional float GEN_UL1_2 = 18;</code>
           * @return Whether the gENUL12 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL12() {
            return ((bitField0_ & 0x00020000) != 0);
          }
          /**
           * <code>optional float GEN_UL1_2 = 18;</code>
           * @return The gENUL12.
           */
          @java.lang.Override
          public float getGENUL12() {
            return gENUL12_;
          }
          /**
           * <code>optional float GEN_UL1_2 = 18;</code>
           * @param value The gENUL12 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL12(float value) {

            gENUL12_ = value;
            bitField0_ |= 0x00020000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL1_2 = 18;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL12() {
            bitField0_ = (bitField0_ & ~0x00020000);
            gENUL12_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL22_ ;
          /**
           * <code>optional float GEN_UL2_2 = 19;</code>
           * @return Whether the gENUL22 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL22() {
            return ((bitField0_ & 0x00040000) != 0);
          }
          /**
           * <code>optional float GEN_UL2_2 = 19;</code>
           * @return The gENUL22.
           */
          @java.lang.Override
          public float getGENUL22() {
            return gENUL22_;
          }
          /**
           * <code>optional float GEN_UL2_2 = 19;</code>
           * @param value The gENUL22 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL22(float value) {

            gENUL22_ = value;
            bitField0_ |= 0x00040000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL2_2 = 19;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL22() {
            bitField0_ = (bitField0_ & ~0x00040000);
            gENUL22_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL32_ ;
          /**
           * <code>optional float GEN_UL3_2 = 20;</code>
           * @return Whether the gENUL32 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL32() {
            return ((bitField0_ & 0x00080000) != 0);
          }
          /**
           * <code>optional float GEN_UL3_2 = 20;</code>
           * @return The gENUL32.
           */
          @java.lang.Override
          public float getGENUL32() {
            return gENUL32_;
          }
          /**
           * <code>optional float GEN_UL3_2 = 20;</code>
           * @param value The gENUL32 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL32(float value) {

            gENUL32_ = value;
            bitField0_ |= 0x00080000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL3_2 = 20;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL32() {
            bitField0_ = (bitField0_ & ~0x00080000);
            gENUL32_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL12_ ;
          /**
           * <code>optional float GEN_IL1_2 = 21;</code>
           * @return Whether the gENIL12 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL12() {
            return ((bitField0_ & 0x00100000) != 0);
          }
          /**
           * <code>optional float GEN_IL1_2 = 21;</code>
           * @return The gENIL12.
           */
          @java.lang.Override
          public float getGENIL12() {
            return gENIL12_;
          }
          /**
           * <code>optional float GEN_IL1_2 = 21;</code>
           * @param value The gENIL12 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL12(float value) {

            gENIL12_ = value;
            bitField0_ |= 0x00100000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL1_2 = 21;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL12() {
            bitField0_ = (bitField0_ & ~0x00100000);
            gENIL12_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL22_ ;
          /**
           * <code>optional float GEN_IL2_2 = 22;</code>
           * @return Whether the gENIL22 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL22() {
            return ((bitField0_ & 0x00200000) != 0);
          }
          /**
           * <code>optional float GEN_IL2_2 = 22;</code>
           * @return The gENIL22.
           */
          @java.lang.Override
          public float getGENIL22() {
            return gENIL22_;
          }
          /**
           * <code>optional float GEN_IL2_2 = 22;</code>
           * @param value The gENIL22 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL22(float value) {

            gENIL22_ = value;
            bitField0_ |= 0x00200000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL2_2 = 22;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL22() {
            bitField0_ = (bitField0_ & ~0x00200000);
            gENIL22_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL32_ ;
          /**
           * <code>optional float GEN_IL3_2 = 23;</code>
           * @return Whether the gENIL32 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL32() {
            return ((bitField0_ & 0x00400000) != 0);
          }
          /**
           * <code>optional float GEN_IL3_2 = 23;</code>
           * @return The gENIL32.
           */
          @java.lang.Override
          public float getGENIL32() {
            return gENIL32_;
          }
          /**
           * <code>optional float GEN_IL3_2 = 23;</code>
           * @param value The gENIL32 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL32(float value) {

            gENIL32_ = value;
            bitField0_ |= 0x00400000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL3_2 = 23;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL32() {
            bitField0_ = (bitField0_ & ~0x00400000);
            gENIL32_ = 0F;
            onChanged();
            return this;
          }

          private int gENSTATUS2_ ;
          /**
           * <code>optional uint32 GEN_STATUS2 = 24;</code>
           * @return Whether the gENSTATUS2 field is set.
           */
          @java.lang.Override
          public boolean hasGENSTATUS2() {
            return ((bitField0_ & 0x00800000) != 0);
          }
          /**
           * <code>optional uint32 GEN_STATUS2 = 24;</code>
           * @return The gENSTATUS2.
           */
          @java.lang.Override
          public int getGENSTATUS2() {
            return gENSTATUS2_;
          }
          /**
           * <code>optional uint32 GEN_STATUS2 = 24;</code>
           * @param value The gENSTATUS2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENSTATUS2(int value) {

            gENSTATUS2_ = value;
            bitField0_ |= 0x00800000;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_STATUS2 = 24;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENSTATUS2() {
            bitField0_ = (bitField0_ & ~0x00800000);
            gENSTATUS2_ = 0;
            onChanged();
            return this;
          }

          private int gENHOURS2_ ;
          /**
           * <code>optional uint32 GEN_HOURS2 = 25;</code>
           * @return Whether the gENHOURS2 field is set.
           */
          @java.lang.Override
          public boolean hasGENHOURS2() {
            return ((bitField0_ & 0x01000000) != 0);
          }
          /**
           * <code>optional uint32 GEN_HOURS2 = 25;</code>
           * @return The gENHOURS2.
           */
          @java.lang.Override
          public int getGENHOURS2() {
            return gENHOURS2_;
          }
          /**
           * <code>optional uint32 GEN_HOURS2 = 25;</code>
           * @param value The gENHOURS2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENHOURS2(int value) {

            gENHOURS2_ = value;
            bitField0_ |= 0x01000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_HOURS2 = 25;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENHOURS2() {
            bitField0_ = (bitField0_ & ~0x01000000);
            gENHOURS2_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> gENALARM2_ = emptyList(com.google.protobuf.ByteString.class);
          private void ensureGENALARM2IsMutable() {
            if (!gENALARM2_.isModifiable()) {
              gENALARM2_ = makeMutableCopy(gENALARM2_);
            }
            bitField0_ |= 0x02000000;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @return A list containing the gENALARM2.
           */
          public java.util.List<com.google.protobuf.ByteString>
              getGENALARM2List() {
            gENALARM2_.makeImmutable();
            return gENALARM2_;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @return The count of gENALARM2.
           */
          public int getGENALARM2Count() {
            return gENALARM2_.size();
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @param index The index of the element to return.
           * @return The gENALARM2 at the given index.
           */
          public com.google.protobuf.ByteString getGENALARM2(int index) {
            return gENALARM2_.get(index);
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @param index The index to set the value at.
           * @param value The gENALARM2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENALARM2(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureGENALARM2IsMutable();
            gENALARM2_.set(index, value);
            bitField0_ |= 0x02000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @param value The gENALARM2 to add.
           * @return This builder for chaining.
           */
          public Builder addGENALARM2(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureGENALARM2IsMutable();
            gENALARM2_.add(value);
            bitField0_ |= 0x02000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @param values The gENALARM2 to add.
           * @return This builder for chaining.
           */
          public Builder addAllGENALARM2(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureGENALARM2IsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gENALARM2_);
            bitField0_ |= 0x02000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM2 = 26;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENALARM2() {
            gENALARM2_ = emptyList(com.google.protobuf.ByteString.class);
            bitField0_ = (bitField0_ & ~0x02000000);
            onChanged();
            return this;
          }

          private int gENOILPRESS3_ ;
          /**
           * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
           * @return Whether the gENOILPRESS3 field is set.
           */
          @java.lang.Override
          public boolean hasGENOILPRESS3() {
            return ((bitField0_ & 0x04000000) != 0);
          }
          /**
           * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
           * @return The gENOILPRESS3.
           */
          @java.lang.Override
          public int getGENOILPRESS3() {
            return gENOILPRESS3_;
          }
          /**
           * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
           * @param value The gENOILPRESS3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENOILPRESS3(int value) {

            gENOILPRESS3_ = value;
            bitField0_ |= 0x04000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_OILPRESS3 = 27;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENOILPRESS3() {
            bitField0_ = (bitField0_ & ~0x04000000);
            gENOILPRESS3_ = 0;
            onChanged();
            return this;
          }

          private int gENTEMP3_ ;
          /**
           * <code>optional sint32 GEN_TEMP3 = 28;</code>
           * @return Whether the gENTEMP3 field is set.
           */
          @java.lang.Override
          public boolean hasGENTEMP3() {
            return ((bitField0_ & 0x08000000) != 0);
          }
          /**
           * <code>optional sint32 GEN_TEMP3 = 28;</code>
           * @return The gENTEMP3.
           */
          @java.lang.Override
          public int getGENTEMP3() {
            return gENTEMP3_;
          }
          /**
           * <code>optional sint32 GEN_TEMP3 = 28;</code>
           * @param value The gENTEMP3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENTEMP3(int value) {

            gENTEMP3_ = value;
            bitField0_ |= 0x08000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional sint32 GEN_TEMP3 = 28;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENTEMP3() {
            bitField0_ = (bitField0_ & ~0x08000000);
            gENTEMP3_ = 0;
            onChanged();
            return this;
          }

          private float gENVOLT3_ ;
          /**
           * <code>optional float GEN_VOLT3 = 29;</code>
           * @return Whether the gENVOLT3 field is set.
           */
          @java.lang.Override
          public boolean hasGENVOLT3() {
            return ((bitField0_ & 0x10000000) != 0);
          }
          /**
           * <code>optional float GEN_VOLT3 = 29;</code>
           * @return The gENVOLT3.
           */
          @java.lang.Override
          public float getGENVOLT3() {
            return gENVOLT3_;
          }
          /**
           * <code>optional float GEN_VOLT3 = 29;</code>
           * @param value The gENVOLT3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENVOLT3(float value) {

            gENVOLT3_ = value;
            bitField0_ |= 0x10000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_VOLT3 = 29;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENVOLT3() {
            bitField0_ = (bitField0_ & ~0x10000000);
            gENVOLT3_ = 0F;
            onChanged();
            return this;
          }

          private int gENRPM3_ ;
          /**
           * <code>optional uint32 GEN_RPM3 = 30;</code>
           * @return Whether the gENRPM3 field is set.
           */
          @java.lang.Override
          public boolean hasGENRPM3() {
            return ((bitField0_ & 0x20000000) != 0);
          }
          /**
           * <code>optional uint32 GEN_RPM3 = 30;</code>
           * @return The gENRPM3.
           */
          @java.lang.Override
          public int getGENRPM3() {
            return gENRPM3_;
          }
          /**
           * <code>optional uint32 GEN_RPM3 = 30;</code>
           * @param value The gENRPM3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENRPM3(int value) {

            gENRPM3_ = value;
            bitField0_ |= 0x20000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_RPM3 = 30;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENRPM3() {
            bitField0_ = (bitField0_ & ~0x20000000);
            gENRPM3_ = 0;
            onChanged();
            return this;
          }

          private float gENUL13_ ;
          /**
           * <code>optional float GEN_UL1_3 = 31;</code>
           * @return Whether the gENUL13 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL13() {
            return ((bitField0_ & 0x40000000) != 0);
          }
          /**
           * <code>optional float GEN_UL1_3 = 31;</code>
           * @return The gENUL13.
           */
          @java.lang.Override
          public float getGENUL13() {
            return gENUL13_;
          }
          /**
           * <code>optional float GEN_UL1_3 = 31;</code>
           * @param value The gENUL13 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL13(float value) {

            gENUL13_ = value;
            bitField0_ |= 0x40000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL1_3 = 31;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL13() {
            bitField0_ = (bitField0_ & ~0x40000000);
            gENUL13_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL23_ ;
          /**
           * <code>optional float GEN_UL2_3 = 32;</code>
           * @return Whether the gENUL23 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL23() {
            return ((bitField0_ & 0x80000000) != 0);
          }
          /**
           * <code>optional float GEN_UL2_3 = 32;</code>
           * @return The gENUL23.
           */
          @java.lang.Override
          public float getGENUL23() {
            return gENUL23_;
          }
          /**
           * <code>optional float GEN_UL2_3 = 32;</code>
           * @param value The gENUL23 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL23(float value) {

            gENUL23_ = value;
            bitField0_ |= 0x80000000;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL2_3 = 32;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL23() {
            bitField0_ = (bitField0_ & ~0x80000000);
            gENUL23_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL33_ ;
          /**
           * <code>optional float GEN_UL3_3 = 33;</code>
           * @return Whether the gENUL33 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL33() {
            return ((bitField1_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float GEN_UL3_3 = 33;</code>
           * @return The gENUL33.
           */
          @java.lang.Override
          public float getGENUL33() {
            return gENUL33_;
          }
          /**
           * <code>optional float GEN_UL3_3 = 33;</code>
           * @param value The gENUL33 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL33(float value) {

            gENUL33_ = value;
            bitField1_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_UL3_3 = 33;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL33() {
            bitField1_ = (bitField1_ & ~0x00000001);
            gENUL33_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL13_ ;
          /**
           * <code>optional float GEN_IL1_3 = 34;</code>
           * @return Whether the gENIL13 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL13() {
            return ((bitField1_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float GEN_IL1_3 = 34;</code>
           * @return The gENIL13.
           */
          @java.lang.Override
          public float getGENIL13() {
            return gENIL13_;
          }
          /**
           * <code>optional float GEN_IL1_3 = 34;</code>
           * @param value The gENIL13 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL13(float value) {

            gENIL13_ = value;
            bitField1_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL1_3 = 34;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL13() {
            bitField1_ = (bitField1_ & ~0x00000002);
            gENIL13_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL23_ ;
          /**
           * <code>optional float GEN_IL2_3 = 35;</code>
           * @return Whether the gENIL23 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL23() {
            return ((bitField1_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float GEN_IL2_3 = 35;</code>
           * @return The gENIL23.
           */
          @java.lang.Override
          public float getGENIL23() {
            return gENIL23_;
          }
          /**
           * <code>optional float GEN_IL2_3 = 35;</code>
           * @param value The gENIL23 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL23(float value) {

            gENIL23_ = value;
            bitField1_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL2_3 = 35;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL23() {
            bitField1_ = (bitField1_ & ~0x00000004);
            gENIL23_ = 0F;
            onChanged();
            return this;
          }

          private float gENIL33_ ;
          /**
           * <code>optional float GEN_IL3_3 = 36;</code>
           * @return Whether the gENIL33 field is set.
           */
          @java.lang.Override
          public boolean hasGENIL33() {
            return ((bitField1_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float GEN_IL3_3 = 36;</code>
           * @return The gENIL33.
           */
          @java.lang.Override
          public float getGENIL33() {
            return gENIL33_;
          }
          /**
           * <code>optional float GEN_IL3_3 = 36;</code>
           * @param value The gENIL33 to set.
           * @return This builder for chaining.
           */
          public Builder setGENIL33(float value) {

            gENIL33_ = value;
            bitField1_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <code>optional float GEN_IL3_3 = 36;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIL33() {
            bitField1_ = (bitField1_ & ~0x00000008);
            gENIL33_ = 0F;
            onChanged();
            return this;
          }

          private int gENSTATUS3_ ;
          /**
           * <code>optional uint32 GEN_STATUS3 = 37;</code>
           * @return Whether the gENSTATUS3 field is set.
           */
          @java.lang.Override
          public boolean hasGENSTATUS3() {
            return ((bitField1_ & 0x00000010) != 0);
          }
          /**
           * <code>optional uint32 GEN_STATUS3 = 37;</code>
           * @return The gENSTATUS3.
           */
          @java.lang.Override
          public int getGENSTATUS3() {
            return gENSTATUS3_;
          }
          /**
           * <code>optional uint32 GEN_STATUS3 = 37;</code>
           * @param value The gENSTATUS3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENSTATUS3(int value) {

            gENSTATUS3_ = value;
            bitField1_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_STATUS3 = 37;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENSTATUS3() {
            bitField1_ = (bitField1_ & ~0x00000010);
            gENSTATUS3_ = 0;
            onChanged();
            return this;
          }

          private int gENHOURS3_ ;
          /**
           * <code>optional uint32 GEN_HOURS3 = 38;</code>
           * @return Whether the gENHOURS3 field is set.
           */
          @java.lang.Override
          public boolean hasGENHOURS3() {
            return ((bitField1_ & 0x00000020) != 0);
          }
          /**
           * <code>optional uint32 GEN_HOURS3 = 38;</code>
           * @return The gENHOURS3.
           */
          @java.lang.Override
          public int getGENHOURS3() {
            return gENHOURS3_;
          }
          /**
           * <code>optional uint32 GEN_HOURS3 = 38;</code>
           * @param value The gENHOURS3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENHOURS3(int value) {

            gENHOURS3_ = value;
            bitField1_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 GEN_HOURS3 = 38;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENHOURS3() {
            bitField1_ = (bitField1_ & ~0x00000020);
            gENHOURS3_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> gENALARM3_ = emptyList(com.google.protobuf.ByteString.class);
          private void ensureGENALARM3IsMutable() {
            if (!gENALARM3_.isModifiable()) {
              gENALARM3_ = makeMutableCopy(gENALARM3_);
            }
            bitField1_ |= 0x00000040;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @return A list containing the gENALARM3.
           */
          public java.util.List<com.google.protobuf.ByteString>
              getGENALARM3List() {
            gENALARM3_.makeImmutable();
            return gENALARM3_;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @return The count of gENALARM3.
           */
          public int getGENALARM3Count() {
            return gENALARM3_.size();
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @param index The index of the element to return.
           * @return The gENALARM3 at the given index.
           */
          public com.google.protobuf.ByteString getGENALARM3(int index) {
            return gENALARM3_.get(index);
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @param index The index to set the value at.
           * @param value The gENALARM3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENALARM3(
              int index, com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureGENALARM3IsMutable();
            gENALARM3_.set(index, value);
            bitField1_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @param value The gENALARM3 to add.
           * @return This builder for chaining.
           */
          public Builder addGENALARM3(com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            ensureGENALARM3IsMutable();
            gENALARM3_.add(value);
            bitField1_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @param values The gENALARM3 to add.
           * @return This builder for chaining.
           */
          public Builder addAllGENALARM3(
              java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureGENALARM3IsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, gENALARM3_);
            bitField1_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <pre>
           *[28]
           * </pre>
           *
           * <code>repeated bytes GEN_ALARM3 = 39;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENALARM3() {
            gENALARM3_ = emptyList(com.google.protobuf.ByteString.class);
            bitField1_ = (bitField1_ & ~0x00000040);
            onChanged();
            return this;
          }

          private float gENUC_ ;
          /**
           * <pre>
           * величина напряжения зарядного генератора 
           * </pre>
           *
           * <code>optional float GEN_UC = 40;</code>
           * @return Whether the gENUC field is set.
           */
          @java.lang.Override
          public boolean hasGENUC() {
            return ((bitField1_ & 0x00000080) != 0);
          }
          /**
           * <pre>
           * величина напряжения зарядного генератора 
           * </pre>
           *
           * <code>optional float GEN_UC = 40;</code>
           * @return The gENUC.
           */
          @java.lang.Override
          public float getGENUC() {
            return gENUC_;
          }
          /**
           * <pre>
           * величина напряжения зарядного генератора 
           * </pre>
           *
           * <code>optional float GEN_UC = 40;</code>
           * @param value The gENUC to set.
           * @return This builder for chaining.
           */
          public Builder setGENUC(float value) {

            gENUC_ = value;
            bitField1_ |= 0x00000080;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * величина напряжения зарядного генератора 
           * </pre>
           *
           * <code>optional float GEN_UC = 40;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUC() {
            bitField1_ = (bitField1_ & ~0x00000080);
            gENUC_ = 0F;
            onChanged();
            return this;
          }

          private int gENIC_ ;
          /**
           * <pre>
           * ток заряда стартерных АКБ 
           * </pre>
           *
           * <code>optional uint32 GEN_IC = 41;</code>
           * @return Whether the gENIC field is set.
           */
          @java.lang.Override
          public boolean hasGENIC() {
            return ((bitField1_ & 0x00000100) != 0);
          }
          /**
           * <pre>
           * ток заряда стартерных АКБ 
           * </pre>
           *
           * <code>optional uint32 GEN_IC = 41;</code>
           * @return The gENIC.
           */
          @java.lang.Override
          public int getGENIC() {
            return gENIC_;
          }
          /**
           * <pre>
           * ток заряда стартерных АКБ 
           * </pre>
           *
           * <code>optional uint32 GEN_IC = 41;</code>
           * @param value The gENIC to set.
           * @return This builder for chaining.
           */
          public Builder setGENIC(int value) {

            gENIC_ = value;
            bitField1_ |= 0x00000100;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * ток заряда стартерных АКБ 
           * </pre>
           *
           * <code>optional uint32 GEN_IC = 41;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENIC() {
            bitField1_ = (bitField1_ & ~0x00000100);
            gENIC_ = 0;
            onChanged();
            return this;
          }

          private float gENFREQ_ ;
          /**
           * <pre>
           * частота выдаваемого напряжения 
           * </pre>
           *
           * <code>optional float GEN_FREQ = 42;</code>
           * @return Whether the gENFREQ field is set.
           */
          @java.lang.Override
          public boolean hasGENFREQ() {
            return ((bitField1_ & 0x00000200) != 0);
          }
          /**
           * <pre>
           * частота выдаваемого напряжения 
           * </pre>
           *
           * <code>optional float GEN_FREQ = 42;</code>
           * @return The gENFREQ.
           */
          @java.lang.Override
          public float getGENFREQ() {
            return gENFREQ_;
          }
          /**
           * <pre>
           * частота выдаваемого напряжения 
           * </pre>
           *
           * <code>optional float GEN_FREQ = 42;</code>
           * @param value The gENFREQ to set.
           * @return This builder for chaining.
           */
          public Builder setGENFREQ(float value) {

            gENFREQ_ = value;
            bitField1_ |= 0x00000200;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * частота выдаваемого напряжения 
           * </pre>
           *
           * <code>optional float GEN_FREQ = 42;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENFREQ() {
            bitField1_ = (bitField1_ & ~0x00000200);
            gENFREQ_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL1L2_ ;
          /**
           * <pre>
           * напряжения линейные 
           * </pre>
           *
           * <code>optional float GEN_UL1L2 = 43;</code>
           * @return Whether the gENUL1L2 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL1L2() {
            return ((bitField1_ & 0x00000400) != 0);
          }
          /**
           * <pre>
           * напряжения линейные 
           * </pre>
           *
           * <code>optional float GEN_UL1L2 = 43;</code>
           * @return The gENUL1L2.
           */
          @java.lang.Override
          public float getGENUL1L2() {
            return gENUL1L2_;
          }
          /**
           * <pre>
           * напряжения линейные 
           * </pre>
           *
           * <code>optional float GEN_UL1L2 = 43;</code>
           * @param value The gENUL1L2 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL1L2(float value) {

            gENUL1L2_ = value;
            bitField1_ |= 0x00000400;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * напряжения линейные 
           * </pre>
           *
           * <code>optional float GEN_UL1L2 = 43;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL1L2() {
            bitField1_ = (bitField1_ & ~0x00000400);
            gENUL1L2_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL2L3_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL2L3 = 44;</code>
           * @return Whether the gENUL2L3 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL2L3() {
            return ((bitField1_ & 0x00000800) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL2L3 = 44;</code>
           * @return The gENUL2L3.
           */
          @java.lang.Override
          public float getGENUL2L3() {
            return gENUL2L3_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL2L3 = 44;</code>
           * @param value The gENUL2L3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL2L3(float value) {

            gENUL2L3_ = value;
            bitField1_ |= 0x00000800;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL2L3 = 44;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL2L3() {
            bitField1_ = (bitField1_ & ~0x00000800);
            gENUL2L3_ = 0F;
            onChanged();
            return this;
          }

          private float gENUL1L3_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL1L3 = 45;</code>
           * @return Whether the gENUL1L3 field is set.
           */
          @java.lang.Override
          public boolean hasGENUL1L3() {
            return ((bitField1_ & 0x00001000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL1L3 = 45;</code>
           * @return The gENUL1L3.
           */
          @java.lang.Override
          public float getGENUL1L3() {
            return gENUL1L3_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL1L3 = 45;</code>
           * @param value The gENUL1L3 to set.
           * @return This builder for chaining.
           */
          public Builder setGENUL1L3(float value) {

            gENUL1L3_ = value;
            bitField1_ |= 0x00001000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional float GEN_UL1L3 = 45;</code>
           * @return This builder for chaining.
           */
          public Builder clearGENUL1L3() {
            bitField1_ = (bitField1_ & ~0x00001000);
            gENUL1L3_ = 0F;
            onChanged();
            return this;
          }

          private int pOWACTL1_ ;
          /**
           * <pre>
           * активная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L1 = 46;</code>
           * @return Whether the pOWACTL1 field is set.
           */
          @java.lang.Override
          public boolean hasPOWACTL1() {
            return ((bitField1_ & 0x00002000) != 0);
          }
          /**
           * <pre>
           * активная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L1 = 46;</code>
           * @return The pOWACTL1.
           */
          @java.lang.Override
          public int getPOWACTL1() {
            return pOWACTL1_;
          }
          /**
           * <pre>
           * активная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L1 = 46;</code>
           * @param value The pOWACTL1 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWACTL1(int value) {

            pOWACTL1_ = value;
            bitField1_ |= 0x00002000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * активная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L1 = 46;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWACTL1() {
            bitField1_ = (bitField1_ & ~0x00002000);
            pOWACTL1_ = 0;
            onChanged();
            return this;
          }

          private int pOWACTL2_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L2 = 47;</code>
           * @return Whether the pOWACTL2 field is set.
           */
          @java.lang.Override
          public boolean hasPOWACTL2() {
            return ((bitField1_ & 0x00004000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L2 = 47;</code>
           * @return The pOWACTL2.
           */
          @java.lang.Override
          public int getPOWACTL2() {
            return pOWACTL2_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L2 = 47;</code>
           * @param value The pOWACTL2 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWACTL2(int value) {

            pOWACTL2_ = value;
            bitField1_ |= 0x00004000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L2 = 47;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWACTL2() {
            bitField1_ = (bitField1_ & ~0x00004000);
            pOWACTL2_ = 0;
            onChanged();
            return this;
          }

          private int pOWACTL3_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L3 = 48;</code>
           * @return Whether the pOWACTL3 field is set.
           */
          @java.lang.Override
          public boolean hasPOWACTL3() {
            return ((bitField1_ & 0x00008000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L3 = 48;</code>
           * @return The pOWACTL3.
           */
          @java.lang.Override
          public int getPOWACTL3() {
            return pOWACTL3_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L3 = 48;</code>
           * @param value The pOWACTL3 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWACTL3(int value) {

            pOWACTL3_ = value;
            bitField1_ |= 0x00008000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_ACT_L3 = 48;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWACTL3() {
            bitField1_ = (bitField1_ & ~0x00008000);
            pOWACTL3_ = 0;
            onChanged();
            return this;
          }

          private int pOWFULLL1_ ;
          /**
           * <pre>
           * полная мощность
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L1 = 49;</code>
           * @return Whether the pOWFULLL1 field is set.
           */
          @java.lang.Override
          public boolean hasPOWFULLL1() {
            return ((bitField1_ & 0x00010000) != 0);
          }
          /**
           * <pre>
           * полная мощность
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L1 = 49;</code>
           * @return The pOWFULLL1.
           */
          @java.lang.Override
          public int getPOWFULLL1() {
            return pOWFULLL1_;
          }
          /**
           * <pre>
           * полная мощность
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L1 = 49;</code>
           * @param value The pOWFULLL1 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWFULLL1(int value) {

            pOWFULLL1_ = value;
            bitField1_ |= 0x00010000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * полная мощность
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L1 = 49;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWFULLL1() {
            bitField1_ = (bitField1_ & ~0x00010000);
            pOWFULLL1_ = 0;
            onChanged();
            return this;
          }

          private int pOWFULLL2_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L2 = 50;</code>
           * @return Whether the pOWFULLL2 field is set.
           */
          @java.lang.Override
          public boolean hasPOWFULLL2() {
            return ((bitField1_ & 0x00020000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L2 = 50;</code>
           * @return The pOWFULLL2.
           */
          @java.lang.Override
          public int getPOWFULLL2() {
            return pOWFULLL2_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L2 = 50;</code>
           * @param value The pOWFULLL2 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWFULLL2(int value) {

            pOWFULLL2_ = value;
            bitField1_ |= 0x00020000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L2 = 50;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWFULLL2() {
            bitField1_ = (bitField1_ & ~0x00020000);
            pOWFULLL2_ = 0;
            onChanged();
            return this;
          }

          private int pOWFULLL3_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L3 = 51;</code>
           * @return Whether the pOWFULLL3 field is set.
           */
          @java.lang.Override
          public boolean hasPOWFULLL3() {
            return ((bitField1_ & 0x00040000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L3 = 51;</code>
           * @return The pOWFULLL3.
           */
          @java.lang.Override
          public int getPOWFULLL3() {
            return pOWFULLL3_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L3 = 51;</code>
           * @param value The pOWFULLL3 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWFULLL3(int value) {

            pOWFULLL3_ = value;
            bitField1_ |= 0x00040000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_FULL_L3 = 51;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWFULLL3() {
            bitField1_ = (bitField1_ & ~0x00040000);
            pOWFULLL3_ = 0;
            onChanged();
            return this;
          }

          private int pOWREACTL1_ ;
          /**
           * <pre>
           * реактивная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L1 = 52;</code>
           * @return Whether the pOWREACTL1 field is set.
           */
          @java.lang.Override
          public boolean hasPOWREACTL1() {
            return ((bitField1_ & 0x00080000) != 0);
          }
          /**
           * <pre>
           * реактивная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L1 = 52;</code>
           * @return The pOWREACTL1.
           */
          @java.lang.Override
          public int getPOWREACTL1() {
            return pOWREACTL1_;
          }
          /**
           * <pre>
           * реактивная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L1 = 52;</code>
           * @param value The pOWREACTL1 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWREACTL1(int value) {

            pOWREACTL1_ = value;
            bitField1_ |= 0x00080000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * реактивная мощность 
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L1 = 52;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWREACTL1() {
            bitField1_ = (bitField1_ & ~0x00080000);
            pOWREACTL1_ = 0;
            onChanged();
            return this;
          }

          private int pOWREACTL2_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L2 = 53;</code>
           * @return Whether the pOWREACTL2 field is set.
           */
          @java.lang.Override
          public boolean hasPOWREACTL2() {
            return ((bitField1_ & 0x00100000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L2 = 53;</code>
           * @return The pOWREACTL2.
           */
          @java.lang.Override
          public int getPOWREACTL2() {
            return pOWREACTL2_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L2 = 53;</code>
           * @param value The pOWREACTL2 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWREACTL2(int value) {

            pOWREACTL2_ = value;
            bitField1_ |= 0x00100000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L2 = 53;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWREACTL2() {
            bitField1_ = (bitField1_ & ~0x00100000);
            pOWREACTL2_ = 0;
            onChanged();
            return this;
          }

          private int pOWREACTL3_ ;
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L3 = 54;</code>
           * @return Whether the pOWREACTL3 field is set.
           */
          @java.lang.Override
          public boolean hasPOWREACTL3() {
            return ((bitField1_ & 0x00200000) != 0);
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L3 = 54;</code>
           * @return The pOWREACTL3.
           */
          @java.lang.Override
          public int getPOWREACTL3() {
            return pOWREACTL3_;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L3 = 54;</code>
           * @param value The pOWREACTL3 to set.
           * @return This builder for chaining.
           */
          public Builder setPOWREACTL3(int value) {

            pOWREACTL3_ = value;
            bitField1_ |= 0x00200000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * --
           * </pre>
           *
           * <code>optional uint32 POW_REACT_L3 = 54;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWREACTL3() {
            bitField1_ = (bitField1_ & ~0x00200000);
            pOWREACTL3_ = 0;
            onChanged();
            return this;
          }

          private float pOWKOEF_ ;
          /**
           * <pre>
           * коэффициент мощности
           * </pre>
           *
           * <code>optional float POW_KOEF = 55;</code>
           * @return Whether the pOWKOEF field is set.
           */
          @java.lang.Override
          public boolean hasPOWKOEF() {
            return ((bitField1_ & 0x00400000) != 0);
          }
          /**
           * <pre>
           * коэффициент мощности
           * </pre>
           *
           * <code>optional float POW_KOEF = 55;</code>
           * @return The pOWKOEF.
           */
          @java.lang.Override
          public float getPOWKOEF() {
            return pOWKOEF_;
          }
          /**
           * <pre>
           * коэффициент мощности
           * </pre>
           *
           * <code>optional float POW_KOEF = 55;</code>
           * @param value The pOWKOEF to set.
           * @return This builder for chaining.
           */
          public Builder setPOWKOEF(float value) {

            pOWKOEF_ = value;
            bitField1_ |= 0x00400000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * коэффициент мощности
           * </pre>
           *
           * <code>optional float POW_KOEF = 55;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWKOEF() {
            bitField1_ = (bitField1_ & ~0x00400000);
            pOWKOEF_ = 0F;
            onChanged();
            return this;
          }

          private int pOWGENTOTAL_ ;
          /**
           * <pre>
           * общая выработка электроэнергии 
           * </pre>
           *
           * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
           * @return Whether the pOWGENTOTAL field is set.
           */
          @java.lang.Override
          public boolean hasPOWGENTOTAL() {
            return ((bitField1_ & 0x00800000) != 0);
          }
          /**
           * <pre>
           * общая выработка электроэнергии 
           * </pre>
           *
           * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
           * @return The pOWGENTOTAL.
           */
          @java.lang.Override
          public int getPOWGENTOTAL() {
            return pOWGENTOTAL_;
          }
          /**
           * <pre>
           * общая выработка электроэнергии 
           * </pre>
           *
           * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
           * @param value The pOWGENTOTAL to set.
           * @return This builder for chaining.
           */
          public Builder setPOWGENTOTAL(int value) {

            pOWGENTOTAL_ = value;
            bitField1_ |= 0x00800000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * общая выработка электроэнергии 
           * </pre>
           *
           * <code>optional uint32 POW_GEN_TOTAL = 56;</code>
           * @return This builder for chaining.
           */
          public Builder clearPOWGENTOTAL() {
            bitField1_ = (bitField1_ & ~0x00800000);
            pOWGENTOTAL_ = 0;
            onChanged();
            return this;
          }

          private int fUELLEVEL_ ;
          /**
           * <pre>
           * текущий объём топлива
           * </pre>
           *
           * <code>optional uint32 FUEL_LEVEL = 57;</code>
           * @return Whether the fUELLEVEL field is set.
           */
          @java.lang.Override
          public boolean hasFUELLEVEL() {
            return ((bitField1_ & 0x01000000) != 0);
          }
          /**
           * <pre>
           * текущий объём топлива
           * </pre>
           *
           * <code>optional uint32 FUEL_LEVEL = 57;</code>
           * @return The fUELLEVEL.
           */
          @java.lang.Override
          public int getFUELLEVEL() {
            return fUELLEVEL_;
          }
          /**
           * <pre>
           * текущий объём топлива
           * </pre>
           *
           * <code>optional uint32 FUEL_LEVEL = 57;</code>
           * @param value The fUELLEVEL to set.
           * @return This builder for chaining.
           */
          public Builder setFUELLEVEL(int value) {

            fUELLEVEL_ = value;
            bitField1_ |= 0x01000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * текущий объём топлива
           * </pre>
           *
           * <code>optional uint32 FUEL_LEVEL = 57;</code>
           * @return This builder for chaining.
           */
          public Builder clearFUELLEVEL() {
            bitField1_ = (bitField1_ & ~0x01000000);
            fUELLEVEL_ = 0;
            onChanged();
            return this;
          }

          private int sMSREGS0_ ;
          /**
           * <pre>
           * состояние регистра состояния 0 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_0 = 60;</code>
           * @return Whether the sMSREGS0 field is set.
           */
          @java.lang.Override
          public boolean hasSMSREGS0() {
            return ((bitField1_ & 0x02000000) != 0);
          }
          /**
           * <pre>
           * состояние регистра состояния 0 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_0 = 60;</code>
           * @return The sMSREGS0.
           */
          @java.lang.Override
          public int getSMSREGS0() {
            return sMSREGS0_;
          }
          /**
           * <pre>
           * состояние регистра состояния 0 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_0 = 60;</code>
           * @param value The sMSREGS0 to set.
           * @return This builder for chaining.
           */
          public Builder setSMSREGS0(int value) {

            sMSREGS0_ = value;
            bitField1_ |= 0x02000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * состояние регистра состояния 0 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_0 = 60;</code>
           * @return This builder for chaining.
           */
          public Builder clearSMSREGS0() {
            bitField1_ = (bitField1_ & ~0x02000000);
            sMSREGS0_ = 0;
            onChanged();
            return this;
          }

          private int sMSREGS1_ ;
          /**
           * <pre>
           * состояние регистра состояния 1 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_1 = 61;</code>
           * @return Whether the sMSREGS1 field is set.
           */
          @java.lang.Override
          public boolean hasSMSREGS1() {
            return ((bitField1_ & 0x04000000) != 0);
          }
          /**
           * <pre>
           * состояние регистра состояния 1 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_1 = 61;</code>
           * @return The sMSREGS1.
           */
          @java.lang.Override
          public int getSMSREGS1() {
            return sMSREGS1_;
          }
          /**
           * <pre>
           * состояние регистра состояния 1 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_1 = 61;</code>
           * @param value The sMSREGS1 to set.
           * @return This builder for chaining.
           */
          public Builder setSMSREGS1(int value) {

            sMSREGS1_ = value;
            bitField1_ |= 0x04000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * состояние регистра состояния 1 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_1 = 61;</code>
           * @return This builder for chaining.
           */
          public Builder clearSMSREGS1() {
            bitField1_ = (bitField1_ & ~0x04000000);
            sMSREGS1_ = 0;
            onChanged();
            return this;
          }

          private int sMSREGS2_ ;
          /**
           * <pre>
           * состояние регистра состояния 2 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_2 = 62;</code>
           * @return Whether the sMSREGS2 field is set.
           */
          @java.lang.Override
          public boolean hasSMSREGS2() {
            return ((bitField1_ & 0x08000000) != 0);
          }
          /**
           * <pre>
           * состояние регистра состояния 2 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_2 = 62;</code>
           * @return The sMSREGS2.
           */
          @java.lang.Override
          public int getSMSREGS2() {
            return sMSREGS2_;
          }
          /**
           * <pre>
           * состояние регистра состояния 2 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_2 = 62;</code>
           * @param value The sMSREGS2 to set.
           * @return This builder for chaining.
           */
          public Builder setSMSREGS2(int value) {

            sMSREGS2_ = value;
            bitField1_ |= 0x08000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * состояние регистра состояния 2 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_2 = 62;</code>
           * @return This builder for chaining.
           */
          public Builder clearSMSREGS2() {
            bitField1_ = (bitField1_ & ~0x08000000);
            sMSREGS2_ = 0;
            onChanged();
            return this;
          }

          private int sMSREGS3_ ;
          /**
           * <pre>
           * состояние регистра состояния 3 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_3 = 63;</code>
           * @return Whether the sMSREGS3 field is set.
           */
          @java.lang.Override
          public boolean hasSMSREGS3() {
            return ((bitField1_ & 0x10000000) != 0);
          }
          /**
           * <pre>
           * состояние регистра состояния 3 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_3 = 63;</code>
           * @return The sMSREGS3.
           */
          @java.lang.Override
          public int getSMSREGS3() {
            return sMSREGS3_;
          }
          /**
           * <pre>
           * состояние регистра состояния 3 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_3 = 63;</code>
           * @param value The sMSREGS3 to set.
           * @return This builder for chaining.
           */
          public Builder setSMSREGS3(int value) {

            sMSREGS3_ = value;
            bitField1_ |= 0x10000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * состояние регистра состояния 3 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_3 = 63;</code>
           * @return This builder for chaining.
           */
          public Builder clearSMSREGS3() {
            bitField1_ = (bitField1_ & ~0x10000000);
            sMSREGS3_ = 0;
            onChanged();
            return this;
          }

          private int sMSREGS4_ ;
          /**
           * <pre>
           * состояние регистра состояния 4 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_4 = 64;</code>
           * @return Whether the sMSREGS4 field is set.
           */
          @java.lang.Override
          public boolean hasSMSREGS4() {
            return ((bitField1_ & 0x20000000) != 0);
          }
          /**
           * <pre>
           * состояние регистра состояния 4 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_4 = 64;</code>
           * @return The sMSREGS4.
           */
          @java.lang.Override
          public int getSMSREGS4() {
            return sMSREGS4_;
          }
          /**
           * <pre>
           * состояние регистра состояния 4 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_4 = 64;</code>
           * @param value The sMSREGS4 to set.
           * @return This builder for chaining.
           */
          public Builder setSMSREGS4(int value) {

            sMSREGS4_ = value;
            bitField1_ |= 0x20000000;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * состояние регистра состояния 4 для SMS-оповещений (для отладки)
           * </pre>
           *
           * <code>optional uint32 SMS_REGS_4 = 64;</code>
           * @return This builder for chaining.
           */
          public Builder clearSMSREGS4() {
            bitField1_ = (bitField1_ & ~0x20000000);
            sMSREGS4_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.GenComm)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<GenComm>
            PARSER = new com.google.protobuf.AbstractParser<GenComm>() {
          @java.lang.Override
          public GenComm parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<GenComm> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GenComm> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface FuelSensorModbusOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float FuelLevel = 1;</code>
         * @return Whether the fuelLevel field is set.
         */
        boolean hasFuelLevel();
        /**
         * <code>optional float FuelLevel = 1;</code>
         * @return The fuelLevel.
         */
        float getFuelLevel();

        /**
         * <code>optional float MedianLevel = 2;</code>
         * @return Whether the medianLevel field is set.
         */
        boolean hasMedianLevel();
        /**
         * <code>optional float MedianLevel = 2;</code>
         * @return The medianLevel.
         */
        float getMedianLevel();

        /**
         * <code>optional uint32 LevelPercent = 3;</code>
         * @return Whether the levelPercent field is set.
         */
        boolean hasLevelPercent();
        /**
         * <code>optional uint32 LevelPercent = 3;</code>
         * @return The levelPercent.
         */
        int getLevelPercent();

        /**
         * <code>optional float FuelVolume = 4;</code>
         * @return Whether the fuelVolume field is set.
         */
        boolean hasFuelVolume();
        /**
         * <code>optional float FuelVolume = 4;</code>
         * @return The fuelVolume.
         */
        float getFuelVolume();

        /**
         * <code>optional sint32 FuelTemp = 5;</code>
         * @return Whether the fuelTemp field is set.
         */
        boolean hasFuelTemp();
        /**
         * <code>optional sint32 FuelTemp = 5;</code>
         * @return The fuelTemp.
         */
        int getFuelTemp();

        /**
         * <code>optional float FuelWeight = 6;</code>
         * @return Whether the fuelWeight field is set.
         */
        boolean hasFuelWeight();
        /**
         * <code>optional float FuelWeight = 6;</code>
         * @return The fuelWeight.
         */
        float getFuelWeight();

        /**
         * <code>optional float FuelDensity = 7;</code>
         * @return Whether the fuelDensity field is set.
         */
        boolean hasFuelDensity();
        /**
         * <code>optional float FuelDensity = 7;</code>
         * @return The fuelDensity.
         */
        float getFuelDensity();

        /**
         * <code>optional sint32 VaporTemp = 8;</code>
         * @return Whether the vaporTemp field is set.
         */
        boolean hasVaporTemp();
        /**
         * <code>optional sint32 VaporTemp = 8;</code>
         * @return The vaporTemp.
         */
        int getVaporTemp();

        /**
         * <code>optional float VaporWeight = 9;</code>
         * @return Whether the vaporWeight field is set.
         */
        boolean hasVaporWeight();
        /**
         * <code>optional float VaporWeight = 9;</code>
         * @return The vaporWeight.
         */
        float getVaporWeight();

        /**
         * <code>optional float LiquidWeight = 10;</code>
         * @return Whether the liquidWeight field is set.
         */
        boolean hasLiquidWeight();
        /**
         * <code>optional float LiquidWeight = 10;</code>
         * @return The liquidWeight.
         */
        float getLiquidWeight();

        /**
         * <code>repeated sint32 PointTemp = 11;</code>
         * @return A list containing the pointTemp.
         */
        java.util.List<java.lang.Integer> getPointTempList();
        /**
         * <code>repeated sint32 PointTemp = 11;</code>
         * @return The count of pointTemp.
         */
        int getPointTempCount();
        /**
         * <code>repeated sint32 PointTemp = 11;</code>
         * @param index The index of the element to return.
         * @return The pointTemp at the given index.
         */
        int getPointTemp(int index);
      }
      /**
       * <pre>
       * Данные о сторонних датчиках уровня топлива
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus}
       */
      public static final class FuelSensorModbus extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus)
          FuelSensorModbusOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use FuelSensorModbus.newBuilder() to construct.
        private FuelSensorModbus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private FuelSensorModbus() {
          pointTemp_ = emptyIntList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new FuelSensorModbus();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder.class);
        }

        private int bitField0_;
        public static final int FUELLEVEL_FIELD_NUMBER = 1;
        private float fuelLevel_ = 0F;
        /**
         * <code>optional float FuelLevel = 1;</code>
         * @return Whether the fuelLevel field is set.
         */
        @java.lang.Override
        public boolean hasFuelLevel() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float FuelLevel = 1;</code>
         * @return The fuelLevel.
         */
        @java.lang.Override
        public float getFuelLevel() {
          return fuelLevel_;
        }

        public static final int MEDIANLEVEL_FIELD_NUMBER = 2;
        private float medianLevel_ = 0F;
        /**
         * <code>optional float MedianLevel = 2;</code>
         * @return Whether the medianLevel field is set.
         */
        @java.lang.Override
        public boolean hasMedianLevel() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float MedianLevel = 2;</code>
         * @return The medianLevel.
         */
        @java.lang.Override
        public float getMedianLevel() {
          return medianLevel_;
        }

        public static final int LEVELPERCENT_FIELD_NUMBER = 3;
        private int levelPercent_ = 0;
        /**
         * <code>optional uint32 LevelPercent = 3;</code>
         * @return Whether the levelPercent field is set.
         */
        @java.lang.Override
        public boolean hasLevelPercent() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 LevelPercent = 3;</code>
         * @return The levelPercent.
         */
        @java.lang.Override
        public int getLevelPercent() {
          return levelPercent_;
        }

        public static final int FUELVOLUME_FIELD_NUMBER = 4;
        private float fuelVolume_ = 0F;
        /**
         * <code>optional float FuelVolume = 4;</code>
         * @return Whether the fuelVolume field is set.
         */
        @java.lang.Override
        public boolean hasFuelVolume() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional float FuelVolume = 4;</code>
         * @return The fuelVolume.
         */
        @java.lang.Override
        public float getFuelVolume() {
          return fuelVolume_;
        }

        public static final int FUELTEMP_FIELD_NUMBER = 5;
        private int fuelTemp_ = 0;
        /**
         * <code>optional sint32 FuelTemp = 5;</code>
         * @return Whether the fuelTemp field is set.
         */
        @java.lang.Override
        public boolean hasFuelTemp() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional sint32 FuelTemp = 5;</code>
         * @return The fuelTemp.
         */
        @java.lang.Override
        public int getFuelTemp() {
          return fuelTemp_;
        }

        public static final int FUELWEIGHT_FIELD_NUMBER = 6;
        private float fuelWeight_ = 0F;
        /**
         * <code>optional float FuelWeight = 6;</code>
         * @return Whether the fuelWeight field is set.
         */
        @java.lang.Override
        public boolean hasFuelWeight() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional float FuelWeight = 6;</code>
         * @return The fuelWeight.
         */
        @java.lang.Override
        public float getFuelWeight() {
          return fuelWeight_;
        }

        public static final int FUELDENSITY_FIELD_NUMBER = 7;
        private float fuelDensity_ = 0F;
        /**
         * <code>optional float FuelDensity = 7;</code>
         * @return Whether the fuelDensity field is set.
         */
        @java.lang.Override
        public boolean hasFuelDensity() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional float FuelDensity = 7;</code>
         * @return The fuelDensity.
         */
        @java.lang.Override
        public float getFuelDensity() {
          return fuelDensity_;
        }

        public static final int VAPORTEMP_FIELD_NUMBER = 8;
        private int vaporTemp_ = 0;
        /**
         * <code>optional sint32 VaporTemp = 8;</code>
         * @return Whether the vaporTemp field is set.
         */
        @java.lang.Override
        public boolean hasVaporTemp() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional sint32 VaporTemp = 8;</code>
         * @return The vaporTemp.
         */
        @java.lang.Override
        public int getVaporTemp() {
          return vaporTemp_;
        }

        public static final int VAPORWEIGHT_FIELD_NUMBER = 9;
        private float vaporWeight_ = 0F;
        /**
         * <code>optional float VaporWeight = 9;</code>
         * @return Whether the vaporWeight field is set.
         */
        @java.lang.Override
        public boolean hasVaporWeight() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional float VaporWeight = 9;</code>
         * @return The vaporWeight.
         */
        @java.lang.Override
        public float getVaporWeight() {
          return vaporWeight_;
        }

        public static final int LIQUIDWEIGHT_FIELD_NUMBER = 10;
        private float liquidWeight_ = 0F;
        /**
         * <code>optional float LiquidWeight = 10;</code>
         * @return Whether the liquidWeight field is set.
         */
        @java.lang.Override
        public boolean hasLiquidWeight() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional float LiquidWeight = 10;</code>
         * @return The liquidWeight.
         */
        @java.lang.Override
        public float getLiquidWeight() {
          return liquidWeight_;
        }

        public static final int POINTTEMP_FIELD_NUMBER = 11;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.IntList pointTemp_ =
            emptyIntList();
        /**
         * <code>repeated sint32 PointTemp = 11;</code>
         * @return A list containing the pointTemp.
         */
        @java.lang.Override
        public java.util.List<java.lang.Integer>
            getPointTempList() {
          return pointTemp_;
        }
        /**
         * <code>repeated sint32 PointTemp = 11;</code>
         * @return The count of pointTemp.
         */
        public int getPointTempCount() {
          return pointTemp_.size();
        }
        /**
         * <code>repeated sint32 PointTemp = 11;</code>
         * @param index The index of the element to return.
         * @return The pointTemp at the given index.
         */
        public int getPointTemp(int index) {
          return pointTemp_.getInt(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, fuelLevel_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, medianLevel_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt32(3, levelPercent_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeFloat(4, fuelVolume_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeSInt32(5, fuelTemp_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            output.writeFloat(6, fuelWeight_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            output.writeFloat(7, fuelDensity_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            output.writeSInt32(8, vaporTemp_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            output.writeFloat(9, vaporWeight_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            output.writeFloat(10, liquidWeight_);
          }
          for (int i = 0; i < pointTemp_.size(); i++) {
            output.writeSInt32(11, pointTemp_.getInt(i));
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, fuelLevel_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, medianLevel_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, levelPercent_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, fuelVolume_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(5, fuelTemp_);
          }
          if (((bitField0_ & 0x00000020) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(6, fuelWeight_);
          }
          if (((bitField0_ & 0x00000040) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(7, fuelDensity_);
          }
          if (((bitField0_ & 0x00000080) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeSInt32Size(8, vaporTemp_);
          }
          if (((bitField0_ & 0x00000100) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(9, vaporWeight_);
          }
          if (((bitField0_ & 0x00000200) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(10, liquidWeight_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < pointTemp_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeSInt32SizeNoTag(pointTemp_.getInt(i));
            }
            size += dataSize;
            size += 1 * getPointTempList().size();
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) obj;

          if (hasFuelLevel() != other.hasFuelLevel()) return false;
          if (hasFuelLevel()) {
            if (java.lang.Float.floatToIntBits(getFuelLevel())
                != java.lang.Float.floatToIntBits(
                    other.getFuelLevel())) return false;
          }
          if (hasMedianLevel() != other.hasMedianLevel()) return false;
          if (hasMedianLevel()) {
            if (java.lang.Float.floatToIntBits(getMedianLevel())
                != java.lang.Float.floatToIntBits(
                    other.getMedianLevel())) return false;
          }
          if (hasLevelPercent() != other.hasLevelPercent()) return false;
          if (hasLevelPercent()) {
            if (getLevelPercent()
                != other.getLevelPercent()) return false;
          }
          if (hasFuelVolume() != other.hasFuelVolume()) return false;
          if (hasFuelVolume()) {
            if (java.lang.Float.floatToIntBits(getFuelVolume())
                != java.lang.Float.floatToIntBits(
                    other.getFuelVolume())) return false;
          }
          if (hasFuelTemp() != other.hasFuelTemp()) return false;
          if (hasFuelTemp()) {
            if (getFuelTemp()
                != other.getFuelTemp()) return false;
          }
          if (hasFuelWeight() != other.hasFuelWeight()) return false;
          if (hasFuelWeight()) {
            if (java.lang.Float.floatToIntBits(getFuelWeight())
                != java.lang.Float.floatToIntBits(
                    other.getFuelWeight())) return false;
          }
          if (hasFuelDensity() != other.hasFuelDensity()) return false;
          if (hasFuelDensity()) {
            if (java.lang.Float.floatToIntBits(getFuelDensity())
                != java.lang.Float.floatToIntBits(
                    other.getFuelDensity())) return false;
          }
          if (hasVaporTemp() != other.hasVaporTemp()) return false;
          if (hasVaporTemp()) {
            if (getVaporTemp()
                != other.getVaporTemp()) return false;
          }
          if (hasVaporWeight() != other.hasVaporWeight()) return false;
          if (hasVaporWeight()) {
            if (java.lang.Float.floatToIntBits(getVaporWeight())
                != java.lang.Float.floatToIntBits(
                    other.getVaporWeight())) return false;
          }
          if (hasLiquidWeight() != other.hasLiquidWeight()) return false;
          if (hasLiquidWeight()) {
            if (java.lang.Float.floatToIntBits(getLiquidWeight())
                != java.lang.Float.floatToIntBits(
                    other.getLiquidWeight())) return false;
          }
          if (!getPointTempList()
              .equals(other.getPointTempList())) return false;
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasFuelLevel()) {
            hash = (37 * hash) + FUELLEVEL_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFuelLevel());
          }
          if (hasMedianLevel()) {
            hash = (37 * hash) + MEDIANLEVEL_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getMedianLevel());
          }
          if (hasLevelPercent()) {
            hash = (37 * hash) + LEVELPERCENT_FIELD_NUMBER;
            hash = (53 * hash) + getLevelPercent();
          }
          if (hasFuelVolume()) {
            hash = (37 * hash) + FUELVOLUME_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFuelVolume());
          }
          if (hasFuelTemp()) {
            hash = (37 * hash) + FUELTEMP_FIELD_NUMBER;
            hash = (53 * hash) + getFuelTemp();
          }
          if (hasFuelWeight()) {
            hash = (37 * hash) + FUELWEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFuelWeight());
          }
          if (hasFuelDensity()) {
            hash = (37 * hash) + FUELDENSITY_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getFuelDensity());
          }
          if (hasVaporTemp()) {
            hash = (37 * hash) + VAPORTEMP_FIELD_NUMBER;
            hash = (53 * hash) + getVaporTemp();
          }
          if (hasVaporWeight()) {
            hash = (37 * hash) + VAPORWEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getVaporWeight());
          }
          if (hasLiquidWeight()) {
            hash = (37 * hash) + LIQUIDWEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getLiquidWeight());
          }
          if (getPointTempCount() > 0) {
            hash = (37 * hash) + POINTTEMP_FIELD_NUMBER;
            hash = (53 * hash) + getPointTempList().hashCode();
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Данные о сторонних датчиках уровня топлива
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            fuelLevel_ = 0F;
            medianLevel_ = 0F;
            levelPercent_ = 0;
            fuelVolume_ = 0F;
            fuelTemp_ = 0;
            fuelWeight_ = 0F;
            fuelDensity_ = 0F;
            vaporTemp_ = 0;
            vaporWeight_ = 0F;
            liquidWeight_ = 0F;
            pointTemp_ = emptyIntList();
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.fuelLevel_ = fuelLevel_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.medianLevel_ = medianLevel_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.levelPercent_ = levelPercent_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.fuelVolume_ = fuelVolume_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.fuelTemp_ = fuelTemp_;
              to_bitField0_ |= 0x00000010;
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
              result.fuelWeight_ = fuelWeight_;
              to_bitField0_ |= 0x00000020;
            }
            if (((from_bitField0_ & 0x00000040) != 0)) {
              result.fuelDensity_ = fuelDensity_;
              to_bitField0_ |= 0x00000040;
            }
            if (((from_bitField0_ & 0x00000080) != 0)) {
              result.vaporTemp_ = vaporTemp_;
              to_bitField0_ |= 0x00000080;
            }
            if (((from_bitField0_ & 0x00000100) != 0)) {
              result.vaporWeight_ = vaporWeight_;
              to_bitField0_ |= 0x00000100;
            }
            if (((from_bitField0_ & 0x00000200) != 0)) {
              result.liquidWeight_ = liquidWeight_;
              to_bitField0_ |= 0x00000200;
            }
            if (((from_bitField0_ & 0x00000400) != 0)) {
              pointTemp_.makeImmutable();
              result.pointTemp_ = pointTemp_;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance()) return this;
            if (other.hasFuelLevel()) {
              setFuelLevel(other.getFuelLevel());
            }
            if (other.hasMedianLevel()) {
              setMedianLevel(other.getMedianLevel());
            }
            if (other.hasLevelPercent()) {
              setLevelPercent(other.getLevelPercent());
            }
            if (other.hasFuelVolume()) {
              setFuelVolume(other.getFuelVolume());
            }
            if (other.hasFuelTemp()) {
              setFuelTemp(other.getFuelTemp());
            }
            if (other.hasFuelWeight()) {
              setFuelWeight(other.getFuelWeight());
            }
            if (other.hasFuelDensity()) {
              setFuelDensity(other.getFuelDensity());
            }
            if (other.hasVaporTemp()) {
              setVaporTemp(other.getVaporTemp());
            }
            if (other.hasVaporWeight()) {
              setVaporWeight(other.getVaporWeight());
            }
            if (other.hasLiquidWeight()) {
              setLiquidWeight(other.getLiquidWeight());
            }
            if (!other.pointTemp_.isEmpty()) {
              if (pointTemp_.isEmpty()) {
                pointTemp_ = other.pointTemp_;
                pointTemp_.makeImmutable();
                bitField0_ |= 0x00000400;
              } else {
                ensurePointTempIsMutable();
                pointTemp_.addAll(other.pointTemp_);
              }
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 13: {
                    fuelLevel_ = input.readFloat();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 13
                  case 21: {
                    medianLevel_ = input.readFloat();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 21
                  case 24: {
                    levelPercent_ = input.readUInt32();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  case 37: {
                    fuelVolume_ = input.readFloat();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 37
                  case 40: {
                    fuelTemp_ = input.readSInt32();
                    bitField0_ |= 0x00000010;
                    break;
                  } // case 40
                  case 53: {
                    fuelWeight_ = input.readFloat();
                    bitField0_ |= 0x00000020;
                    break;
                  } // case 53
                  case 61: {
                    fuelDensity_ = input.readFloat();
                    bitField0_ |= 0x00000040;
                    break;
                  } // case 61
                  case 64: {
                    vaporTemp_ = input.readSInt32();
                    bitField0_ |= 0x00000080;
                    break;
                  } // case 64
                  case 77: {
                    vaporWeight_ = input.readFloat();
                    bitField0_ |= 0x00000100;
                    break;
                  } // case 77
                  case 85: {
                    liquidWeight_ = input.readFloat();
                    bitField0_ |= 0x00000200;
                    break;
                  } // case 85
                  case 88: {
                    int v = input.readSInt32();
                    ensurePointTempIsMutable();
                    pointTemp_.addInt(v);
                    break;
                  } // case 88
                  case 90: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    ensurePointTempIsMutable();
                    while (input.getBytesUntilLimit() > 0) {
                      pointTemp_.addInt(input.readSInt32());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 90
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private float fuelLevel_ ;
          /**
           * <code>optional float FuelLevel = 1;</code>
           * @return Whether the fuelLevel field is set.
           */
          @java.lang.Override
          public boolean hasFuelLevel() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float FuelLevel = 1;</code>
           * @return The fuelLevel.
           */
          @java.lang.Override
          public float getFuelLevel() {
            return fuelLevel_;
          }
          /**
           * <code>optional float FuelLevel = 1;</code>
           * @param value The fuelLevel to set.
           * @return This builder for chaining.
           */
          public Builder setFuelLevel(float value) {

            fuelLevel_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional float FuelLevel = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearFuelLevel() {
            bitField0_ = (bitField0_ & ~0x00000001);
            fuelLevel_ = 0F;
            onChanged();
            return this;
          }

          private float medianLevel_ ;
          /**
           * <code>optional float MedianLevel = 2;</code>
           * @return Whether the medianLevel field is set.
           */
          @java.lang.Override
          public boolean hasMedianLevel() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float MedianLevel = 2;</code>
           * @return The medianLevel.
           */
          @java.lang.Override
          public float getMedianLevel() {
            return medianLevel_;
          }
          /**
           * <code>optional float MedianLevel = 2;</code>
           * @param value The medianLevel to set.
           * @return This builder for chaining.
           */
          public Builder setMedianLevel(float value) {

            medianLevel_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional float MedianLevel = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearMedianLevel() {
            bitField0_ = (bitField0_ & ~0x00000002);
            medianLevel_ = 0F;
            onChanged();
            return this;
          }

          private int levelPercent_ ;
          /**
           * <code>optional uint32 LevelPercent = 3;</code>
           * @return Whether the levelPercent field is set.
           */
          @java.lang.Override
          public boolean hasLevelPercent() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional uint32 LevelPercent = 3;</code>
           * @return The levelPercent.
           */
          @java.lang.Override
          public int getLevelPercent() {
            return levelPercent_;
          }
          /**
           * <code>optional uint32 LevelPercent = 3;</code>
           * @param value The levelPercent to set.
           * @return This builder for chaining.
           */
          public Builder setLevelPercent(int value) {

            levelPercent_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 LevelPercent = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearLevelPercent() {
            bitField0_ = (bitField0_ & ~0x00000004);
            levelPercent_ = 0;
            onChanged();
            return this;
          }

          private float fuelVolume_ ;
          /**
           * <code>optional float FuelVolume = 4;</code>
           * @return Whether the fuelVolume field is set.
           */
          @java.lang.Override
          public boolean hasFuelVolume() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float FuelVolume = 4;</code>
           * @return The fuelVolume.
           */
          @java.lang.Override
          public float getFuelVolume() {
            return fuelVolume_;
          }
          /**
           * <code>optional float FuelVolume = 4;</code>
           * @param value The fuelVolume to set.
           * @return This builder for chaining.
           */
          public Builder setFuelVolume(float value) {

            fuelVolume_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <code>optional float FuelVolume = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearFuelVolume() {
            bitField0_ = (bitField0_ & ~0x00000008);
            fuelVolume_ = 0F;
            onChanged();
            return this;
          }

          private int fuelTemp_ ;
          /**
           * <code>optional sint32 FuelTemp = 5;</code>
           * @return Whether the fuelTemp field is set.
           */
          @java.lang.Override
          public boolean hasFuelTemp() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional sint32 FuelTemp = 5;</code>
           * @return The fuelTemp.
           */
          @java.lang.Override
          public int getFuelTemp() {
            return fuelTemp_;
          }
          /**
           * <code>optional sint32 FuelTemp = 5;</code>
           * @param value The fuelTemp to set.
           * @return This builder for chaining.
           */
          public Builder setFuelTemp(int value) {

            fuelTemp_ = value;
            bitField0_ |= 0x00000010;
            onChanged();
            return this;
          }
          /**
           * <code>optional sint32 FuelTemp = 5;</code>
           * @return This builder for chaining.
           */
          public Builder clearFuelTemp() {
            bitField0_ = (bitField0_ & ~0x00000010);
            fuelTemp_ = 0;
            onChanged();
            return this;
          }

          private float fuelWeight_ ;
          /**
           * <code>optional float FuelWeight = 6;</code>
           * @return Whether the fuelWeight field is set.
           */
          @java.lang.Override
          public boolean hasFuelWeight() {
            return ((bitField0_ & 0x00000020) != 0);
          }
          /**
           * <code>optional float FuelWeight = 6;</code>
           * @return The fuelWeight.
           */
          @java.lang.Override
          public float getFuelWeight() {
            return fuelWeight_;
          }
          /**
           * <code>optional float FuelWeight = 6;</code>
           * @param value The fuelWeight to set.
           * @return This builder for chaining.
           */
          public Builder setFuelWeight(float value) {

            fuelWeight_ = value;
            bitField0_ |= 0x00000020;
            onChanged();
            return this;
          }
          /**
           * <code>optional float FuelWeight = 6;</code>
           * @return This builder for chaining.
           */
          public Builder clearFuelWeight() {
            bitField0_ = (bitField0_ & ~0x00000020);
            fuelWeight_ = 0F;
            onChanged();
            return this;
          }

          private float fuelDensity_ ;
          /**
           * <code>optional float FuelDensity = 7;</code>
           * @return Whether the fuelDensity field is set.
           */
          @java.lang.Override
          public boolean hasFuelDensity() {
            return ((bitField0_ & 0x00000040) != 0);
          }
          /**
           * <code>optional float FuelDensity = 7;</code>
           * @return The fuelDensity.
           */
          @java.lang.Override
          public float getFuelDensity() {
            return fuelDensity_;
          }
          /**
           * <code>optional float FuelDensity = 7;</code>
           * @param value The fuelDensity to set.
           * @return This builder for chaining.
           */
          public Builder setFuelDensity(float value) {

            fuelDensity_ = value;
            bitField0_ |= 0x00000040;
            onChanged();
            return this;
          }
          /**
           * <code>optional float FuelDensity = 7;</code>
           * @return This builder for chaining.
           */
          public Builder clearFuelDensity() {
            bitField0_ = (bitField0_ & ~0x00000040);
            fuelDensity_ = 0F;
            onChanged();
            return this;
          }

          private int vaporTemp_ ;
          /**
           * <code>optional sint32 VaporTemp = 8;</code>
           * @return Whether the vaporTemp field is set.
           */
          @java.lang.Override
          public boolean hasVaporTemp() {
            return ((bitField0_ & 0x00000080) != 0);
          }
          /**
           * <code>optional sint32 VaporTemp = 8;</code>
           * @return The vaporTemp.
           */
          @java.lang.Override
          public int getVaporTemp() {
            return vaporTemp_;
          }
          /**
           * <code>optional sint32 VaporTemp = 8;</code>
           * @param value The vaporTemp to set.
           * @return This builder for chaining.
           */
          public Builder setVaporTemp(int value) {

            vaporTemp_ = value;
            bitField0_ |= 0x00000080;
            onChanged();
            return this;
          }
          /**
           * <code>optional sint32 VaporTemp = 8;</code>
           * @return This builder for chaining.
           */
          public Builder clearVaporTemp() {
            bitField0_ = (bitField0_ & ~0x00000080);
            vaporTemp_ = 0;
            onChanged();
            return this;
          }

          private float vaporWeight_ ;
          /**
           * <code>optional float VaporWeight = 9;</code>
           * @return Whether the vaporWeight field is set.
           */
          @java.lang.Override
          public boolean hasVaporWeight() {
            return ((bitField0_ & 0x00000100) != 0);
          }
          /**
           * <code>optional float VaporWeight = 9;</code>
           * @return The vaporWeight.
           */
          @java.lang.Override
          public float getVaporWeight() {
            return vaporWeight_;
          }
          /**
           * <code>optional float VaporWeight = 9;</code>
           * @param value The vaporWeight to set.
           * @return This builder for chaining.
           */
          public Builder setVaporWeight(float value) {

            vaporWeight_ = value;
            bitField0_ |= 0x00000100;
            onChanged();
            return this;
          }
          /**
           * <code>optional float VaporWeight = 9;</code>
           * @return This builder for chaining.
           */
          public Builder clearVaporWeight() {
            bitField0_ = (bitField0_ & ~0x00000100);
            vaporWeight_ = 0F;
            onChanged();
            return this;
          }

          private float liquidWeight_ ;
          /**
           * <code>optional float LiquidWeight = 10;</code>
           * @return Whether the liquidWeight field is set.
           */
          @java.lang.Override
          public boolean hasLiquidWeight() {
            return ((bitField0_ & 0x00000200) != 0);
          }
          /**
           * <code>optional float LiquidWeight = 10;</code>
           * @return The liquidWeight.
           */
          @java.lang.Override
          public float getLiquidWeight() {
            return liquidWeight_;
          }
          /**
           * <code>optional float LiquidWeight = 10;</code>
           * @param value The liquidWeight to set.
           * @return This builder for chaining.
           */
          public Builder setLiquidWeight(float value) {

            liquidWeight_ = value;
            bitField0_ |= 0x00000200;
            onChanged();
            return this;
          }
          /**
           * <code>optional float LiquidWeight = 10;</code>
           * @return This builder for chaining.
           */
          public Builder clearLiquidWeight() {
            bitField0_ = (bitField0_ & ~0x00000200);
            liquidWeight_ = 0F;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.IntList pointTemp_ = emptyIntList();
          private void ensurePointTempIsMutable() {
            if (!pointTemp_.isModifiable()) {
              pointTemp_ = makeMutableCopy(pointTemp_);
            }
            bitField0_ |= 0x00000400;
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @return A list containing the pointTemp.
           */
          public java.util.List<java.lang.Integer>
              getPointTempList() {
            pointTemp_.makeImmutable();
            return pointTemp_;
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @return The count of pointTemp.
           */
          public int getPointTempCount() {
            return pointTemp_.size();
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @param index The index of the element to return.
           * @return The pointTemp at the given index.
           */
          public int getPointTemp(int index) {
            return pointTemp_.getInt(index);
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @param index The index to set the value at.
           * @param value The pointTemp to set.
           * @return This builder for chaining.
           */
          public Builder setPointTemp(
              int index, int value) {

            ensurePointTempIsMutable();
            pointTemp_.setInt(index, value);
            bitField0_ |= 0x00000400;
            onChanged();
            return this;
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @param value The pointTemp to add.
           * @return This builder for chaining.
           */
          public Builder addPointTemp(int value) {

            ensurePointTempIsMutable();
            pointTemp_.addInt(value);
            bitField0_ |= 0x00000400;
            onChanged();
            return this;
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @param values The pointTemp to add.
           * @return This builder for chaining.
           */
          public Builder addAllPointTemp(
              java.lang.Iterable<? extends java.lang.Integer> values) {
            ensurePointTempIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, pointTemp_);
            bitField0_ |= 0x00000400;
            onChanged();
            return this;
          }
          /**
           * <code>repeated sint32 PointTemp = 11;</code>
           * @return This builder for chaining.
           */
          public Builder clearPointTemp() {
            pointTemp_ = emptyIntList();
            bitField0_ = (bitField0_ & ~0x00000400);
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.FuelSensorModbus)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<FuelSensorModbus>
            PARSER = new com.google.protobuf.AbstractParser<FuelSensorModbus>() {
          @java.lang.Override
          public FuelSensorModbus parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<FuelSensorModbus> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<FuelSensorModbus> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface WeightControlOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated float AxelWeight = 1;</code>
         * @return A list containing the axelWeight.
         */
        java.util.List<java.lang.Float> getAxelWeightList();
        /**
         * <code>repeated float AxelWeight = 1;</code>
         * @return The count of axelWeight.
         */
        int getAxelWeightCount();
        /**
         * <code>repeated float AxelWeight = 1;</code>
         * @param index The index of the element to return.
         * @return The axelWeight at the given index.
         */
        float getAxelWeight(int index);

        /**
         * <code>repeated float AxelLimit = 2;</code>
         * @return A list containing the axelLimit.
         */
        java.util.List<java.lang.Float> getAxelLimitList();
        /**
         * <code>repeated float AxelLimit = 2;</code>
         * @return The count of axelLimit.
         */
        int getAxelLimitCount();
        /**
         * <code>repeated float AxelLimit = 2;</code>
         * @param index The index of the element to return.
         * @return The axelLimit at the given index.
         */
        float getAxelLimit(int index);

        /**
         * <code>optional float TotalWeight = 3;</code>
         * @return Whether the totalWeight field is set.
         */
        boolean hasTotalWeight();
        /**
         * <code>optional float TotalWeight = 3;</code>
         * @return The totalWeight.
         */
        float getTotalWeight();

        /**
         * <code>optional float TotalWeightLimit = 4;</code>
         * @return Whether the totalWeightLimit field is set.
         */
        boolean hasTotalWeightLimit();
        /**
         * <code>optional float TotalWeightLimit = 4;</code>
         * @return The totalWeightLimit.
         */
        float getTotalWeightLimit();
      }
      /**
       * <pre>
       * Данные о весовом контроле
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl}
       */
      public static final class WeightControl extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl)
          WeightControlOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use WeightControl.newBuilder() to construct.
        private WeightControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private WeightControl() {
          axelWeight_ = emptyFloatList();
          axelLimit_ = emptyFloatList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new WeightControl();
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder.class);
        }

        private int bitField0_;
        public static final int AXELWEIGHT_FIELD_NUMBER = 1;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.FloatList axelWeight_ =
            emptyFloatList();
        /**
         * <code>repeated float AxelWeight = 1;</code>
         * @return A list containing the axelWeight.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getAxelWeightList() {
          return axelWeight_;
        }
        /**
         * <code>repeated float AxelWeight = 1;</code>
         * @return The count of axelWeight.
         */
        public int getAxelWeightCount() {
          return axelWeight_.size();
        }
        /**
         * <code>repeated float AxelWeight = 1;</code>
         * @param index The index of the element to return.
         * @return The axelWeight at the given index.
         */
        public float getAxelWeight(int index) {
          return axelWeight_.getFloat(index);
        }

        public static final int AXELLIMIT_FIELD_NUMBER = 2;
        @SuppressWarnings("serial")
        private com.google.protobuf.Internal.FloatList axelLimit_ =
            emptyFloatList();
        /**
         * <code>repeated float AxelLimit = 2;</code>
         * @return A list containing the axelLimit.
         */
        @java.lang.Override
        public java.util.List<java.lang.Float>
            getAxelLimitList() {
          return axelLimit_;
        }
        /**
         * <code>repeated float AxelLimit = 2;</code>
         * @return The count of axelLimit.
         */
        public int getAxelLimitCount() {
          return axelLimit_.size();
        }
        /**
         * <code>repeated float AxelLimit = 2;</code>
         * @param index The index of the element to return.
         * @return The axelLimit at the given index.
         */
        public float getAxelLimit(int index) {
          return axelLimit_.getFloat(index);
        }

        public static final int TOTALWEIGHT_FIELD_NUMBER = 3;
        private float totalWeight_ = 0F;
        /**
         * <code>optional float TotalWeight = 3;</code>
         * @return Whether the totalWeight field is set.
         */
        @java.lang.Override
        public boolean hasTotalWeight() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float TotalWeight = 3;</code>
         * @return The totalWeight.
         */
        @java.lang.Override
        public float getTotalWeight() {
          return totalWeight_;
        }

        public static final int TOTALWEIGHTLIMIT_FIELD_NUMBER = 4;
        private float totalWeightLimit_ = 0F;
        /**
         * <code>optional float TotalWeightLimit = 4;</code>
         * @return Whether the totalWeightLimit field is set.
         */
        @java.lang.Override
        public boolean hasTotalWeightLimit() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float TotalWeightLimit = 4;</code>
         * @return The totalWeightLimit.
         */
        @java.lang.Override
        public float getTotalWeightLimit() {
          return totalWeightLimit_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < axelWeight_.size(); i++) {
            output.writeFloat(1, axelWeight_.getFloat(i));
          }
          for (int i = 0; i < axelLimit_.size(); i++) {
            output.writeFloat(2, axelLimit_.getFloat(i));
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(3, totalWeight_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(4, totalWeightLimit_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          {
            int dataSize = 0;
            dataSize = 4 * getAxelWeightList().size();
            size += dataSize;
            size += 1 * getAxelWeightList().size();
          }
          {
            int dataSize = 0;
            dataSize = 4 * getAxelLimitList().size();
            size += dataSize;
            size += 1 * getAxelLimitList().size();
          }
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, totalWeight_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, totalWeightLimit_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl)) {
            return super.equals(obj);
          }
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) obj;

          if (!getAxelWeightList()
              .equals(other.getAxelWeightList())) return false;
          if (!getAxelLimitList()
              .equals(other.getAxelLimitList())) return false;
          if (hasTotalWeight() != other.hasTotalWeight()) return false;
          if (hasTotalWeight()) {
            if (java.lang.Float.floatToIntBits(getTotalWeight())
                != java.lang.Float.floatToIntBits(
                    other.getTotalWeight())) return false;
          }
          if (hasTotalWeightLimit() != other.hasTotalWeightLimit()) return false;
          if (hasTotalWeightLimit()) {
            if (java.lang.Float.floatToIntBits(getTotalWeightLimit())
                != java.lang.Float.floatToIntBits(
                    other.getTotalWeightLimit())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getAxelWeightCount() > 0) {
            hash = (37 * hash) + AXELWEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getAxelWeightList().hashCode();
          }
          if (getAxelLimitCount() > 0) {
            hash = (37 * hash) + AXELLIMIT_FIELD_NUMBER;
            hash = (53 * hash) + getAxelLimitList().hashCode();
          }
          if (hasTotalWeight()) {
            hash = (37 * hash) + TOTALWEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getTotalWeight());
          }
          if (hasTotalWeightLimit()) {
            hash = (37 * hash) + TOTALWEIGHTLIMIT_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getTotalWeightLimit());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Данные о весовом контроле
         * </pre>
         *
         * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl)
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder.class);
          }

          // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            axelWeight_ = emptyFloatList();
            axelLimit_ = emptyFloatList();
            totalWeight_ = 0F;
            totalWeightLimit_ = 0F;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getDefaultInstanceForType() {
            return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance();
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl build() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl buildPartial() {
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              axelWeight_.makeImmutable();
              result.axelWeight_ = axelWeight_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              axelLimit_.makeImmutable();
              result.axelLimit_ = axelLimit_;
            }
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.totalWeight_ = totalWeight_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.totalWeightLimit_ = totalWeightLimit_;
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl) {
              return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl other) {
            if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance()) return this;
            if (!other.axelWeight_.isEmpty()) {
              if (axelWeight_.isEmpty()) {
                axelWeight_ = other.axelWeight_;
                axelWeight_.makeImmutable();
                bitField0_ |= 0x00000001;
              } else {
                ensureAxelWeightIsMutable();
                axelWeight_.addAll(other.axelWeight_);
              }
              onChanged();
            }
            if (!other.axelLimit_.isEmpty()) {
              if (axelLimit_.isEmpty()) {
                axelLimit_ = other.axelLimit_;
                axelLimit_.makeImmutable();
                bitField0_ |= 0x00000002;
              } else {
                ensureAxelLimitIsMutable();
                axelLimit_.addAll(other.axelLimit_);
              }
              onChanged();
            }
            if (other.hasTotalWeight()) {
              setTotalWeight(other.getTotalWeight());
            }
            if (other.hasTotalWeightLimit()) {
              setTotalWeightLimit(other.getTotalWeightLimit());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 13: {
                    float v = input.readFloat();
                    ensureAxelWeightIsMutable();
                    axelWeight_.addFloat(v);
                    break;
                  } // case 13
                  case 10: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    int alloc = length > 4096 ? 4096 : length;
                    ensureAxelWeightIsMutable(alloc / 4);
                    while (input.getBytesUntilLimit() > 0) {
                      axelWeight_.addFloat(input.readFloat());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 10
                  case 21: {
                    float v = input.readFloat();
                    ensureAxelLimitIsMutable();
                    axelLimit_.addFloat(v);
                    break;
                  } // case 21
                  case 18: {
                    int length = input.readRawVarint32();
                    int limit = input.pushLimit(length);
                    int alloc = length > 4096 ? 4096 : length;
                    ensureAxelLimitIsMutable(alloc / 4);
                    while (input.getBytesUntilLimit() > 0) {
                      axelLimit_.addFloat(input.readFloat());
                    }
                    input.popLimit(limit);
                    break;
                  } // case 18
                  case 29: {
                    totalWeight_ = input.readFloat();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 29
                  case 37: {
                    totalWeightLimit_ = input.readFloat();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 37
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.Internal.FloatList axelWeight_ = emptyFloatList();
          private void ensureAxelWeightIsMutable() {
            if (!axelWeight_.isModifiable()) {
              axelWeight_ = makeMutableCopy(axelWeight_);
            }
            bitField0_ |= 0x00000001;
          }
          private void ensureAxelWeightIsMutable(int capacity) {
            if (!axelWeight_.isModifiable()) {
              axelWeight_ = makeMutableCopy(axelWeight_, capacity);
            }
            bitField0_ |= 0x00000001;
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @return A list containing the axelWeight.
           */
          public java.util.List<java.lang.Float>
              getAxelWeightList() {
            axelWeight_.makeImmutable();
            return axelWeight_;
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @return The count of axelWeight.
           */
          public int getAxelWeightCount() {
            return axelWeight_.size();
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @param index The index of the element to return.
           * @return The axelWeight at the given index.
           */
          public float getAxelWeight(int index) {
            return axelWeight_.getFloat(index);
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @param index The index to set the value at.
           * @param value The axelWeight to set.
           * @return This builder for chaining.
           */
          public Builder setAxelWeight(
              int index, float value) {

            ensureAxelWeightIsMutable();
            axelWeight_.setFloat(index, value);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @param value The axelWeight to add.
           * @return This builder for chaining.
           */
          public Builder addAxelWeight(float value) {

            ensureAxelWeightIsMutable();
            axelWeight_.addFloat(value);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @param values The axelWeight to add.
           * @return This builder for chaining.
           */
          public Builder addAllAxelWeight(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureAxelWeightIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, axelWeight_);
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>repeated float AxelWeight = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearAxelWeight() {
            axelWeight_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList axelLimit_ = emptyFloatList();
          private void ensureAxelLimitIsMutable() {
            if (!axelLimit_.isModifiable()) {
              axelLimit_ = makeMutableCopy(axelLimit_);
            }
            bitField0_ |= 0x00000002;
          }
          private void ensureAxelLimitIsMutable(int capacity) {
            if (!axelLimit_.isModifiable()) {
              axelLimit_ = makeMutableCopy(axelLimit_, capacity);
            }
            bitField0_ |= 0x00000002;
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @return A list containing the axelLimit.
           */
          public java.util.List<java.lang.Float>
              getAxelLimitList() {
            axelLimit_.makeImmutable();
            return axelLimit_;
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @return The count of axelLimit.
           */
          public int getAxelLimitCount() {
            return axelLimit_.size();
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @param index The index of the element to return.
           * @return The axelLimit at the given index.
           */
          public float getAxelLimit(int index) {
            return axelLimit_.getFloat(index);
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @param index The index to set the value at.
           * @param value The axelLimit to set.
           * @return This builder for chaining.
           */
          public Builder setAxelLimit(
              int index, float value) {

            ensureAxelLimitIsMutable();
            axelLimit_.setFloat(index, value);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @param value The axelLimit to add.
           * @return This builder for chaining.
           */
          public Builder addAxelLimit(float value) {

            ensureAxelLimitIsMutable();
            axelLimit_.addFloat(value);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @param values The axelLimit to add.
           * @return This builder for chaining.
           */
          public Builder addAllAxelLimit(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureAxelLimitIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, axelLimit_);
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>repeated float AxelLimit = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearAxelLimit() {
            axelLimit_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }

          private float totalWeight_ ;
          /**
           * <code>optional float TotalWeight = 3;</code>
           * @return Whether the totalWeight field is set.
           */
          @java.lang.Override
          public boolean hasTotalWeight() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional float TotalWeight = 3;</code>
           * @return The totalWeight.
           */
          @java.lang.Override
          public float getTotalWeight() {
            return totalWeight_;
          }
          /**
           * <code>optional float TotalWeight = 3;</code>
           * @param value The totalWeight to set.
           * @return This builder for chaining.
           */
          public Builder setTotalWeight(float value) {

            totalWeight_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <code>optional float TotalWeight = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearTotalWeight() {
            bitField0_ = (bitField0_ & ~0x00000004);
            totalWeight_ = 0F;
            onChanged();
            return this;
          }

          private float totalWeightLimit_ ;
          /**
           * <code>optional float TotalWeightLimit = 4;</code>
           * @return Whether the totalWeightLimit field is set.
           */
          @java.lang.Override
          public boolean hasTotalWeightLimit() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional float TotalWeightLimit = 4;</code>
           * @return The totalWeightLimit.
           */
          @java.lang.Override
          public float getTotalWeightLimit() {
            return totalWeightLimit_;
          }
          /**
           * <code>optional float TotalWeightLimit = 4;</code>
           * @param value The totalWeightLimit to set.
           * @return This builder for chaining.
           */
          public Builder setTotalWeightLimit(float value) {

            totalWeightLimit_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <code>optional float TotalWeightLimit = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearTotalWeightLimit() {
            bitField0_ = (bitField0_ & ~0x00000008);
            totalWeightLimit_ = 0F;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl)
        }

        // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other.WeightControl)
        private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl();
        }

        public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<WeightControl>
            PARSER = new com.google.protobuf.AbstractParser<WeightControl>() {
          @java.lang.Override
          public WeightControl parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<WeightControl> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WeightControl> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int ONEWIRE_FIELD_NUMBER = 1;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire oneWire_;
      /**
       * <code>optional group OneWire = 1 { ... }</code>
       * @return Whether the onewire field is set.
       */
      @java.lang.Override
      public boolean hasOneWire() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional group OneWire = 1 { ... }</code>
       * @return The onewire.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getOneWire() {
        return oneWire_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : oneWire_;
      }
      /**
       * <code>optional group OneWire = 1 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder getOneWireOrBuilder() {
        return oneWire_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : oneWire_;
      }

      public static final int PHERIP_FIELD_NUMBER = 2;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip pherip_;
      /**
       * <code>optional group Pherip = 2 { ... }</code>
       * @return Whether the pherip field is set.
       */
      @java.lang.Override
      public boolean hasPherip() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional group Pherip = 2 { ... }</code>
       * @return The pherip.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getPherip() {
        return pherip_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : pherip_;
      }
      /**
       * <code>optional group Pherip = 2 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder getPheripOrBuilder() {
        return pherip_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : pherip_;
      }

      public static final int EXCAN_FIELD_NUMBER = 3;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN exCAN_;
      /**
       * <code>optional group ExCAN = 3 { ... }</code>
       * @return Whether the excan field is set.
       */
      @java.lang.Override
      public boolean hasExCAN() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional group ExCAN = 3 { ... }</code>
       * @return The excan.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getExCAN() {
        return exCAN_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : exCAN_;
      }
      /**
       * <code>optional group ExCAN = 3 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder getExCANOrBuilder() {
        return exCAN_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : exCAN_;
      }

      public static final int TAHO_DDD_FIELD_NUMBER = 4;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD tahoDDD_;
      /**
       * <code>optional group Taho_DDD = 4 { ... }</code>
       * @return Whether the tahoDdd field is set.
       */
      @java.lang.Override
      public boolean hasTahoDDD() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional group Taho_DDD = 4 { ... }</code>
       * @return The tahoDdd.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getTahoDDD() {
        return tahoDDD_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : tahoDDD_;
      }
      /**
       * <code>optional group Taho_DDD = 4 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder getTahoDDDOrBuilder() {
        return tahoDDD_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : tahoDDD_;
      }

      public static final int APC_FIELD_NUMBER = 5;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC aPC_;
      /**
       * <code>optional group APC = 5 { ... }</code>
       * @return Whether the apc field is set.
       */
      @java.lang.Override
      public boolean hasAPC() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional group APC = 5 { ... }</code>
       * @return The apc.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC getAPC() {
        return aPC_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : aPC_;
      }
      /**
       * <code>optional group APC = 5 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder getAPCOrBuilder() {
        return aPC_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : aPC_;
      }

      public static final int MOBILEEYE_FIELD_NUMBER = 6;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye mobileEye_;
      /**
       * <code>optional group MobileEye = 6 { ... }</code>
       * @return Whether the mobileeye field is set.
       */
      @java.lang.Override
      public boolean hasMobileEye() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional group MobileEye = 6 { ... }</code>
       * @return The mobileeye.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getMobileEye() {
        return mobileEye_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : mobileEye_;
      }
      /**
       * <code>optional group MobileEye = 6 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder getMobileEyeOrBuilder() {
        return mobileEye_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : mobileEye_;
      }

      public static final int SAFEDRIVING_FIELD_NUMBER = 7;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving safeDriving_;
      /**
       * <code>optional group SafeDriving = 7 { ... }</code>
       * @return Whether the safedriving field is set.
       */
      @java.lang.Override
      public boolean hasSafeDriving() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional group SafeDriving = 7 { ... }</code>
       * @return The safedriving.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getSafeDriving() {
        return safeDriving_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : safeDriving_;
      }
      /**
       * <code>optional group SafeDriving = 7 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder getSafeDrivingOrBuilder() {
        return safeDriving_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : safeDriving_;
      }

      public static final int GENCOMM_FIELD_NUMBER = 8;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm genComm_;
      /**
       * <code>optional group GenComm = 8 { ... }</code>
       * @return Whether the gencomm field is set.
       */
      @java.lang.Override
      public boolean hasGenComm() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional group GenComm = 8 { ... }</code>
       * @return The gencomm.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getGenComm() {
        return genComm_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : genComm_;
      }
      /**
       * <code>optional group GenComm = 8 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder getGenCommOrBuilder() {
        return genComm_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : genComm_;
      }

      public static final int FUELSENSORMODBUS_FIELD_NUMBER = 9;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus fuelSensorModbus_;
      /**
       * <code>optional group FuelSensorModbus = 9 { ... }</code>
       * @return Whether the fuelsensormodbus field is set.
       */
      @java.lang.Override
      public boolean hasFuelSensorModbus() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional group FuelSensorModbus = 9 { ... }</code>
       * @return The fuelsensormodbus.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getFuelSensorModbus() {
        return fuelSensorModbus_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : fuelSensorModbus_;
      }
      /**
       * <code>optional group FuelSensorModbus = 9 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder() {
        return fuelSensorModbus_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : fuelSensorModbus_;
      }

      public static final int WEIGHTCONTROL_FIELD_NUMBER = 10;
      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl weightControl_;
      /**
       * <code>optional group WeightControl = 10 { ... }</code>
       * @return Whether the weightcontrol field is set.
       */
      @java.lang.Override
      public boolean hasWeightControl() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional group WeightControl = 10 { ... }</code>
       * @return The weightcontrol.
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getWeightControl() {
        return weightControl_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : weightControl_;
      }
      /**
       * <code>optional group WeightControl = 10 { ... }</code>
       */
      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder getWeightControlOrBuilder() {
        return weightControl_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : weightControl_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeGroup(1, getOneWire());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeGroup(2, getPherip());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeGroup(3, getExCAN());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeGroup(4, getTahoDDD());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeGroup(5, getAPC());
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeGroup(6, getMobileEye());
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeGroup(7, getSafeDriving());
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeGroup(8, getGenComm());
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeGroup(9, getFuelSensorModbus());
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeGroup(10, getWeightControl());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(1, getOneWire());
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(2, getPherip());
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(3, getExCAN());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(4, getTahoDDD());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(5, getAPC());
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(6, getMobileEye());
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(7, getSafeDriving());
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(8, getGenComm());
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(9, getFuelSensorModbus());
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeGroupSize(10, getWeightControl());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other) obj;

        if (hasOneWire() != other.hasOneWire()) return false;
        if (hasOneWire()) {
          if (!getOneWire()
              .equals(other.getOneWire())) return false;
        }
        if (hasPherip() != other.hasPherip()) return false;
        if (hasPherip()) {
          if (!getPherip()
              .equals(other.getPherip())) return false;
        }
        if (hasExCAN() != other.hasExCAN()) return false;
        if (hasExCAN()) {
          if (!getExCAN()
              .equals(other.getExCAN())) return false;
        }
        if (hasTahoDDD() != other.hasTahoDDD()) return false;
        if (hasTahoDDD()) {
          if (!getTahoDDD()
              .equals(other.getTahoDDD())) return false;
        }
        if (hasAPC() != other.hasAPC()) return false;
        if (hasAPC()) {
          if (!getAPC()
              .equals(other.getAPC())) return false;
        }
        if (hasMobileEye() != other.hasMobileEye()) return false;
        if (hasMobileEye()) {
          if (!getMobileEye()
              .equals(other.getMobileEye())) return false;
        }
        if (hasSafeDriving() != other.hasSafeDriving()) return false;
        if (hasSafeDriving()) {
          if (!getSafeDriving()
              .equals(other.getSafeDriving())) return false;
        }
        if (hasGenComm() != other.hasGenComm()) return false;
        if (hasGenComm()) {
          if (!getGenComm()
              .equals(other.getGenComm())) return false;
        }
        if (hasFuelSensorModbus() != other.hasFuelSensorModbus()) return false;
        if (hasFuelSensorModbus()) {
          if (!getFuelSensorModbus()
              .equals(other.getFuelSensorModbus())) return false;
        }
        if (hasWeightControl() != other.hasWeightControl()) return false;
        if (hasWeightControl()) {
          if (!getWeightControl()
              .equals(other.getWeightControl())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasOneWire()) {
          hash = (37 * hash) + ONEWIRE_FIELD_NUMBER;
          hash = (53 * hash) + getOneWire().hashCode();
        }
        if (hasPherip()) {
          hash = (37 * hash) + PHERIP_FIELD_NUMBER;
          hash = (53 * hash) + getPherip().hashCode();
        }
        if (hasExCAN()) {
          hash = (37 * hash) + EXCAN_FIELD_NUMBER;
          hash = (53 * hash) + getExCAN().hashCode();
        }
        if (hasTahoDDD()) {
          hash = (37 * hash) + TAHO_DDD_FIELD_NUMBER;
          hash = (53 * hash) + getTahoDDD().hashCode();
        }
        if (hasAPC()) {
          hash = (37 * hash) + APC_FIELD_NUMBER;
          hash = (53 * hash) + getAPC().hashCode();
        }
        if (hasMobileEye()) {
          hash = (37 * hash) + MOBILEEYE_FIELD_NUMBER;
          hash = (53 * hash) + getMobileEye().hashCode();
        }
        if (hasSafeDriving()) {
          hash = (37 * hash) + SAFEDRIVING_FIELD_NUMBER;
          hash = (53 * hash) + getSafeDriving().hashCode();
        }
        if (hasGenComm()) {
          hash = (37 * hash) + GENCOMM_FIELD_NUMBER;
          hash = (53 * hash) + getGenComm().hashCode();
        }
        if (hasFuelSensorModbus()) {
          hash = (37 * hash) + FUELSENSORMODBUS_FIELD_NUMBER;
          hash = (53 * hash) + getFuelSensorModbus().hashCode();
        }
        if (hasWeightControl()) {
          hash = (37 * hash) + WEIGHTCONTROL_FIELD_NUMBER;
          hash = (53 * hash) + getWeightControl().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * прочее оборудование
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.Other}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.Other)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getOneWireFieldBuilder();
            getPheripFieldBuilder();
            getExCANFieldBuilder();
            getTahoDDDFieldBuilder();
            getAPCFieldBuilder();
            getMobileEyeFieldBuilder();
            getSafeDrivingFieldBuilder();
            getGenCommFieldBuilder();
            getFuelSensorModbusFieldBuilder();
            getWeightControlFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          oneWire_ = null;
          if (oneWireBuilder_ != null) {
            oneWireBuilder_.dispose();
            oneWireBuilder_ = null;
          }
          pherip_ = null;
          if (pheripBuilder_ != null) {
            pheripBuilder_.dispose();
            pheripBuilder_ = null;
          }
          exCAN_ = null;
          if (exCANBuilder_ != null) {
            exCANBuilder_.dispose();
            exCANBuilder_ = null;
          }
          tahoDDD_ = null;
          if (tahoDDDBuilder_ != null) {
            tahoDDDBuilder_.dispose();
            tahoDDDBuilder_ = null;
          }
          aPC_ = null;
          if (aPCBuilder_ != null) {
            aPCBuilder_.dispose();
            aPCBuilder_ = null;
          }
          mobileEye_ = null;
          if (mobileEyeBuilder_ != null) {
            mobileEyeBuilder_.dispose();
            mobileEyeBuilder_ = null;
          }
          safeDriving_ = null;
          if (safeDrivingBuilder_ != null) {
            safeDrivingBuilder_.dispose();
            safeDrivingBuilder_ = null;
          }
          genComm_ = null;
          if (genCommBuilder_ != null) {
            genCommBuilder_.dispose();
            genCommBuilder_ = null;
          }
          fuelSensorModbus_ = null;
          if (fuelSensorModbusBuilder_ != null) {
            fuelSensorModbusBuilder_.dispose();
            fuelSensorModbusBuilder_ = null;
          }
          weightControl_ = null;
          if (weightControlBuilder_ != null) {
            weightControlBuilder_.dispose();
            weightControlBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.oneWire_ = oneWireBuilder_ == null
                ? oneWire_
                : oneWireBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.pherip_ = pheripBuilder_ == null
                ? pherip_
                : pheripBuilder_.build();
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.exCAN_ = exCANBuilder_ == null
                ? exCAN_
                : exCANBuilder_.build();
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.tahoDDD_ = tahoDDDBuilder_ == null
                ? tahoDDD_
                : tahoDDDBuilder_.build();
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.aPC_ = aPCBuilder_ == null
                ? aPC_
                : aPCBuilder_.build();
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.mobileEye_ = mobileEyeBuilder_ == null
                ? mobileEye_
                : mobileEyeBuilder_.build();
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.safeDriving_ = safeDrivingBuilder_ == null
                ? safeDriving_
                : safeDrivingBuilder_.build();
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.genComm_ = genCommBuilder_ == null
                ? genComm_
                : genCommBuilder_.build();
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.fuelSensorModbus_ = fuelSensorModbusBuilder_ == null
                ? fuelSensorModbus_
                : fuelSensorModbusBuilder_.build();
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.weightControl_ = weightControlBuilder_ == null
                ? weightControl_
                : weightControlBuilder_.build();
            to_bitField0_ |= 0x00000200;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance()) return this;
          if (other.hasOneWire()) {
            mergeOneWire(other.getOneWire());
          }
          if (other.hasPherip()) {
            mergePherip(other.getPherip());
          }
          if (other.hasExCAN()) {
            mergeExCAN(other.getExCAN());
          }
          if (other.hasTahoDDD()) {
            mergeTahoDDD(other.getTahoDDD());
          }
          if (other.hasAPC()) {
            mergeAPC(other.getAPC());
          }
          if (other.hasMobileEye()) {
            mergeMobileEye(other.getMobileEye());
          }
          if (other.hasSafeDriving()) {
            mergeSafeDriving(other.getSafeDriving());
          }
          if (other.hasGenComm()) {
            mergeGenComm(other.getGenComm());
          }
          if (other.hasFuelSensorModbus()) {
            mergeFuelSensorModbus(other.getFuelSensorModbus());
          }
          if (other.hasWeightControl()) {
            mergeWeightControl(other.getWeightControl());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 11: {
                  input.readGroup(1,
                      getOneWireFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 11
                case 19: {
                  input.readGroup(2,
                      getPheripFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 19
                case 27: {
                  input.readGroup(3,
                      getExCANFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000004;
                  break;
                } // case 27
                case 35: {
                  input.readGroup(4,
                      getTahoDDDFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 35
                case 43: {
                  input.readGroup(5,
                      getAPCFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000010;
                  break;
                } // case 43
                case 51: {
                  input.readGroup(6,
                      getMobileEyeFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000020;
                  break;
                } // case 51
                case 59: {
                  input.readGroup(7,
                      getSafeDrivingFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000040;
                  break;
                } // case 59
                case 67: {
                  input.readGroup(8,
                      getGenCommFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000080;
                  break;
                } // case 67
                case 75: {
                  input.readGroup(9,
                      getFuelSensorModbusFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000100;
                  break;
                } // case 75
                case 83: {
                  input.readGroup(10,
                      getWeightControlFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000200;
                  break;
                } // case 83
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire oneWire_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder> oneWireBuilder_;
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         * @return Whether the onewire field is set.
         */
        public boolean hasOneWire() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         * @return The onewire.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire getOneWire() {
          if (oneWireBuilder_ == null) {
            return oneWire_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : oneWire_;
          } else {
            return oneWireBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        public Builder setOneWire(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire value) {
          if (oneWireBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            oneWire_ = value;
          } else {
            oneWireBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        public Builder setOneWire(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder builderForValue) {
          if (oneWireBuilder_ == null) {
            oneWire_ = builderForValue.build();
          } else {
            oneWireBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        public Builder mergeOneWire(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire value) {
          if (oneWireBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              oneWire_ != null &&
              oneWire_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance()) {
              getOneWireBuilder().mergeFrom(value);
            } else {
              oneWire_ = value;
            }
          } else {
            oneWireBuilder_.mergeFrom(value);
          }
          if (oneWire_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        public Builder clearOneWire() {
          bitField0_ = (bitField0_ & ~0x00000001);
          oneWire_ = null;
          if (oneWireBuilder_ != null) {
            oneWireBuilder_.dispose();
            oneWireBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder getOneWireBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getOneWireFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder getOneWireOrBuilder() {
          if (oneWireBuilder_ != null) {
            return oneWireBuilder_.getMessageOrBuilder();
          } else {
            return oneWire_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.getDefaultInstance() : oneWire_;
          }
        }
        /**
         * <code>optional group OneWire = 1 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder> 
            getOneWireFieldBuilder() {
          if (oneWireBuilder_ == null) {
            oneWireBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWire.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.OneWireOrBuilder>(
                    getOneWire(),
                    getParentForChildren(),
                    isClean());
            oneWire_ = null;
          }
          return oneWireBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip pherip_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder> pheripBuilder_;
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         * @return Whether the pherip field is set.
         */
        public boolean hasPherip() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         * @return The pherip.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip getPherip() {
          if (pheripBuilder_ == null) {
            return pherip_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : pherip_;
          } else {
            return pheripBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        public Builder setPherip(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip value) {
          if (pheripBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            pherip_ = value;
          } else {
            pheripBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        public Builder setPherip(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder builderForValue) {
          if (pheripBuilder_ == null) {
            pherip_ = builderForValue.build();
          } else {
            pheripBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        public Builder mergePherip(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip value) {
          if (pheripBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              pherip_ != null &&
              pherip_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance()) {
              getPheripBuilder().mergeFrom(value);
            } else {
              pherip_ = value;
            }
          } else {
            pheripBuilder_.mergeFrom(value);
          }
          if (pherip_ != null) {
            bitField0_ |= 0x00000002;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        public Builder clearPherip() {
          bitField0_ = (bitField0_ & ~0x00000002);
          pherip_ = null;
          if (pheripBuilder_ != null) {
            pheripBuilder_.dispose();
            pheripBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder getPheripBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPheripFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder getPheripOrBuilder() {
          if (pheripBuilder_ != null) {
            return pheripBuilder_.getMessageOrBuilder();
          } else {
            return pherip_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.getDefaultInstance() : pherip_;
          }
        }
        /**
         * <code>optional group Pherip = 2 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder> 
            getPheripFieldBuilder() {
          if (pheripBuilder_ == null) {
            pheripBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Pherip.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.PheripOrBuilder>(
                    getPherip(),
                    getParentForChildren(),
                    isClean());
            pherip_ = null;
          }
          return pheripBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN exCAN_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder> exCANBuilder_;
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         * @return Whether the excan field is set.
         */
        public boolean hasExCAN() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         * @return The excan.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN getExCAN() {
          if (exCANBuilder_ == null) {
            return exCAN_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : exCAN_;
          } else {
            return exCANBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        public Builder setExCAN(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN value) {
          if (exCANBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            exCAN_ = value;
          } else {
            exCANBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        public Builder setExCAN(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder builderForValue) {
          if (exCANBuilder_ == null) {
            exCAN_ = builderForValue.build();
          } else {
            exCANBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        public Builder mergeExCAN(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN value) {
          if (exCANBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0) &&
              exCAN_ != null &&
              exCAN_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance()) {
              getExCANBuilder().mergeFrom(value);
            } else {
              exCAN_ = value;
            }
          } else {
            exCANBuilder_.mergeFrom(value);
          }
          if (exCAN_ != null) {
            bitField0_ |= 0x00000004;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        public Builder clearExCAN() {
          bitField0_ = (bitField0_ & ~0x00000004);
          exCAN_ = null;
          if (exCANBuilder_ != null) {
            exCANBuilder_.dispose();
            exCANBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder getExCANBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getExCANFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder getExCANOrBuilder() {
          if (exCANBuilder_ != null) {
            return exCANBuilder_.getMessageOrBuilder();
          } else {
            return exCAN_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.getDefaultInstance() : exCAN_;
          }
        }
        /**
         * <code>optional group ExCAN = 3 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder> 
            getExCANFieldBuilder() {
          if (exCANBuilder_ == null) {
            exCANBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCAN.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.ExCANOrBuilder>(
                    getExCAN(),
                    getParentForChildren(),
                    isClean());
            exCAN_ = null;
          }
          return exCANBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD tahoDDD_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder> tahoDDDBuilder_;
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         * @return Whether the tahoDdd field is set.
         */
        public boolean hasTahoDDD() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         * @return The tahoDdd.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD getTahoDDD() {
          if (tahoDDDBuilder_ == null) {
            return tahoDDD_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : tahoDDD_;
          } else {
            return tahoDDDBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        public Builder setTahoDDD(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD value) {
          if (tahoDDDBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            tahoDDD_ = value;
          } else {
            tahoDDDBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        public Builder setTahoDDD(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder builderForValue) {
          if (tahoDDDBuilder_ == null) {
            tahoDDD_ = builderForValue.build();
          } else {
            tahoDDDBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        public Builder mergeTahoDDD(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD value) {
          if (tahoDDDBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              tahoDDD_ != null &&
              tahoDDD_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance()) {
              getTahoDDDBuilder().mergeFrom(value);
            } else {
              tahoDDD_ = value;
            }
          } else {
            tahoDDDBuilder_.mergeFrom(value);
          }
          if (tahoDDD_ != null) {
            bitField0_ |= 0x00000008;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        public Builder clearTahoDDD() {
          bitField0_ = (bitField0_ & ~0x00000008);
          tahoDDD_ = null;
          if (tahoDDDBuilder_ != null) {
            tahoDDDBuilder_.dispose();
            tahoDDDBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder getTahoDDDBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getTahoDDDFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder getTahoDDDOrBuilder() {
          if (tahoDDDBuilder_ != null) {
            return tahoDDDBuilder_.getMessageOrBuilder();
          } else {
            return tahoDDD_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.getDefaultInstance() : tahoDDD_;
          }
        }
        /**
         * <code>optional group Taho_DDD = 4 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder> 
            getTahoDDDFieldBuilder() {
          if (tahoDDDBuilder_ == null) {
            tahoDDDBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDD.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Taho_DDDOrBuilder>(
                    getTahoDDD(),
                    getParentForChildren(),
                    isClean());
            tahoDDD_ = null;
          }
          return tahoDDDBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC aPC_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder> aPCBuilder_;
        /**
         * <code>optional group APC = 5 { ... }</code>
         * @return Whether the apc field is set.
         */
        public boolean hasAPC() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         * @return The apc.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC getAPC() {
          if (aPCBuilder_ == null) {
            return aPC_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : aPC_;
          } else {
            return aPCBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        public Builder setAPC(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC value) {
          if (aPCBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            aPC_ = value;
          } else {
            aPCBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        public Builder setAPC(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder builderForValue) {
          if (aPCBuilder_ == null) {
            aPC_ = builderForValue.build();
          } else {
            aPCBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        public Builder mergeAPC(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC value) {
          if (aPCBuilder_ == null) {
            if (((bitField0_ & 0x00000010) != 0) &&
              aPC_ != null &&
              aPC_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance()) {
              getAPCBuilder().mergeFrom(value);
            } else {
              aPC_ = value;
            }
          } else {
            aPCBuilder_.mergeFrom(value);
          }
          if (aPC_ != null) {
            bitField0_ |= 0x00000010;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        public Builder clearAPC() {
          bitField0_ = (bitField0_ & ~0x00000010);
          aPC_ = null;
          if (aPCBuilder_ != null) {
            aPCBuilder_.dispose();
            aPCBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder getAPCBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getAPCFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder getAPCOrBuilder() {
          if (aPCBuilder_ != null) {
            return aPCBuilder_.getMessageOrBuilder();
          } else {
            return aPC_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.getDefaultInstance() : aPC_;
          }
        }
        /**
         * <code>optional group APC = 5 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder> 
            getAPCFieldBuilder() {
          if (aPCBuilder_ == null) {
            aPCBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APC.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.APCOrBuilder>(
                    getAPC(),
                    getParentForChildren(),
                    isClean());
            aPC_ = null;
          }
          return aPCBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye mobileEye_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder> mobileEyeBuilder_;
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         * @return Whether the mobileeye field is set.
         */
        public boolean hasMobileEye() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         * @return The mobileeye.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye getMobileEye() {
          if (mobileEyeBuilder_ == null) {
            return mobileEye_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : mobileEye_;
          } else {
            return mobileEyeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        public Builder setMobileEye(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye value) {
          if (mobileEyeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            mobileEye_ = value;
          } else {
            mobileEyeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        public Builder setMobileEye(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder builderForValue) {
          if (mobileEyeBuilder_ == null) {
            mobileEye_ = builderForValue.build();
          } else {
            mobileEyeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        public Builder mergeMobileEye(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye value) {
          if (mobileEyeBuilder_ == null) {
            if (((bitField0_ & 0x00000020) != 0) &&
              mobileEye_ != null &&
              mobileEye_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance()) {
              getMobileEyeBuilder().mergeFrom(value);
            } else {
              mobileEye_ = value;
            }
          } else {
            mobileEyeBuilder_.mergeFrom(value);
          }
          if (mobileEye_ != null) {
            bitField0_ |= 0x00000020;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        public Builder clearMobileEye() {
          bitField0_ = (bitField0_ & ~0x00000020);
          mobileEye_ = null;
          if (mobileEyeBuilder_ != null) {
            mobileEyeBuilder_.dispose();
            mobileEyeBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder getMobileEyeBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getMobileEyeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder getMobileEyeOrBuilder() {
          if (mobileEyeBuilder_ != null) {
            return mobileEyeBuilder_.getMessageOrBuilder();
          } else {
            return mobileEye_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.getDefaultInstance() : mobileEye_;
          }
        }
        /**
         * <code>optional group MobileEye = 6 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder> 
            getMobileEyeFieldBuilder() {
          if (mobileEyeBuilder_ == null) {
            mobileEyeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEye.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.MobileEyeOrBuilder>(
                    getMobileEye(),
                    getParentForChildren(),
                    isClean());
            mobileEye_ = null;
          }
          return mobileEyeBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving safeDriving_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder> safeDrivingBuilder_;
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         * @return Whether the safedriving field is set.
         */
        public boolean hasSafeDriving() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         * @return The safedriving.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving getSafeDriving() {
          if (safeDrivingBuilder_ == null) {
            return safeDriving_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : safeDriving_;
          } else {
            return safeDrivingBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        public Builder setSafeDriving(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving value) {
          if (safeDrivingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            safeDriving_ = value;
          } else {
            safeDrivingBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        public Builder setSafeDriving(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder builderForValue) {
          if (safeDrivingBuilder_ == null) {
            safeDriving_ = builderForValue.build();
          } else {
            safeDrivingBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        public Builder mergeSafeDriving(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving value) {
          if (safeDrivingBuilder_ == null) {
            if (((bitField0_ & 0x00000040) != 0) &&
              safeDriving_ != null &&
              safeDriving_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance()) {
              getSafeDrivingBuilder().mergeFrom(value);
            } else {
              safeDriving_ = value;
            }
          } else {
            safeDrivingBuilder_.mergeFrom(value);
          }
          if (safeDriving_ != null) {
            bitField0_ |= 0x00000040;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        public Builder clearSafeDriving() {
          bitField0_ = (bitField0_ & ~0x00000040);
          safeDriving_ = null;
          if (safeDrivingBuilder_ != null) {
            safeDrivingBuilder_.dispose();
            safeDrivingBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder getSafeDrivingBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getSafeDrivingFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder getSafeDrivingOrBuilder() {
          if (safeDrivingBuilder_ != null) {
            return safeDrivingBuilder_.getMessageOrBuilder();
          } else {
            return safeDriving_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.getDefaultInstance() : safeDriving_;
          }
        }
        /**
         * <code>optional group SafeDriving = 7 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder> 
            getSafeDrivingFieldBuilder() {
          if (safeDrivingBuilder_ == null) {
            safeDrivingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDriving.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.SafeDrivingOrBuilder>(
                    getSafeDriving(),
                    getParentForChildren(),
                    isClean());
            safeDriving_ = null;
          }
          return safeDrivingBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm genComm_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder> genCommBuilder_;
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         * @return Whether the gencomm field is set.
         */
        public boolean hasGenComm() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         * @return The gencomm.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm getGenComm() {
          if (genCommBuilder_ == null) {
            return genComm_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : genComm_;
          } else {
            return genCommBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        public Builder setGenComm(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm value) {
          if (genCommBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            genComm_ = value;
          } else {
            genCommBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        public Builder setGenComm(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder builderForValue) {
          if (genCommBuilder_ == null) {
            genComm_ = builderForValue.build();
          } else {
            genCommBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        public Builder mergeGenComm(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm value) {
          if (genCommBuilder_ == null) {
            if (((bitField0_ & 0x00000080) != 0) &&
              genComm_ != null &&
              genComm_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance()) {
              getGenCommBuilder().mergeFrom(value);
            } else {
              genComm_ = value;
            }
          } else {
            genCommBuilder_.mergeFrom(value);
          }
          if (genComm_ != null) {
            bitField0_ |= 0x00000080;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        public Builder clearGenComm() {
          bitField0_ = (bitField0_ & ~0x00000080);
          genComm_ = null;
          if (genCommBuilder_ != null) {
            genCommBuilder_.dispose();
            genCommBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder getGenCommBuilder() {
          bitField0_ |= 0x00000080;
          onChanged();
          return getGenCommFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder getGenCommOrBuilder() {
          if (genCommBuilder_ != null) {
            return genCommBuilder_.getMessageOrBuilder();
          } else {
            return genComm_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.getDefaultInstance() : genComm_;
          }
        }
        /**
         * <code>optional group GenComm = 8 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder> 
            getGenCommFieldBuilder() {
          if (genCommBuilder_ == null) {
            genCommBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenComm.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.GenCommOrBuilder>(
                    getGenComm(),
                    getParentForChildren(),
                    isClean());
            genComm_ = null;
          }
          return genCommBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus fuelSensorModbus_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder> fuelSensorModbusBuilder_;
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         * @return Whether the fuelsensormodbus field is set.
         */
        public boolean hasFuelSensorModbus() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         * @return The fuelsensormodbus.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus getFuelSensorModbus() {
          if (fuelSensorModbusBuilder_ == null) {
            return fuelSensorModbus_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : fuelSensorModbus_;
          } else {
            return fuelSensorModbusBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        public Builder setFuelSensorModbus(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus value) {
          if (fuelSensorModbusBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            fuelSensorModbus_ = value;
          } else {
            fuelSensorModbusBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        public Builder setFuelSensorModbus(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder builderForValue) {
          if (fuelSensorModbusBuilder_ == null) {
            fuelSensorModbus_ = builderForValue.build();
          } else {
            fuelSensorModbusBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        public Builder mergeFuelSensorModbus(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus value) {
          if (fuelSensorModbusBuilder_ == null) {
            if (((bitField0_ & 0x00000100) != 0) &&
              fuelSensorModbus_ != null &&
              fuelSensorModbus_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance()) {
              getFuelSensorModbusBuilder().mergeFrom(value);
            } else {
              fuelSensorModbus_ = value;
            }
          } else {
            fuelSensorModbusBuilder_.mergeFrom(value);
          }
          if (fuelSensorModbus_ != null) {
            bitField0_ |= 0x00000100;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        public Builder clearFuelSensorModbus() {
          bitField0_ = (bitField0_ & ~0x00000100);
          fuelSensorModbus_ = null;
          if (fuelSensorModbusBuilder_ != null) {
            fuelSensorModbusBuilder_.dispose();
            fuelSensorModbusBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder getFuelSensorModbusBuilder() {
          bitField0_ |= 0x00000100;
          onChanged();
          return getFuelSensorModbusFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder getFuelSensorModbusOrBuilder() {
          if (fuelSensorModbusBuilder_ != null) {
            return fuelSensorModbusBuilder_.getMessageOrBuilder();
          } else {
            return fuelSensorModbus_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.getDefaultInstance() : fuelSensorModbus_;
          }
        }
        /**
         * <code>optional group FuelSensorModbus = 9 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder> 
            getFuelSensorModbusFieldBuilder() {
          if (fuelSensorModbusBuilder_ == null) {
            fuelSensorModbusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbus.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.FuelSensorModbusOrBuilder>(
                    getFuelSensorModbus(),
                    getParentForChildren(),
                    isClean());
            fuelSensorModbus_ = null;
          }
          return fuelSensorModbusBuilder_;
        }

        private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl weightControl_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder> weightControlBuilder_;
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         * @return Whether the weightcontrol field is set.
         */
        public boolean hasWeightControl() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         * @return The weightcontrol.
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl getWeightControl() {
          if (weightControlBuilder_ == null) {
            return weightControl_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : weightControl_;
          } else {
            return weightControlBuilder_.getMessage();
          }
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        public Builder setWeightControl(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl value) {
          if (weightControlBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            weightControl_ = value;
          } else {
            weightControlBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        public Builder setWeightControl(
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder builderForValue) {
          if (weightControlBuilder_ == null) {
            weightControl_ = builderForValue.build();
          } else {
            weightControlBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        public Builder mergeWeightControl(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl value) {
          if (weightControlBuilder_ == null) {
            if (((bitField0_ & 0x00000200) != 0) &&
              weightControl_ != null &&
              weightControl_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance()) {
              getWeightControlBuilder().mergeFrom(value);
            } else {
              weightControl_ = value;
            }
          } else {
            weightControlBuilder_.mergeFrom(value);
          }
          if (weightControl_ != null) {
            bitField0_ |= 0x00000200;
            onChanged();
          }
          return this;
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        public Builder clearWeightControl() {
          bitField0_ = (bitField0_ & ~0x00000200);
          weightControl_ = null;
          if (weightControlBuilder_ != null) {
            weightControlBuilder_.dispose();
            weightControlBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder getWeightControlBuilder() {
          bitField0_ |= 0x00000200;
          onChanged();
          return getWeightControlFieldBuilder().getBuilder();
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder getWeightControlOrBuilder() {
          if (weightControlBuilder_ != null) {
            return weightControlBuilder_.getMessageOrBuilder();
          } else {
            return weightControl_ == null ?
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.getDefaultInstance() : weightControl_;
          }
        }
        /**
         * <code>optional group WeightControl = 10 { ... }</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder> 
            getWeightControlFieldBuilder() {
          if (weightControlBuilder_ == null) {
            weightControlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControl.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.WeightControlOrBuilder>(
                    getWeightControl(),
                    getParentForChildren(),
                    isClean());
            weightControl_ = null;
          }
          return weightControlBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.Other)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Other>
          PARSER = new com.google.protobuf.AbstractParser<Other>() {
        @java.lang.Override
        public Other parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Other> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Other> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ICONDtOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatus = 1;</code>
       * @return Whether the vehicleStatus field is set.
       */
      boolean hasVehicleStatus();
      /**
       * <pre>
       *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatus = 1;</code>
       * @return The vehicleStatus.
       */
      com.google.protobuf.ByteString getVehicleStatus();

      /**
       * <pre>
       *[1] ID статуса ТС. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusID = 2;</code>
       * @return Whether the vehicleStatusID field is set.
       */
      boolean hasVehicleStatusID();
      /**
       * <pre>
       *[1] ID статуса ТС. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusID = 2;</code>
       * @return The vehicleStatusID.
       */
      int getVehicleStatusID();

      /**
       * <pre>
       *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusGroupID = 3;</code>
       * @return Whether the vehicleStatusGroupID field is set.
       */
      boolean hasVehicleStatusGroupID();
      /**
       * <pre>
       *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusGroupID = 3;</code>
       * @return The vehicleStatusGroupID.
       */
      int getVehicleStatusGroupID();

      /**
       * <pre>
       *[8] UID сообщения
       * </pre>
       *
       * <code>optional uint64 MsgID = 4;</code>
       * @return Whether the msgID field is set.
       */
      boolean hasMsgID();
      /**
       * <pre>
       *[8] UID сообщения
       * </pre>
       *
       * <code>optional uint64 MsgID = 4;</code>
       * @return The msgID.
       */
      long getMsgID();

      /**
       * <pre>
       *[4] флаг статуса сообщения, см CMDPBF.proto
       * </pre>
       *
       * <code>optional uint32 MsgStatus = 5;</code>
       * @return Whether the msgStatus field is set.
       */
      boolean hasMsgStatus();
      /**
       * <pre>
       *[4] флаг статуса сообщения, см CMDPBF.proto
       * </pre>
       *
       * <code>optional uint32 MsgStatus = 5;</code>
       * @return The msgStatus.
       */
      int getMsgStatus();

      /**
       * <pre>
       *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 StatDate = 6;</code>
       * @return Whether the statDate field is set.
       */
      boolean hasStatDate();
      /**
       * <pre>
       *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 StatDate = 6;</code>
       * @return The statDate.
       */
      int getStatDate();

      /**
       * <pre>
       *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatusPrev = 7;</code>
       * @return Whether the vehicleStatusPrev field is set.
       */
      boolean hasVehicleStatusPrev();
      /**
       * <pre>
       *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatusPrev = 7;</code>
       * @return The vehicleStatusPrev.
       */
      com.google.protobuf.ByteString getVehicleStatusPrev();

      /**
       * <pre>
       * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
       * </pre>
       *
       * <code>optional uint32 VehicleStatusFlags = 8;</code>
       * @return Whether the vehicleStatusFlags field is set.
       */
      boolean hasVehicleStatusFlags();
      /**
       * <pre>
       * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
       * </pre>
       *
       * <code>optional uint32 VehicleStatusFlags = 8;</code>
       * @return The vehicleStatusFlags.
       */
      int getVehicleStatusFlags();
    }
    /**
     * <pre>
     * данные ICON
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt}
     */
    public static final class ICONDt extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt)
        ICONDtOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ICONDt.newBuilder() to construct.
      private ICONDt(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ICONDt() {
        vehicleStatus_ = com.google.protobuf.ByteString.EMPTY;
        vehicleStatusPrev_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ICONDt();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder.class);
      }

      private int bitField0_;
      public static final int VEHICLESTATUS_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString vehicleStatus_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatus = 1;</code>
       * @return Whether the vehicleStatus field is set.
       */
      @java.lang.Override
      public boolean hasVehicleStatus() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatus = 1;</code>
       * @return The vehicleStatus.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getVehicleStatus() {
        return vehicleStatus_;
      }

      public static final int VEHICLESTATUSID_FIELD_NUMBER = 2;
      private int vehicleStatusID_ = 0;
      /**
       * <pre>
       *[1] ID статуса ТС. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusID = 2;</code>
       * @return Whether the vehicleStatusID field is set.
       */
      @java.lang.Override
      public boolean hasVehicleStatusID() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *[1] ID статуса ТС. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusID = 2;</code>
       * @return The vehicleStatusID.
       */
      @java.lang.Override
      public int getVehicleStatusID() {
        return vehicleStatusID_;
      }

      public static final int VEHICLESTATUSGROUPID_FIELD_NUMBER = 3;
      private int vehicleStatusGroupID_ = 0;
      /**
       * <pre>
       *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusGroupID = 3;</code>
       * @return Whether the vehicleStatusGroupID field is set.
       */
      @java.lang.Override
      public boolean hasVehicleStatusGroupID() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
       * </pre>
       *
       * <code>optional uint32 VehicleStatusGroupID = 3;</code>
       * @return The vehicleStatusGroupID.
       */
      @java.lang.Override
      public int getVehicleStatusGroupID() {
        return vehicleStatusGroupID_;
      }

      public static final int MSGID_FIELD_NUMBER = 4;
      private long msgID_ = 0L;
      /**
       * <pre>
       *[8] UID сообщения
       * </pre>
       *
       * <code>optional uint64 MsgID = 4;</code>
       * @return Whether the msgID field is set.
       */
      @java.lang.Override
      public boolean hasMsgID() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *[8] UID сообщения
       * </pre>
       *
       * <code>optional uint64 MsgID = 4;</code>
       * @return The msgID.
       */
      @java.lang.Override
      public long getMsgID() {
        return msgID_;
      }

      public static final int MSGSTATUS_FIELD_NUMBER = 5;
      private int msgStatus_ = 0;
      /**
       * <pre>
       *[4] флаг статуса сообщения, см CMDPBF.proto
       * </pre>
       *
       * <code>optional uint32 MsgStatus = 5;</code>
       * @return Whether the msgStatus field is set.
       */
      @java.lang.Override
      public boolean hasMsgStatus() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *[4] флаг статуса сообщения, см CMDPBF.proto
       * </pre>
       *
       * <code>optional uint32 MsgStatus = 5;</code>
       * @return The msgStatus.
       */
      @java.lang.Override
      public int getMsgStatus() {
        return msgStatus_;
      }

      public static final int STATDATE_FIELD_NUMBER = 6;
      private int statDate_ = 0;
      /**
       * <pre>
       *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 StatDate = 6;</code>
       * @return Whether the statDate field is set.
       */
      @java.lang.Override
      public boolean hasStatDate() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
       * </pre>
       *
       * <code>optional uint32 StatDate = 6;</code>
       * @return The statDate.
       */
      @java.lang.Override
      public int getStatDate() {
        return statDate_;
      }

      public static final int VEHICLESTATUSPREV_FIELD_NUMBER = 7;
      private com.google.protobuf.ByteString vehicleStatusPrev_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatusPrev = 7;</code>
       * @return Whether the vehicleStatusPrev field is set.
       */
      @java.lang.Override
      public boolean hasVehicleStatusPrev() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
       * </pre>
       *
       * <code>optional bytes VehicleStatusPrev = 7;</code>
       * @return The vehicleStatusPrev.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getVehicleStatusPrev() {
        return vehicleStatusPrev_;
      }

      public static final int VEHICLESTATUSFLAGS_FIELD_NUMBER = 8;
      private int vehicleStatusFlags_ = 0;
      /**
       * <pre>
       * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
       * </pre>
       *
       * <code>optional uint32 VehicleStatusFlags = 8;</code>
       * @return Whether the vehicleStatusFlags field is set.
       */
      @java.lang.Override
      public boolean hasVehicleStatusFlags() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
       * </pre>
       *
       * <code>optional uint32 VehicleStatusFlags = 8;</code>
       * @return The vehicleStatusFlags.
       */
      @java.lang.Override
      public int getVehicleStatusFlags() {
        return vehicleStatusFlags_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBytes(1, vehicleStatus_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, vehicleStatusID_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, vehicleStatusGroupID_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt64(4, msgID_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, msgStatus_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, statDate_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeBytes(7, vehicleStatusPrev_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(8, vehicleStatusFlags_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, vehicleStatus_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, vehicleStatusID_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, vehicleStatusGroupID_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, msgID_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, msgStatus_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, statDate_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, vehicleStatusPrev_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, vehicleStatusFlags_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt) obj;

        if (hasVehicleStatus() != other.hasVehicleStatus()) return false;
        if (hasVehicleStatus()) {
          if (!getVehicleStatus()
              .equals(other.getVehicleStatus())) return false;
        }
        if (hasVehicleStatusID() != other.hasVehicleStatusID()) return false;
        if (hasVehicleStatusID()) {
          if (getVehicleStatusID()
              != other.getVehicleStatusID()) return false;
        }
        if (hasVehicleStatusGroupID() != other.hasVehicleStatusGroupID()) return false;
        if (hasVehicleStatusGroupID()) {
          if (getVehicleStatusGroupID()
              != other.getVehicleStatusGroupID()) return false;
        }
        if (hasMsgID() != other.hasMsgID()) return false;
        if (hasMsgID()) {
          if (getMsgID()
              != other.getMsgID()) return false;
        }
        if (hasMsgStatus() != other.hasMsgStatus()) return false;
        if (hasMsgStatus()) {
          if (getMsgStatus()
              != other.getMsgStatus()) return false;
        }
        if (hasStatDate() != other.hasStatDate()) return false;
        if (hasStatDate()) {
          if (getStatDate()
              != other.getStatDate()) return false;
        }
        if (hasVehicleStatusPrev() != other.hasVehicleStatusPrev()) return false;
        if (hasVehicleStatusPrev()) {
          if (!getVehicleStatusPrev()
              .equals(other.getVehicleStatusPrev())) return false;
        }
        if (hasVehicleStatusFlags() != other.hasVehicleStatusFlags()) return false;
        if (hasVehicleStatusFlags()) {
          if (getVehicleStatusFlags()
              != other.getVehicleStatusFlags()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasVehicleStatus()) {
          hash = (37 * hash) + VEHICLESTATUS_FIELD_NUMBER;
          hash = (53 * hash) + getVehicleStatus().hashCode();
        }
        if (hasVehicleStatusID()) {
          hash = (37 * hash) + VEHICLESTATUSID_FIELD_NUMBER;
          hash = (53 * hash) + getVehicleStatusID();
        }
        if (hasVehicleStatusGroupID()) {
          hash = (37 * hash) + VEHICLESTATUSGROUPID_FIELD_NUMBER;
          hash = (53 * hash) + getVehicleStatusGroupID();
        }
        if (hasMsgID()) {
          hash = (37 * hash) + MSGID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMsgID());
        }
        if (hasMsgStatus()) {
          hash = (37 * hash) + MSGSTATUS_FIELD_NUMBER;
          hash = (53 * hash) + getMsgStatus();
        }
        if (hasStatDate()) {
          hash = (37 * hash) + STATDATE_FIELD_NUMBER;
          hash = (53 * hash) + getStatDate();
        }
        if (hasVehicleStatusPrev()) {
          hash = (37 * hash) + VEHICLESTATUSPREV_FIELD_NUMBER;
          hash = (53 * hash) + getVehicleStatusPrev().hashCode();
        }
        if (hasVehicleStatusFlags()) {
          hash = (37 * hash) + VEHICLESTATUSFLAGS_FIELD_NUMBER;
          hash = (53 * hash) + getVehicleStatusFlags();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * данные ICON
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          vehicleStatus_ = com.google.protobuf.ByteString.EMPTY;
          vehicleStatusID_ = 0;
          vehicleStatusGroupID_ = 0;
          msgID_ = 0L;
          msgStatus_ = 0;
          statDate_ = 0;
          vehicleStatusPrev_ = com.google.protobuf.ByteString.EMPTY;
          vehicleStatusFlags_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.vehicleStatus_ = vehicleStatus_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.vehicleStatusID_ = vehicleStatusID_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.vehicleStatusGroupID_ = vehicleStatusGroupID_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.msgID_ = msgID_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.msgStatus_ = msgStatus_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.statDate_ = statDate_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.vehicleStatusPrev_ = vehicleStatusPrev_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.vehicleStatusFlags_ = vehicleStatusFlags_;
            to_bitField0_ |= 0x00000080;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance()) return this;
          if (other.hasVehicleStatus()) {
            setVehicleStatus(other.getVehicleStatus());
          }
          if (other.hasVehicleStatusID()) {
            setVehicleStatusID(other.getVehicleStatusID());
          }
          if (other.hasVehicleStatusGroupID()) {
            setVehicleStatusGroupID(other.getVehicleStatusGroupID());
          }
          if (other.hasMsgID()) {
            setMsgID(other.getMsgID());
          }
          if (other.hasMsgStatus()) {
            setMsgStatus(other.getMsgStatus());
          }
          if (other.hasStatDate()) {
            setStatDate(other.getStatDate());
          }
          if (other.hasVehicleStatusPrev()) {
            setVehicleStatusPrev(other.getVehicleStatusPrev());
          }
          if (other.hasVehicleStatusFlags()) {
            setVehicleStatusFlags(other.getVehicleStatusFlags());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  vehicleStatus_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  vehicleStatusID_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  vehicleStatusGroupID_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  msgID_ = input.readUInt64();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  msgStatus_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  statDate_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 58: {
                  vehicleStatusPrev_ = input.readBytes();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 58
                case 64: {
                  vehicleStatusFlags_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString vehicleStatus_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatus = 1;</code>
         * @return Whether the vehicleStatus field is set.
         */
        @java.lang.Override
        public boolean hasVehicleStatus() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatus = 1;</code>
         * @return The vehicleStatus.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getVehicleStatus() {
          return vehicleStatus_;
        }
        /**
         * <pre>
         *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatus = 1;</code>
         * @param value The vehicleStatus to set.
         * @return This builder for chaining.
         */
        public Builder setVehicleStatus(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          vehicleStatus_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[24] строка статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatus = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearVehicleStatus() {
          bitField0_ = (bitField0_ & ~0x00000001);
          vehicleStatus_ = getDefaultInstance().getVehicleStatus();
          onChanged();
          return this;
        }

        private int vehicleStatusID_ ;
        /**
         * <pre>
         *[1] ID статуса ТС. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusID = 2;</code>
         * @return Whether the vehicleStatusID field is set.
         */
        @java.lang.Override
        public boolean hasVehicleStatusID() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         *[1] ID статуса ТС. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusID = 2;</code>
         * @return The vehicleStatusID.
         */
        @java.lang.Override
        public int getVehicleStatusID() {
          return vehicleStatusID_;
        }
        /**
         * <pre>
         *[1] ID статуса ТС. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusID = 2;</code>
         * @param value The vehicleStatusID to set.
         * @return This builder for chaining.
         */
        public Builder setVehicleStatusID(int value) {

          vehicleStatusID_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] ID статуса ТС. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusID = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearVehicleStatusID() {
          bitField0_ = (bitField0_ & ~0x00000002);
          vehicleStatusID_ = 0;
          onChanged();
          return this;
        }

        private int vehicleStatusGroupID_ ;
        /**
         * <pre>
         *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusGroupID = 3;</code>
         * @return Whether the vehicleStatusGroupID field is set.
         */
        @java.lang.Override
        public boolean hasVehicleStatusGroupID() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusGroupID = 3;</code>
         * @return The vehicleStatusGroupID.
         */
        @java.lang.Override
        public int getVehicleStatusGroupID() {
          return vehicleStatusGroupID_;
        }
        /**
         * <pre>
         *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusGroupID = 3;</code>
         * @param value The vehicleStatusGroupID to set.
         * @return This builder for chaining.
         */
        public Builder setVehicleStatusGroupID(int value) {

          vehicleStatusGroupID_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1] ID группы статусов ТС. Резерв. [Hex2Dec]
         * </pre>
         *
         * <code>optional uint32 VehicleStatusGroupID = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearVehicleStatusGroupID() {
          bitField0_ = (bitField0_ & ~0x00000004);
          vehicleStatusGroupID_ = 0;
          onChanged();
          return this;
        }

        private long msgID_ ;
        /**
         * <pre>
         *[8] UID сообщения
         * </pre>
         *
         * <code>optional uint64 MsgID = 4;</code>
         * @return Whether the msgID field is set.
         */
        @java.lang.Override
        public boolean hasMsgID() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         *[8] UID сообщения
         * </pre>
         *
         * <code>optional uint64 MsgID = 4;</code>
         * @return The msgID.
         */
        @java.lang.Override
        public long getMsgID() {
          return msgID_;
        }
        /**
         * <pre>
         *[8] UID сообщения
         * </pre>
         *
         * <code>optional uint64 MsgID = 4;</code>
         * @param value The msgID to set.
         * @return This builder for chaining.
         */
        public Builder setMsgID(long value) {

          msgID_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[8] UID сообщения
         * </pre>
         *
         * <code>optional uint64 MsgID = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearMsgID() {
          bitField0_ = (bitField0_ & ~0x00000008);
          msgID_ = 0L;
          onChanged();
          return this;
        }

        private int msgStatus_ ;
        /**
         * <pre>
         *[4] флаг статуса сообщения, см CMDPBF.proto
         * </pre>
         *
         * <code>optional uint32 MsgStatus = 5;</code>
         * @return Whether the msgStatus field is set.
         */
        @java.lang.Override
        public boolean hasMsgStatus() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         *[4] флаг статуса сообщения, см CMDPBF.proto
         * </pre>
         *
         * <code>optional uint32 MsgStatus = 5;</code>
         * @return The msgStatus.
         */
        @java.lang.Override
        public int getMsgStatus() {
          return msgStatus_;
        }
        /**
         * <pre>
         *[4] флаг статуса сообщения, см CMDPBF.proto
         * </pre>
         *
         * <code>optional uint32 MsgStatus = 5;</code>
         * @param value The msgStatus to set.
         * @return This builder for chaining.
         */
        public Builder setMsgStatus(int value) {

          msgStatus_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] флаг статуса сообщения, см CMDPBF.proto
         * </pre>
         *
         * <code>optional uint32 MsgStatus = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearMsgStatus() {
          bitField0_ = (bitField0_ & ~0x00000010);
          msgStatus_ = 0;
          onChanged();
          return this;
        }

        private int statDate_ ;
        /**
         * <pre>
         *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 StatDate = 6;</code>
         * @return Whether the statDate field is set.
         */
        @java.lang.Override
        public boolean hasStatDate() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 StatDate = 6;</code>
         * @return The statDate.
         */
        @java.lang.Override
        public int getStatDate() {
          return statDate_;
        }
        /**
         * <pre>
         *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 StatDate = 6;</code>
         * @param value The statDate to set.
         * @return This builder for chaining.
         */
        public Builder setStatDate(int value) {

          statDate_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[4] Время/дата изменения статуса сообщения (в OmnicommTime)
         * </pre>
         *
         * <code>optional uint32 StatDate = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearStatDate() {
          bitField0_ = (bitField0_ & ~0x00000020);
          statDate_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString vehicleStatusPrev_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatusPrev = 7;</code>
         * @return Whether the vehicleStatusPrev field is set.
         */
        @java.lang.Override
        public boolean hasVehicleStatusPrev() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatusPrev = 7;</code>
         * @return The vehicleStatusPrev.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getVehicleStatusPrev() {
          return vehicleStatusPrev_;
        }
        /**
         * <pre>
         *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatusPrev = 7;</code>
         * @param value The vehicleStatusPrev to set.
         * @return This builder for chaining.
         */
        public Builder setVehicleStatusPrev(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          vehicleStatusPrev_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[24] строка предыдущего статуса ТС. Сейчас от ICON передаётся 20 символов+NULL. [Hex2ASCII]
         * </pre>
         *
         * <code>optional bytes VehicleStatusPrev = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearVehicleStatusPrev() {
          bitField0_ = (bitField0_ & ~0x00000040);
          vehicleStatusPrev_ = getDefaultInstance().getVehicleStatusPrev();
          onChanged();
          return this;
        }

        private int vehicleStatusFlags_ ;
        /**
         * <pre>
         * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
         * </pre>
         *
         * <code>optional uint32 VehicleStatusFlags = 8;</code>
         * @return Whether the vehicleStatusFlags field is set.
         */
        @java.lang.Override
        public boolean hasVehicleStatusFlags() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
         * </pre>
         *
         * <code>optional uint32 VehicleStatusFlags = 8;</code>
         * @return The vehicleStatusFlags.
         */
        @java.lang.Override
        public int getVehicleStatusFlags() {
          return vehicleStatusFlags_;
        }
        /**
         * <pre>
         * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
         * </pre>
         *
         * <code>optional uint32 VehicleStatusFlags = 8;</code>
         * @param value The vehicleStatusFlags to set.
         * @return This builder for chaining.
         */
        public Builder setVehicleStatusFlags(int value) {

          vehicleStatusFlags_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * флаг активности текущего статуса ТС (0x1 - активен, 0x0 - завершен)
         * </pre>
         *
         * <code>optional uint32 VehicleStatusFlags = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearVehicleStatusFlags() {
          bitField0_ = (bitField0_ & ~0x00000080);
          vehicleStatusFlags_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.ICONDt)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ICONDt>
          PARSER = new com.google.protobuf.AbstractParser<ICONDt>() {
        @java.lang.Override
        public ICONDt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ICONDt> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ICONDt> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OBDDt_J1979OrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * в формулах расчёта значений OBD используются обозначения A, B, C, D
       * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
       * @return Whether the sID0x01PID0x0D field is set.
       */
      boolean hasSID0X01PID0X0D();
      /**
       * <pre>
       * в формулах расчёта значений OBD используются обозначения A, B, C, D
       * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
       * @return The sID0x01PID0x0D.
       */
      int getSID0X01PID0X0D();

      /**
       * <pre>
       * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
       * @return Whether the sID0x01PID0x31 field is set.
       */
      boolean hasSID0X01PID0X31();
      /**
       * <pre>
       * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
       * @return The sID0x01PID0x31.
       */
      int getSID0X01PID0X31();

      /**
       * <pre>
       * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
       * @return Whether the sID0x01PID0x4E field is set.
       */
      boolean hasSID0X01PID0X4E();
      /**
       * <pre>
       * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
       * @return The sID0x01PID0x4E.
       */
      int getSID0X01PID0X4E();

      /**
       * <pre>
       * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
       * @return Whether the sID0x01PID0x42 field is set.
       */
      boolean hasSID0X01PID0X42();
      /**
       * <pre>
       * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
       * @return The sID0x01PID0x42.
       */
      int getSID0X01PID0X42();

      /**
       * <pre>
       * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
       * @return Whether the sID0x01PID0x0C field is set.
       */
      boolean hasSID0X01PID0X0C();
      /**
       * <pre>
       * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
       * @return The sID0x01PID0x0C.
       */
      int getSID0X01PID0X0C();

      /**
       * <pre>
       * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
       * @return Whether the sID0x01PID0x2F field is set.
       */
      boolean hasSID0X01PID0X2F();
      /**
       * <pre>
       * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
       * @return The sID0x01PID0x2F.
       */
      int getSID0X01PID0X2F();

      /**
       * <pre>
       * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
       * @return Whether the sID0x01PID0x5E field is set.
       */
      boolean hasSID0X01PID0X5E();
      /**
       * <pre>
       * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
       * @return The sID0x01PID0x5E.
       */
      int getSID0X01PID0X5E();

      /**
       * <pre>
       * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
       * @return Whether the sID0x01PID0x5C field is set.
       */
      boolean hasSID0X01PID0X5C();
      /**
       * <pre>
       * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
       * @return The sID0x01PID0x5C.
       */
      int getSID0X01PID0X5C();

      /**
       * <pre>
       * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
       * @return Whether the sID0x01PID0x05 field is set.
       */
      boolean hasSID0X01PID0X05();
      /**
       * <pre>
       * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
       * @return The sID0x01PID0x05.
       */
      int getSID0X01PID0X05();

      /**
       * <pre>
       * Статус неисправности Check Engine - Monitor status since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
       * @return Whether the sID0x01PID0x01 field is set.
       */
      boolean hasSID0X01PID0X01();
      /**
       * <pre>
       * Статус неисправности Check Engine - Monitor status since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
       * @return The sID0x01PID0x01.
       */
      int getSID0X01PID0X01();

      /**
       * <pre>
       * Malfunction Indicator Lamp (MIL) Status:
       *Если A/бит 7 = 0, то ошибки нет
       *Если A/бит 7 = 1, то ошибка есть
       * </pre>
       *
       * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
       * @return Whether the sID0x09PID0x02 field is set.
       */
      boolean hasSID0X09PID0X02();
      /**
       * <pre>
       * Malfunction Indicator Lamp (MIL) Status:
       *Если A/бит 7 = 0, то ошибки нет
       *Если A/бит 7 = 1, то ошибка есть
       * </pre>
       *
       * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
       * @return The sID0x09PID0x02.
       */
      com.google.protobuf.ByteString getSID0X09PID0X02();

      /**
       * <pre>
       * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
       * @return Whether the sID0x01PID0x5EQuantity field is set.
       */
      boolean hasSID0X01PID0X5EQuantity();
      /**
       * <pre>
       * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
       * @return The sID0x01PID0x5EQuantity.
       */
      int getSID0X01PID0X5EQuantity();
    }
    /**
     * <pre>
     * Данные шины CAN (протокол J1979)
     * </pre>
     *
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979}
     */
    public static final class OBDDt_J1979 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979)
        OBDDt_J1979OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use OBDDt_J1979.newBuilder() to construct.
      private OBDDt_J1979(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private OBDDt_J1979() {
        sID0X09PID0X02_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new OBDDt_J1979();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder.class);
      }

      private int bitField0_;
      public static final int SID_0X01_PID_0X0D_FIELD_NUMBER = 1;
      private int sID0X01PID0X0D_ = 0;
      /**
       * <pre>
       * в формулах расчёта значений OBD используются обозначения A, B, C, D
       * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
       * @return Whether the sID0x01PID0x0D field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X0D() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * в формулах расчёта значений OBD используются обозначения A, B, C, D
       * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
       * @return The sID0x01PID0x0D.
       */
      @java.lang.Override
      public int getSID0X01PID0X0D() {
        return sID0X01PID0X0D_;
      }

      public static final int SID_0X01_PID_0X31_FIELD_NUMBER = 2;
      private int sID0X01PID0X31_ = 0;
      /**
       * <pre>
       * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
       * @return Whether the sID0x01PID0x31 field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X31() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
       * @return The sID0x01PID0x31.
       */
      @java.lang.Override
      public int getSID0X01PID0X31() {
        return sID0X01PID0X31_;
      }

      public static final int SID_0X01_PID_0X4E_FIELD_NUMBER = 3;
      private int sID0X01PID0X4E_ = 0;
      /**
       * <pre>
       * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
       * @return Whether the sID0x01PID0x4E field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X4E() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
       * @return The sID0x01PID0x4E.
       */
      @java.lang.Override
      public int getSID0X01PID0X4E() {
        return sID0X01PID0X4E_;
      }

      public static final int SID_0X01_PID_0X42_FIELD_NUMBER = 4;
      private int sID0X01PID0X42_ = 0;
      /**
       * <pre>
       * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
       * @return Whether the sID0x01PID0x42 field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X42() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
       * @return The sID0x01PID0x42.
       */
      @java.lang.Override
      public int getSID0X01PID0X42() {
        return sID0X01PID0X42_;
      }

      public static final int SID_0X01_PID_0X0C_FIELD_NUMBER = 5;
      private int sID0X01PID0X0C_ = 0;
      /**
       * <pre>
       * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
       * @return Whether the sID0x01PID0x0C field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X0C() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
       * @return The sID0x01PID0x0C.
       */
      @java.lang.Override
      public int getSID0X01PID0X0C() {
        return sID0X01PID0X0C_;
      }

      public static final int SID_0X01_PID_0X2F_FIELD_NUMBER = 6;
      private int sID0X01PID0X2F_ = 0;
      /**
       * <pre>
       * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
       * @return Whether the sID0x01PID0x2F field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X2F() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
       * @return The sID0x01PID0x2F.
       */
      @java.lang.Override
      public int getSID0X01PID0X2F() {
        return sID0X01PID0X2F_;
      }

      public static final int SID_0X01_PID_0X5E_FIELD_NUMBER = 7;
      private int sID0X01PID0X5E_ = 0;
      /**
       * <pre>
       * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
       * @return Whether the sID0x01PID0x5E field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X5E() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
       * @return The sID0x01PID0x5E.
       */
      @java.lang.Override
      public int getSID0X01PID0X5E() {
        return sID0X01PID0X5E_;
      }

      public static final int SID_0X01_PID_0X5C_FIELD_NUMBER = 8;
      private int sID0X01PID0X5C_ = 0;
      /**
       * <pre>
       * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
       * @return Whether the sID0x01PID0x5C field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X5C() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
       * @return The sID0x01PID0x5C.
       */
      @java.lang.Override
      public int getSID0X01PID0X5C() {
        return sID0X01PID0X5C_;
      }

      public static final int SID_0X01_PID_0X05_FIELD_NUMBER = 9;
      private int sID0X01PID0X05_ = 0;
      /**
       * <pre>
       * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
       * @return Whether the sID0x01PID0x05 field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X05() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
       * @return The sID0x01PID0x05.
       */
      @java.lang.Override
      public int getSID0X01PID0X05() {
        return sID0X01PID0X05_;
      }

      public static final int SID_0X01_PID_0X01_FIELD_NUMBER = 10;
      private int sID0X01PID0X01_ = 0;
      /**
       * <pre>
       * Статус неисправности Check Engine - Monitor status since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
       * @return Whether the sID0x01PID0x01 field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X01() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Статус неисправности Check Engine - Monitor status since DTCs cleared
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
       * @return The sID0x01PID0x01.
       */
      @java.lang.Override
      public int getSID0X01PID0X01() {
        return sID0X01PID0X01_;
      }

      public static final int SID_0X09_PID_0X02_FIELD_NUMBER = 11;
      private com.google.protobuf.ByteString sID0X09PID0X02_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Malfunction Indicator Lamp (MIL) Status:
       *Если A/бит 7 = 0, то ошибки нет
       *Если A/бит 7 = 1, то ошибка есть
       * </pre>
       *
       * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
       * @return Whether the sID0x09PID0x02 field is set.
       */
      @java.lang.Override
      public boolean hasSID0X09PID0X02() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * Malfunction Indicator Lamp (MIL) Status:
       *Если A/бит 7 = 0, то ошибки нет
       *Если A/бит 7 = 1, то ошибка есть
       * </pre>
       *
       * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
       * @return The sID0x09PID0x02.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSID0X09PID0X02() {
        return sID0X09PID0X02_;
      }

      public static final int SID_0X01_PID_0X5E_QUANTITY_FIELD_NUMBER = 12;
      private int sID0X01PID0X5EQuantity_ = 0;
      /**
       * <pre>
       * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
       * @return Whether the sID0x01PID0x5EQuantity field is set.
       */
      @java.lang.Override
      public boolean hasSID0X01PID0X5EQuantity() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
       * </pre>
       *
       * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
       * @return The sID0x01PID0x5EQuantity.
       */
      @java.lang.Override
      public int getSID0X01PID0X5EQuantity() {
        return sID0X01PID0X5EQuantity_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, sID0X01PID0X0D_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, sID0X01PID0X31_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, sID0X01PID0X4E_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, sID0X01PID0X42_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, sID0X01PID0X0C_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt32(6, sID0X01PID0X2F_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt32(7, sID0X01PID0X5E_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt32(8, sID0X01PID0X5C_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeUInt32(9, sID0X01PID0X05_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeUInt32(10, sID0X01PID0X01_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeBytes(11, sID0X09PID0X02_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeUInt32(12, sID0X01PID0X5EQuantity_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, sID0X01PID0X0D_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, sID0X01PID0X31_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, sID0X01PID0X4E_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, sID0X01PID0X42_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, sID0X01PID0X0C_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, sID0X01PID0X2F_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, sID0X01PID0X5E_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, sID0X01PID0X5C_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, sID0X01PID0X05_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, sID0X01PID0X01_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(11, sID0X09PID0X02_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, sID0X01PID0X5EQuantity_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) obj;

        if (hasSID0X01PID0X0D() != other.hasSID0X01PID0X0D()) return false;
        if (hasSID0X01PID0X0D()) {
          if (getSID0X01PID0X0D()
              != other.getSID0X01PID0X0D()) return false;
        }
        if (hasSID0X01PID0X31() != other.hasSID0X01PID0X31()) return false;
        if (hasSID0X01PID0X31()) {
          if (getSID0X01PID0X31()
              != other.getSID0X01PID0X31()) return false;
        }
        if (hasSID0X01PID0X4E() != other.hasSID0X01PID0X4E()) return false;
        if (hasSID0X01PID0X4E()) {
          if (getSID0X01PID0X4E()
              != other.getSID0X01PID0X4E()) return false;
        }
        if (hasSID0X01PID0X42() != other.hasSID0X01PID0X42()) return false;
        if (hasSID0X01PID0X42()) {
          if (getSID0X01PID0X42()
              != other.getSID0X01PID0X42()) return false;
        }
        if (hasSID0X01PID0X0C() != other.hasSID0X01PID0X0C()) return false;
        if (hasSID0X01PID0X0C()) {
          if (getSID0X01PID0X0C()
              != other.getSID0X01PID0X0C()) return false;
        }
        if (hasSID0X01PID0X2F() != other.hasSID0X01PID0X2F()) return false;
        if (hasSID0X01PID0X2F()) {
          if (getSID0X01PID0X2F()
              != other.getSID0X01PID0X2F()) return false;
        }
        if (hasSID0X01PID0X5E() != other.hasSID0X01PID0X5E()) return false;
        if (hasSID0X01PID0X5E()) {
          if (getSID0X01PID0X5E()
              != other.getSID0X01PID0X5E()) return false;
        }
        if (hasSID0X01PID0X5C() != other.hasSID0X01PID0X5C()) return false;
        if (hasSID0X01PID0X5C()) {
          if (getSID0X01PID0X5C()
              != other.getSID0X01PID0X5C()) return false;
        }
        if (hasSID0X01PID0X05() != other.hasSID0X01PID0X05()) return false;
        if (hasSID0X01PID0X05()) {
          if (getSID0X01PID0X05()
              != other.getSID0X01PID0X05()) return false;
        }
        if (hasSID0X01PID0X01() != other.hasSID0X01PID0X01()) return false;
        if (hasSID0X01PID0X01()) {
          if (getSID0X01PID0X01()
              != other.getSID0X01PID0X01()) return false;
        }
        if (hasSID0X09PID0X02() != other.hasSID0X09PID0X02()) return false;
        if (hasSID0X09PID0X02()) {
          if (!getSID0X09PID0X02()
              .equals(other.getSID0X09PID0X02())) return false;
        }
        if (hasSID0X01PID0X5EQuantity() != other.hasSID0X01PID0X5EQuantity()) return false;
        if (hasSID0X01PID0X5EQuantity()) {
          if (getSID0X01PID0X5EQuantity()
              != other.getSID0X01PID0X5EQuantity()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSID0X01PID0X0D()) {
          hash = (37 * hash) + SID_0X01_PID_0X0D_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X0D();
        }
        if (hasSID0X01PID0X31()) {
          hash = (37 * hash) + SID_0X01_PID_0X31_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X31();
        }
        if (hasSID0X01PID0X4E()) {
          hash = (37 * hash) + SID_0X01_PID_0X4E_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X4E();
        }
        if (hasSID0X01PID0X42()) {
          hash = (37 * hash) + SID_0X01_PID_0X42_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X42();
        }
        if (hasSID0X01PID0X0C()) {
          hash = (37 * hash) + SID_0X01_PID_0X0C_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X0C();
        }
        if (hasSID0X01PID0X2F()) {
          hash = (37 * hash) + SID_0X01_PID_0X2F_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X2F();
        }
        if (hasSID0X01PID0X5E()) {
          hash = (37 * hash) + SID_0X01_PID_0X5E_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X5E();
        }
        if (hasSID0X01PID0X5C()) {
          hash = (37 * hash) + SID_0X01_PID_0X5C_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X5C();
        }
        if (hasSID0X01PID0X05()) {
          hash = (37 * hash) + SID_0X01_PID_0X05_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X05();
        }
        if (hasSID0X01PID0X01()) {
          hash = (37 * hash) + SID_0X01_PID_0X01_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X01();
        }
        if (hasSID0X09PID0X02()) {
          hash = (37 * hash) + SID_0X09_PID_0X02_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X09PID0X02().hashCode();
        }
        if (hasSID0X01PID0X5EQuantity()) {
          hash = (37 * hash) + SID_0X01_PID_0X5E_QUANTITY_FIELD_NUMBER;
          hash = (53 * hash) + getSID0X01PID0X5EQuantity();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Данные шины CAN (протокол J1979)
       * </pre>
       *
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          sID0X01PID0X0D_ = 0;
          sID0X01PID0X31_ = 0;
          sID0X01PID0X4E_ = 0;
          sID0X01PID0X42_ = 0;
          sID0X01PID0X0C_ = 0;
          sID0X01PID0X2F_ = 0;
          sID0X01PID0X5E_ = 0;
          sID0X01PID0X5C_ = 0;
          sID0X01PID0X05_ = 0;
          sID0X01PID0X01_ = 0;
          sID0X09PID0X02_ = com.google.protobuf.ByteString.EMPTY;
          sID0X01PID0X5EQuantity_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.sID0X01PID0X0D_ = sID0X01PID0X0D_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.sID0X01PID0X31_ = sID0X01PID0X31_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.sID0X01PID0X4E_ = sID0X01PID0X4E_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.sID0X01PID0X42_ = sID0X01PID0X42_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.sID0X01PID0X0C_ = sID0X01PID0X0C_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.sID0X01PID0X2F_ = sID0X01PID0X2F_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.sID0X01PID0X5E_ = sID0X01PID0X5E_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.sID0X01PID0X5C_ = sID0X01PID0X5C_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.sID0X01PID0X05_ = sID0X01PID0X05_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.sID0X01PID0X01_ = sID0X01PID0X01_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.sID0X09PID0X02_ = sID0X09PID0X02_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.sID0X01PID0X5EQuantity_ = sID0X01PID0X5EQuantity_;
            to_bitField0_ |= 0x00000800;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance()) return this;
          if (other.hasSID0X01PID0X0D()) {
            setSID0X01PID0X0D(other.getSID0X01PID0X0D());
          }
          if (other.hasSID0X01PID0X31()) {
            setSID0X01PID0X31(other.getSID0X01PID0X31());
          }
          if (other.hasSID0X01PID0X4E()) {
            setSID0X01PID0X4E(other.getSID0X01PID0X4E());
          }
          if (other.hasSID0X01PID0X42()) {
            setSID0X01PID0X42(other.getSID0X01PID0X42());
          }
          if (other.hasSID0X01PID0X0C()) {
            setSID0X01PID0X0C(other.getSID0X01PID0X0C());
          }
          if (other.hasSID0X01PID0X2F()) {
            setSID0X01PID0X2F(other.getSID0X01PID0X2F());
          }
          if (other.hasSID0X01PID0X5E()) {
            setSID0X01PID0X5E(other.getSID0X01PID0X5E());
          }
          if (other.hasSID0X01PID0X5C()) {
            setSID0X01PID0X5C(other.getSID0X01PID0X5C());
          }
          if (other.hasSID0X01PID0X05()) {
            setSID0X01PID0X05(other.getSID0X01PID0X05());
          }
          if (other.hasSID0X01PID0X01()) {
            setSID0X01PID0X01(other.getSID0X01PID0X01());
          }
          if (other.hasSID0X09PID0X02()) {
            setSID0X09PID0X02(other.getSID0X09PID0X02());
          }
          if (other.hasSID0X01PID0X5EQuantity()) {
            setSID0X01PID0X5EQuantity(other.getSID0X01PID0X5EQuantity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  sID0X01PID0X0D_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  sID0X01PID0X31_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  sID0X01PID0X4E_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  sID0X01PID0X42_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  sID0X01PID0X0C_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  sID0X01PID0X2F_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  sID0X01PID0X5E_ = input.readUInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  sID0X01PID0X5C_ = input.readUInt32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                case 72: {
                  sID0X01PID0X05_ = input.readUInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                case 80: {
                  sID0X01PID0X01_ = input.readUInt32();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 80
                case 90: {
                  sID0X09PID0X02_ = input.readBytes();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 90
                case 96: {
                  sID0X01PID0X5EQuantity_ = input.readUInt32();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 96
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int sID0X01PID0X0D_ ;
        /**
         * <pre>
         * в формулах расчёта значений OBD используются обозначения A, B, C, D
         * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
         * @return Whether the sID0x01PID0x0D field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X0D() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * в формулах расчёта значений OBD используются обозначения A, B, C, D
         * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
         * @return The sID0x01PID0x0D.
         */
        @java.lang.Override
        public int getSID0X01PID0X0D() {
          return sID0X01PID0X0D_;
        }
        /**
         * <pre>
         * в формулах расчёта значений OBD используются обозначения A, B, C, D
         * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
         * @param value The sID0x01PID0x0D to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X0D(int value) {

          sID0X01PID0X0D_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * в формулах расчёта значений OBD используются обозначения A, B, C, D
         * uint32 data = [D | C | B | A], где А - младший байт, D - старший байт
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0D = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X0D() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sID0X01PID0X0D_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X31_ ;
        /**
         * <pre>
         * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
         * @return Whether the sID0x01PID0x31 field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X31() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
         * @return The sID0x01PID0x31.
         */
        @java.lang.Override
        public int getSID0X01PID0X31() {
          return sID0X01PID0X31_;
        }
        /**
         * <pre>
         * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
         * @param value The sID0x01PID0x31 to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X31(int value) {

          sID0X01PID0X31_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Пробег после сброса ошибок = (256 * A + B), (km) - Distance travelled since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x31 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X31() {
          bitField0_ = (bitField0_ & ~0x00000002);
          sID0X01PID0X31_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X4E_ ;
        /**
         * <pre>
         * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
         * @return Whether the sID0x01PID0x4E field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X4E() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
         * @return The sID0x01PID0x4E.
         */
        @java.lang.Override
        public int getSID0X01PID0X4E() {
          return sID0X01PID0X4E_;
        }
        /**
         * <pre>
         * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
         * @param value The sID0x01PID0x4E to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X4E(int value) {

          sID0X01PID0X4E_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Время работы двинателя после сброса ошибок = (A*256)+B (минуты) - Engine Run Time since diagnostic trouble codes cleare
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x4E = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X4E() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sID0X01PID0X4E_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X42_ ;
        /**
         * <pre>
         * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
         * @return Whether the sID0x01PID0x42 field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X42() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
         * @return The sID0x01PID0x42.
         */
        @java.lang.Override
        public int getSID0X01PID0X42() {
          return sID0X01PID0X42_;
        }
        /**
         * <pre>
         * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
         * @param value The sID0x01PID0x42 to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X42(int value) {

          sID0X01PID0X42_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Напряжение борта, В = ((A*256) + B)/1000 (В) - Control module voltage 
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x42 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X42() {
          bitField0_ = (bitField0_ & ~0x00000008);
          sID0X01PID0X42_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X0C_ ;
        /**
         * <pre>
         * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
         * @return Whether the sID0x01PID0x0C field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X0C() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
         * @return The sID0x01PID0x0C.
         */
        @java.lang.Override
        public int getSID0X01PID0X0C() {
          return sID0X01PID0X0C_;
        }
        /**
         * <pre>
         * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
         * @param value The sID0x01PID0x0C to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X0C(int value) {

          sID0X01PID0X0C_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Обороты = (256 * A + B) / 4 (rpm) - Engine RPM
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x0C = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X0C() {
          bitField0_ = (bitField0_ & ~0x00000010);
          sID0X01PID0X0C_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X2F_ ;
        /**
         * <pre>
         * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
         * @return Whether the sID0x01PID0x2F field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X2F() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
         * @return The sID0x01PID0x2F.
         */
        @java.lang.Override
        public int getSID0X01PID0X2F() {
          return sID0X01PID0X2F_;
        }
        /**
         * <pre>
         * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
         * @param value The sID0x01PID0x2F to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X2F(int value) {

          sID0X01PID0X2F_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Объема топлива = (100 * A / 255) (%) - Fuel Level Input
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x2F = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X2F() {
          bitField0_ = (bitField0_ & ~0x00000020);
          sID0X01PID0X2F_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X5E_ ;
        /**
         * <pre>
         * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
         * @return Whether the sID0x01PID0x5E field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X5E() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
         * @return The sID0x01PID0x5E.
         */
        @java.lang.Override
        public int getSID0X01PID0X5E() {
          return sID0X01PID0X5E_;
        }
        /**
         * <pre>
         * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
         * @param value The sID0x01PID0x5E to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X5E(int value) {

          sID0X01PID0X5E_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Среднее значение мгновенного расхода = (256 * A + B) *0,05 (L/h) - Engine Fuel Rate
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X5E() {
          bitField0_ = (bitField0_ & ~0x00000040);
          sID0X01PID0X5E_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X5C_ ;
        /**
         * <pre>
         * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
         * @return Whether the sID0x01PID0x5C field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X5C() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
         * @return The sID0x01PID0x5C.
         */
        @java.lang.Override
        public int getSID0X01PID0X5C() {
          return sID0X01PID0X5C_;
        }
        /**
         * <pre>
         * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
         * @param value The sID0x01PID0x5C to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X5C(int value) {

          sID0X01PID0X5C_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Терминал получает несколько значений мгновенного расхода по OBD, рассчитывает и отправляет среднее
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5C = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X5C() {
          bitField0_ = (bitField0_ & ~0x00000080);
          sID0X01PID0X5C_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X05_ ;
        /**
         * <pre>
         * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
         * @return Whether the sID0x01PID0x05 field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X05() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
         * @return The sID0x01PID0x05.
         */
        @java.lang.Override
        public int getSID0X01PID0X05() {
          return sID0X01PID0X05_;
        }
        /**
         * <pre>
         * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
         * @param value The sID0x01PID0x05 to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X05(int value) {

          sID0X01PID0X05_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Температура ОЖ = (A - 40) (°C) - Engine Coolant Temperature
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x05 = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X05() {
          bitField0_ = (bitField0_ & ~0x00000100);
          sID0X01PID0X05_ = 0;
          onChanged();
          return this;
        }

        private int sID0X01PID0X01_ ;
        /**
         * <pre>
         * Статус неисправности Check Engine - Monitor status since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
         * @return Whether the sID0x01PID0x01 field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X01() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <pre>
         * Статус неисправности Check Engine - Monitor status since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
         * @return The sID0x01PID0x01.
         */
        @java.lang.Override
        public int getSID0X01PID0X01() {
          return sID0X01PID0X01_;
        }
        /**
         * <pre>
         * Статус неисправности Check Engine - Monitor status since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
         * @param value The sID0x01PID0x01 to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X01(int value) {

          sID0X01PID0X01_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Статус неисправности Check Engine - Monitor status since DTCs cleared
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x01 = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X01() {
          bitField0_ = (bitField0_ & ~0x00000200);
          sID0X01PID0X01_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString sID0X09PID0X02_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * Malfunction Indicator Lamp (MIL) Status:
         *Если A/бит 7 = 0, то ошибки нет
         *Если A/бит 7 = 1, то ошибка есть
         * </pre>
         *
         * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
         * @return Whether the sID0x09PID0x02 field is set.
         */
        @java.lang.Override
        public boolean hasSID0X09PID0X02() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <pre>
         * Malfunction Indicator Lamp (MIL) Status:
         *Если A/бит 7 = 0, то ошибки нет
         *Если A/бит 7 = 1, то ошибка есть
         * </pre>
         *
         * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
         * @return The sID0x09PID0x02.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getSID0X09PID0X02() {
          return sID0X09PID0X02_;
        }
        /**
         * <pre>
         * Malfunction Indicator Lamp (MIL) Status:
         *Если A/бит 7 = 0, то ошибки нет
         *Если A/бит 7 = 1, то ошибка есть
         * </pre>
         *
         * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
         * @param value The sID0x09PID0x02 to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X09PID0X02(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          sID0X09PID0X02_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Malfunction Indicator Lamp (MIL) Status:
         *Если A/бит 7 = 0, то ошибки нет
         *Если A/бит 7 = 1, то ошибка есть
         * </pre>
         *
         * <code>optional bytes SID_0x09_PID_0x02 = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X09PID0X02() {
          bitField0_ = (bitField0_ & ~0x00000400);
          sID0X09PID0X02_ = getDefaultInstance().getSID0X09PID0X02();
          onChanged();
          return this;
        }

        private int sID0X01PID0X5EQuantity_ ;
        /**
         * <pre>
         * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
         * @return Whether the sID0x01PID0x5EQuantity field is set.
         */
        @java.lang.Override
        public boolean hasSID0X01PID0X5EQuantity() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
         * @return The sID0x01PID0x5EQuantity.
         */
        @java.lang.Override
        public int getSID0X01PID0X5EQuantity() {
          return sID0X01PID0X5EQuantity_;
        }
        /**
         * <pre>
         * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
         * @param value The sID0x01PID0x5EQuantity to set.
         * @return This builder for chaining.
         */
        public Builder setSID0X01PID0X5EQuantity(int value) {

          sID0X01PID0X5EQuantity_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Кол-во успешно полученных ответов при расчёте среднего значения мгновенного расхода (optional uint32 SID_0x01_PID_0x5E = 7)
         * </pre>
         *
         * <code>optional uint32 SID_0x01_PID_0x5E_quantity = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearSID0X01PID0X5EQuantity() {
          bitField0_ = (bitField0_ & ~0x00000800);
          sID0X01PID0X5EQuantity_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.OBDDt_J1979)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<OBDDt_J1979>
          PARSER = new com.google.protobuf.AbstractParser<OBDDt_J1979>() {
        @java.lang.Override
        public OBDDt_J1979 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<OBDDt_J1979> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OBDDt_J1979> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LOGOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.traccar.protobuf.omnicomm.OmnicommMessage.LOG)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @return A list containing the debug.
       */
      java.util.List<java.lang.String>
          getDebugList();
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @return The count of debug.
       */
      int getDebugCount();
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @param index The index of the element to return.
       * @return The debug at the given index.
       */
      java.lang.String getDebug(int index);
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the debug at the given index.
       */
      com.google.protobuf.ByteString
          getDebugBytes(int index);

      /**
       * <pre>
       * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
       * </pre>
       *
       * <code>optional uint32 LLSRefNum = 2;</code>
       * @return Whether the lLSRefNum field is set.
       */
      boolean hasLLSRefNum();
      /**
       * <pre>
       * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
       * </pre>
       *
       * <code>optional uint32 LLSRefNum = 2;</code>
       * @return The lLSRefNum.
       */
      int getLLSRefNum();

      /**
       * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
       * @return A list containing the lLSRefLevelBef.
       */
      java.util.List<java.lang.Integer> getLLSRefLevelBefList();
      /**
       * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
       * @return The count of lLSRefLevelBef.
       */
      int getLLSRefLevelBefCount();
      /**
       * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefLevelBef at the given index.
       */
      int getLLSRefLevelBef(int index);

      /**
       * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
       * @return A list containing the lLSRefLevelAfter.
       */
      java.util.List<java.lang.Integer> getLLSRefLevelAfterList();
      /**
       * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
       * @return The count of lLSRefLevelAfter.
       */
      int getLLSRefLevelAfterCount();
      /**
       * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefLevelAfter at the given index.
       */
      int getLLSRefLevelAfter(int index);

      /**
       * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
       * @return A list containing the lLSRefKoef.
       */
      java.util.List<java.lang.Integer> getLLSRefKoefList();
      /**
       * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
       * @return The count of lLSRefKoef.
       */
      int getLLSRefKoefCount();
      /**
       * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefKoef at the given index.
       */
      int getLLSRefKoef(int index);

      /**
       * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
       * @return A list containing the lLSRefSens.
       */
      java.util.List<java.lang.Integer> getLLSRefSensList();
      /**
       * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
       * @return The count of lLSRefSens.
       */
      int getLLSRefSensCount();
      /**
       * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefSens at the given index.
       */
      int getLLSRefSens(int index);

      /**
       * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
       * @return A list containing the lLSRefTemp.
       */
      java.util.List<java.lang.Integer> getLLSRefTempList();
      /**
       * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
       * @return The count of lLSRefTemp.
       */
      int getLLSRefTempCount();
      /**
       * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefTemp at the given index.
       */
      int getLLSRefTemp(int index);
    }
    /**
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.LOG}
     */
    public static final class LOG extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.LOG)
        LOGOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LOG.newBuilder() to construct.
      private LOG(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LOG() {
        debug_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        lLSRefLevelBef_ = emptyIntList();
        lLSRefLevelAfter_ = emptyIntList();
        lLSRefKoef_ = emptyIntList();
        lLSRefSens_ = emptyIntList();
        lLSRefTemp_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LOG();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder.class);
      }

      private int bitField0_;
      public static final int DEBUG_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.LazyStringArrayList debug_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @return A list containing the debug.
       */
      public com.google.protobuf.ProtocolStringList
          getDebugList() {
        return debug_;
      }
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @return The count of debug.
       */
      public int getDebugCount() {
        return debug_.size();
      }
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @param index The index of the element to return.
       * @return The debug at the given index.
       */
      public java.lang.String getDebug(int index) {
        return debug_.get(index);
      }
      /**
       * <pre>
       *[1024] Отладочный лог
       * </pre>
       *
       * <code>repeated string Debug = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the debug at the given index.
       */
      public com.google.protobuf.ByteString
          getDebugBytes(int index) {
        return debug_.getByteString(index);
      }

      public static final int LLSREFNUM_FIELD_NUMBER = 2;
      private int lLSRefNum_ = 0;
      /**
       * <pre>
       * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
       * </pre>
       *
       * <code>optional uint32 LLSRefNum = 2;</code>
       * @return Whether the lLSRefNum field is set.
       */
      @java.lang.Override
      public boolean hasLLSRefNum() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
       * </pre>
       *
       * <code>optional uint32 LLSRefNum = 2;</code>
       * @return The lLSRefNum.
       */
      @java.lang.Override
      public int getLLSRefNum() {
        return lLSRefNum_;
      }

      public static final int LLSREFLEVELBEF_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList lLSRefLevelBef_ =
          emptyIntList();
      /**
       * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
       * @return A list containing the lLSRefLevelBef.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLLSRefLevelBefList() {
        return lLSRefLevelBef_;
      }
      /**
       * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
       * @return The count of lLSRefLevelBef.
       */
      public int getLLSRefLevelBefCount() {
        return lLSRefLevelBef_.size();
      }
      /**
       * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefLevelBef at the given index.
       */
      public int getLLSRefLevelBef(int index) {
        return lLSRefLevelBef_.getInt(index);
      }
      private int lLSRefLevelBefMemoizedSerializedSize = -1;

      public static final int LLSREFLEVELAFTER_FIELD_NUMBER = 4;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList lLSRefLevelAfter_ =
          emptyIntList();
      /**
       * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
       * @return A list containing the lLSRefLevelAfter.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLLSRefLevelAfterList() {
        return lLSRefLevelAfter_;
      }
      /**
       * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
       * @return The count of lLSRefLevelAfter.
       */
      public int getLLSRefLevelAfterCount() {
        return lLSRefLevelAfter_.size();
      }
      /**
       * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefLevelAfter at the given index.
       */
      public int getLLSRefLevelAfter(int index) {
        return lLSRefLevelAfter_.getInt(index);
      }
      private int lLSRefLevelAfterMemoizedSerializedSize = -1;

      public static final int LLSREFKOEF_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList lLSRefKoef_ =
          emptyIntList();
      /**
       * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
       * @return A list containing the lLSRefKoef.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLLSRefKoefList() {
        return lLSRefKoef_;
      }
      /**
       * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
       * @return The count of lLSRefKoef.
       */
      public int getLLSRefKoefCount() {
        return lLSRefKoef_.size();
      }
      /**
       * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefKoef at the given index.
       */
      public int getLLSRefKoef(int index) {
        return lLSRefKoef_.getInt(index);
      }
      private int lLSRefKoefMemoizedSerializedSize = -1;

      public static final int LLSREFSENS_FIELD_NUMBER = 6;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList lLSRefSens_ =
          emptyIntList();
      /**
       * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
       * @return A list containing the lLSRefSens.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLLSRefSensList() {
        return lLSRefSens_;
      }
      /**
       * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
       * @return The count of lLSRefSens.
       */
      public int getLLSRefSensCount() {
        return lLSRefSens_.size();
      }
      /**
       * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefSens at the given index.
       */
      public int getLLSRefSens(int index) {
        return lLSRefSens_.getInt(index);
      }
      private int lLSRefSensMemoizedSerializedSize = -1;

      public static final int LLSREFTEMP_FIELD_NUMBER = 7;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList lLSRefTemp_ =
          emptyIntList();
      /**
       * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
       * @return A list containing the lLSRefTemp.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getLLSRefTempList() {
        return lLSRefTemp_;
      }
      /**
       * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
       * @return The count of lLSRefTemp.
       */
      public int getLLSRefTempCount() {
        return lLSRefTemp_.size();
      }
      /**
       * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lLSRefTemp at the given index.
       */
      public int getLLSRefTemp(int index) {
        return lLSRefTemp_.getInt(index);
      }
      private int lLSRefTempMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < debug_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, debug_.getRaw(i));
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(2, lLSRefNum_);
        }
        if (getLLSRefLevelBefList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(lLSRefLevelBefMemoizedSerializedSize);
        }
        for (int i = 0; i < lLSRefLevelBef_.size(); i++) {
          output.writeUInt32NoTag(lLSRefLevelBef_.getInt(i));
        }
        if (getLLSRefLevelAfterList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(lLSRefLevelAfterMemoizedSerializedSize);
        }
        for (int i = 0; i < lLSRefLevelAfter_.size(); i++) {
          output.writeUInt32NoTag(lLSRefLevelAfter_.getInt(i));
        }
        if (getLLSRefKoefList().size() > 0) {
          output.writeUInt32NoTag(42);
          output.writeUInt32NoTag(lLSRefKoefMemoizedSerializedSize);
        }
        for (int i = 0; i < lLSRefKoef_.size(); i++) {
          output.writeUInt32NoTag(lLSRefKoef_.getInt(i));
        }
        if (getLLSRefSensList().size() > 0) {
          output.writeUInt32NoTag(50);
          output.writeUInt32NoTag(lLSRefSensMemoizedSerializedSize);
        }
        for (int i = 0; i < lLSRefSens_.size(); i++) {
          output.writeUInt32NoTag(lLSRefSens_.getInt(i));
        }
        if (getLLSRefTempList().size() > 0) {
          output.writeUInt32NoTag(58);
          output.writeUInt32NoTag(lLSRefTempMemoizedSerializedSize);
        }
        for (int i = 0; i < lLSRefTemp_.size(); i++) {
          output.writeUInt32NoTag(lLSRefTemp_.getInt(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < debug_.size(); i++) {
            dataSize += computeStringSizeNoTag(debug_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getDebugList().size();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, lLSRefNum_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lLSRefLevelBef_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lLSRefLevelBef_.getInt(i));
          }
          size += dataSize;
          if (!getLLSRefLevelBefList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lLSRefLevelBefMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lLSRefLevelAfter_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lLSRefLevelAfter_.getInt(i));
          }
          size += dataSize;
          if (!getLLSRefLevelAfterList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lLSRefLevelAfterMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lLSRefKoef_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lLSRefKoef_.getInt(i));
          }
          size += dataSize;
          if (!getLLSRefKoefList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lLSRefKoefMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lLSRefSens_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lLSRefSens_.getInt(i));
          }
          size += dataSize;
          if (!getLLSRefSensList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lLSRefSensMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < lLSRefTemp_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(lLSRefTemp_.getInt(i));
          }
          size += dataSize;
          if (!getLLSRefTempList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lLSRefTempMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG)) {
          return super.equals(obj);
        }
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG) obj;

        if (!getDebugList()
            .equals(other.getDebugList())) return false;
        if (hasLLSRefNum() != other.hasLLSRefNum()) return false;
        if (hasLLSRefNum()) {
          if (getLLSRefNum()
              != other.getLLSRefNum()) return false;
        }
        if (!getLLSRefLevelBefList()
            .equals(other.getLLSRefLevelBefList())) return false;
        if (!getLLSRefLevelAfterList()
            .equals(other.getLLSRefLevelAfterList())) return false;
        if (!getLLSRefKoefList()
            .equals(other.getLLSRefKoefList())) return false;
        if (!getLLSRefSensList()
            .equals(other.getLLSRefSensList())) return false;
        if (!getLLSRefTempList()
            .equals(other.getLLSRefTempList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getDebugCount() > 0) {
          hash = (37 * hash) + DEBUG_FIELD_NUMBER;
          hash = (53 * hash) + getDebugList().hashCode();
        }
        if (hasLLSRefNum()) {
          hash = (37 * hash) + LLSREFNUM_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefNum();
        }
        if (getLLSRefLevelBefCount() > 0) {
          hash = (37 * hash) + LLSREFLEVELBEF_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefLevelBefList().hashCode();
        }
        if (getLLSRefLevelAfterCount() > 0) {
          hash = (37 * hash) + LLSREFLEVELAFTER_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefLevelAfterList().hashCode();
        }
        if (getLLSRefKoefCount() > 0) {
          hash = (37 * hash) + LLSREFKOEF_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefKoefList().hashCode();
        }
        if (getLLSRefSensCount() > 0) {
          hash = (37 * hash) + LLSREFSENS_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefSensList().hashCode();
        }
        if (getLLSRefTempCount() > 0) {
          hash = (37 * hash) + LLSREFTEMP_FIELD_NUMBER;
          hash = (53 * hash) + getLLSRefTempList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage.LOG}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage.LOG)
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder.class);
        }

        // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          debug_ =
              com.google.protobuf.LazyStringArrayList.emptyList();
          lLSRefNum_ = 0;
          lLSRefLevelBef_ = emptyIntList();
          lLSRefLevelAfter_ = emptyIntList();
          lLSRefKoef_ = emptyIntList();
          lLSRefSens_ = emptyIntList();
          lLSRefTemp_ = emptyIntList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG getDefaultInstanceForType() {
          return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance();
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG build() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG buildPartial() {
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            debug_.makeImmutable();
            result.debug_ = debug_;
          }
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.lLSRefNum_ = lLSRefNum_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            lLSRefLevelBef_.makeImmutable();
            result.lLSRefLevelBef_ = lLSRefLevelBef_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            lLSRefLevelAfter_.makeImmutable();
            result.lLSRefLevelAfter_ = lLSRefLevelAfter_;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            lLSRefKoef_.makeImmutable();
            result.lLSRefKoef_ = lLSRefKoef_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            lLSRefSens_.makeImmutable();
            result.lLSRefSens_ = lLSRefSens_;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            lLSRefTemp_.makeImmutable();
            result.lLSRefTemp_ = lLSRefTemp_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG) {
            return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG other) {
          if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance()) return this;
          if (!other.debug_.isEmpty()) {
            if (debug_.isEmpty()) {
              debug_ = other.debug_;
              bitField0_ |= 0x00000001;
            } else {
              ensureDebugIsMutable();
              debug_.addAll(other.debug_);
            }
            onChanged();
          }
          if (other.hasLLSRefNum()) {
            setLLSRefNum(other.getLLSRefNum());
          }
          if (!other.lLSRefLevelBef_.isEmpty()) {
            if (lLSRefLevelBef_.isEmpty()) {
              lLSRefLevelBef_ = other.lLSRefLevelBef_;
              lLSRefLevelBef_.makeImmutable();
              bitField0_ |= 0x00000004;
            } else {
              ensureLLSRefLevelBefIsMutable();
              lLSRefLevelBef_.addAll(other.lLSRefLevelBef_);
            }
            onChanged();
          }
          if (!other.lLSRefLevelAfter_.isEmpty()) {
            if (lLSRefLevelAfter_.isEmpty()) {
              lLSRefLevelAfter_ = other.lLSRefLevelAfter_;
              lLSRefLevelAfter_.makeImmutable();
              bitField0_ |= 0x00000008;
            } else {
              ensureLLSRefLevelAfterIsMutable();
              lLSRefLevelAfter_.addAll(other.lLSRefLevelAfter_);
            }
            onChanged();
          }
          if (!other.lLSRefKoef_.isEmpty()) {
            if (lLSRefKoef_.isEmpty()) {
              lLSRefKoef_ = other.lLSRefKoef_;
              lLSRefKoef_.makeImmutable();
              bitField0_ |= 0x00000010;
            } else {
              ensureLLSRefKoefIsMutable();
              lLSRefKoef_.addAll(other.lLSRefKoef_);
            }
            onChanged();
          }
          if (!other.lLSRefSens_.isEmpty()) {
            if (lLSRefSens_.isEmpty()) {
              lLSRefSens_ = other.lLSRefSens_;
              lLSRefSens_.makeImmutable();
              bitField0_ |= 0x00000020;
            } else {
              ensureLLSRefSensIsMutable();
              lLSRefSens_.addAll(other.lLSRefSens_);
            }
            onChanged();
          }
          if (!other.lLSRefTemp_.isEmpty()) {
            if (lLSRefTemp_.isEmpty()) {
              lLSRefTemp_ = other.lLSRefTemp_;
              lLSRefTemp_.makeImmutable();
              bitField0_ |= 0x00000040;
            } else {
              ensureLLSRefTempIsMutable();
              lLSRefTemp_.addAll(other.lLSRefTemp_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  ensureDebugIsMutable();
                  debug_.add(bs);
                  break;
                } // case 10
                case 16: {
                  lLSRefNum_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  int v = input.readUInt32();
                  ensureLLSRefLevelBefIsMutable();
                  lLSRefLevelBef_.addInt(v);
                  break;
                } // case 24
                case 26: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureLLSRefLevelBefIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    lLSRefLevelBef_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 26
                case 32: {
                  int v = input.readUInt32();
                  ensureLLSRefLevelAfterIsMutable();
                  lLSRefLevelAfter_.addInt(v);
                  break;
                } // case 32
                case 34: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureLLSRefLevelAfterIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    lLSRefLevelAfter_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 34
                case 40: {
                  int v = input.readUInt32();
                  ensureLLSRefKoefIsMutable();
                  lLSRefKoef_.addInt(v);
                  break;
                } // case 40
                case 42: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureLLSRefKoefIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    lLSRefKoef_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 42
                case 48: {
                  int v = input.readUInt32();
                  ensureLLSRefSensIsMutable();
                  lLSRefSens_.addInt(v);
                  break;
                } // case 48
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureLLSRefSensIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    lLSRefSens_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 50
                case 56: {
                  int v = input.readUInt32();
                  ensureLLSRefTempIsMutable();
                  lLSRefTemp_.addInt(v);
                  break;
                } // case 56
                case 58: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureLLSRefTempIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    lLSRefTemp_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 58
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringArrayList debug_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        private void ensureDebugIsMutable() {
          if (!debug_.isModifiable()) {
            debug_ = new com.google.protobuf.LazyStringArrayList(debug_);
          }
          bitField0_ |= 0x00000001;
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @return A list containing the debug.
         */
        public com.google.protobuf.ProtocolStringList
            getDebugList() {
          debug_.makeImmutable();
          return debug_;
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @return The count of debug.
         */
        public int getDebugCount() {
          return debug_.size();
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @param index The index of the element to return.
         * @return The debug at the given index.
         */
        public java.lang.String getDebug(int index) {
          return debug_.get(index);
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @param index The index of the value to return.
         * @return The bytes of the debug at the given index.
         */
        public com.google.protobuf.ByteString
            getDebugBytes(int index) {
          return debug_.getByteString(index);
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @param index The index to set the value at.
         * @param value The debug to set.
         * @return This builder for chaining.
         */
        public Builder setDebug(
            int index, java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ensureDebugIsMutable();
          debug_.set(index, value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @param value The debug to add.
         * @return This builder for chaining.
         */
        public Builder addDebug(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ensureDebugIsMutable();
          debug_.add(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @param values The debug to add.
         * @return This builder for chaining.
         */
        public Builder addAllDebug(
            java.lang.Iterable<java.lang.String> values) {
          ensureDebugIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, debug_);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDebug() {
          debug_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *[1024] Отладочный лог
         * </pre>
         *
         * <code>repeated string Debug = 1;</code>
         * @param value The bytes of the debug to add.
         * @return This builder for chaining.
         */
        public Builder addDebugBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          ensureDebugIsMutable();
          debug_.add(value);
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private int lLSRefNum_ ;
        /**
         * <pre>
         * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
         * </pre>
         *
         * <code>optional uint32 LLSRefNum = 2;</code>
         * @return Whether the lLSRefNum field is set.
         */
        @java.lang.Override
        public boolean hasLLSRefNum() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
         * </pre>
         *
         * <code>optional uint32 LLSRefNum = 2;</code>
         * @return The lLSRefNum.
         */
        @java.lang.Override
        public int getLLSRefNum() {
          return lLSRefNum_;
        }
        /**
         * <pre>
         * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
         * </pre>
         *
         * <code>optional uint32 LLSRefNum = 2;</code>
         * @param value The lLSRefNum to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefNum(int value) {

          lLSRefNum_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * признак наличия подключенных датчиков REF к терминалу – битовая маска. бит 0 соответсвует подключенному 1-ому датчику и т.д.
         * </pre>
         *
         * <code>optional uint32 LLSRefNum = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefNum() {
          bitField0_ = (bitField0_ & ~0x00000002);
          lLSRefNum_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList lLSRefLevelBef_ = emptyIntList();
        private void ensureLLSRefLevelBefIsMutable() {
          if (!lLSRefLevelBef_.isModifiable()) {
            lLSRefLevelBef_ = makeMutableCopy(lLSRefLevelBef_);
          }
          bitField0_ |= 0x00000004;
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @return A list containing the lLSRefLevelBef.
         */
        public java.util.List<java.lang.Integer>
            getLLSRefLevelBefList() {
          lLSRefLevelBef_.makeImmutable();
          return lLSRefLevelBef_;
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @return The count of lLSRefLevelBef.
         */
        public int getLLSRefLevelBefCount() {
          return lLSRefLevelBef_.size();
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The lLSRefLevelBef at the given index.
         */
        public int getLLSRefLevelBef(int index) {
          return lLSRefLevelBef_.getInt(index);
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The lLSRefLevelBef to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefLevelBef(
            int index, int value) {

          ensureLLSRefLevelBefIsMutable();
          lLSRefLevelBef_.setInt(index, value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @param value The lLSRefLevelBef to add.
         * @return This builder for chaining.
         */
        public Builder addLLSRefLevelBef(int value) {

          ensureLLSRefLevelBefIsMutable();
          lLSRefLevelBef_.addInt(value);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @param values The lLSRefLevelBef to add.
         * @return This builder for chaining.
         */
        public Builder addAllLLSRefLevelBef(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLLSRefLevelBefIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lLSRefLevelBef_);
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefLevelBef = 3 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefLevelBef() {
          lLSRefLevelBef_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList lLSRefLevelAfter_ = emptyIntList();
        private void ensureLLSRefLevelAfterIsMutable() {
          if (!lLSRefLevelAfter_.isModifiable()) {
            lLSRefLevelAfter_ = makeMutableCopy(lLSRefLevelAfter_);
          }
          bitField0_ |= 0x00000008;
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @return A list containing the lLSRefLevelAfter.
         */
        public java.util.List<java.lang.Integer>
            getLLSRefLevelAfterList() {
          lLSRefLevelAfter_.makeImmutable();
          return lLSRefLevelAfter_;
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @return The count of lLSRefLevelAfter.
         */
        public int getLLSRefLevelAfterCount() {
          return lLSRefLevelAfter_.size();
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The lLSRefLevelAfter at the given index.
         */
        public int getLLSRefLevelAfter(int index) {
          return lLSRefLevelAfter_.getInt(index);
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The lLSRefLevelAfter to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefLevelAfter(
            int index, int value) {

          ensureLLSRefLevelAfterIsMutable();
          lLSRefLevelAfter_.setInt(index, value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @param value The lLSRefLevelAfter to add.
         * @return This builder for chaining.
         */
        public Builder addLLSRefLevelAfter(int value) {

          ensureLLSRefLevelAfterIsMutable();
          lLSRefLevelAfter_.addInt(value);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @param values The lLSRefLevelAfter to add.
         * @return This builder for chaining.
         */
        public Builder addAllLLSRefLevelAfter(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLLSRefLevelAfterIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lLSRefLevelAfter_);
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefLevelAfter = 4 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefLevelAfter() {
          lLSRefLevelAfter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList lLSRefKoef_ = emptyIntList();
        private void ensureLLSRefKoefIsMutable() {
          if (!lLSRefKoef_.isModifiable()) {
            lLSRefKoef_ = makeMutableCopy(lLSRefKoef_);
          }
          bitField0_ |= 0x00000010;
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @return A list containing the lLSRefKoef.
         */
        public java.util.List<java.lang.Integer>
            getLLSRefKoefList() {
          lLSRefKoef_.makeImmutable();
          return lLSRefKoef_;
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @return The count of lLSRefKoef.
         */
        public int getLLSRefKoefCount() {
          return lLSRefKoef_.size();
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The lLSRefKoef at the given index.
         */
        public int getLLSRefKoef(int index) {
          return lLSRefKoef_.getInt(index);
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The lLSRefKoef to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefKoef(
            int index, int value) {

          ensureLLSRefKoefIsMutable();
          lLSRefKoef_.setInt(index, value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @param value The lLSRefKoef to add.
         * @return This builder for chaining.
         */
        public Builder addLLSRefKoef(int value) {

          ensureLLSRefKoefIsMutable();
          lLSRefKoef_.addInt(value);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @param values The lLSRefKoef to add.
         * @return This builder for chaining.
         */
        public Builder addAllLLSRefKoef(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLLSRefKoefIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lLSRefKoef_);
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefKoef = 5 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefKoef() {
          lLSRefKoef_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList lLSRefSens_ = emptyIntList();
        private void ensureLLSRefSensIsMutable() {
          if (!lLSRefSens_.isModifiable()) {
            lLSRefSens_ = makeMutableCopy(lLSRefSens_);
          }
          bitField0_ |= 0x00000020;
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @return A list containing the lLSRefSens.
         */
        public java.util.List<java.lang.Integer>
            getLLSRefSensList() {
          lLSRefSens_.makeImmutable();
          return lLSRefSens_;
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @return The count of lLSRefSens.
         */
        public int getLLSRefSensCount() {
          return lLSRefSens_.size();
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The lLSRefSens at the given index.
         */
        public int getLLSRefSens(int index) {
          return lLSRefSens_.getInt(index);
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The lLSRefSens to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefSens(
            int index, int value) {

          ensureLLSRefSensIsMutable();
          lLSRefSens_.setInt(index, value);
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @param value The lLSRefSens to add.
         * @return This builder for chaining.
         */
        public Builder addLLSRefSens(int value) {

          ensureLLSRefSensIsMutable();
          lLSRefSens_.addInt(value);
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @param values The lLSRefSens to add.
         * @return This builder for chaining.
         */
        public Builder addAllLLSRefSens(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLLSRefSensIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lLSRefSens_);
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefSens = 6 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefSens() {
          lLSRefSens_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList lLSRefTemp_ = emptyIntList();
        private void ensureLLSRefTempIsMutable() {
          if (!lLSRefTemp_.isModifiable()) {
            lLSRefTemp_ = makeMutableCopy(lLSRefTemp_);
          }
          bitField0_ |= 0x00000040;
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @return A list containing the lLSRefTemp.
         */
        public java.util.List<java.lang.Integer>
            getLLSRefTempList() {
          lLSRefTemp_.makeImmutable();
          return lLSRefTemp_;
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @return The count of lLSRefTemp.
         */
        public int getLLSRefTempCount() {
          return lLSRefTemp_.size();
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @param index The index of the element to return.
         * @return The lLSRefTemp at the given index.
         */
        public int getLLSRefTemp(int index) {
          return lLSRefTemp_.getInt(index);
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @param index The index to set the value at.
         * @param value The lLSRefTemp to set.
         * @return This builder for chaining.
         */
        public Builder setLLSRefTemp(
            int index, int value) {

          ensureLLSRefTempIsMutable();
          lLSRefTemp_.setInt(index, value);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @param value The lLSRefTemp to add.
         * @return This builder for chaining.
         */
        public Builder addLLSRefTemp(int value) {

          ensureLLSRefTempIsMutable();
          lLSRefTemp_.addInt(value);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @param values The lLSRefTemp to add.
         * @return This builder for chaining.
         */
        public Builder addAllLLSRefTemp(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureLLSRefTempIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lLSRefTemp_);
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 LLSRefTemp = 7 [packed = true];</code>
         * @return This builder for chaining.
         */
        public Builder clearLLSRefTemp() {
          lLSRefTemp_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.LOG)
      }

      // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage.LOG)
      private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG();
      }

      public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<LOG>
          PARSER = new com.google.protobuf.AbstractParser<LOG>() {
        @java.lang.Override
        public LOG parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<LOG> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LOG> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList mID_ =
        emptyIntList();
    /**
     * <pre>
     * идентификатор события (возможно несколько событий в одном сообщении.)
     * </pre>
     *
     * <code>repeated uint32 mID = 1 [packed = true];</code>
     * @return A list containing the mID.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getMIDList() {
      return mID_;
    }
    /**
     * <pre>
     * идентификатор события (возможно несколько событий в одном сообщении.)
     * </pre>
     *
     * <code>repeated uint32 mID = 1 [packed = true];</code>
     * @return The count of mID.
     */
    public int getMIDCount() {
      return mID_.size();
    }
    /**
     * <pre>
     * идентификатор события (возможно несколько событий в одном сообщении.)
     * </pre>
     *
     * <code>repeated uint32 mID = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The mID at the given index.
     */
    public int getMID(int index) {
      return mID_.getInt(index);
    }
    private int mIDMemoizedSerializedSize = -1;

    public static final int GENERAL_FIELD_NUMBER = 2;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General general_;
    /**
     * <code>optional group General = 2 { ... }</code>
     * @return Whether the general field is set.
     */
    @java.lang.Override
    public boolean hasGeneral() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional group General = 2 { ... }</code>
     * @return The general.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General getGeneral() {
      return general_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance() : general_;
    }
    /**
     * <code>optional group General = 2 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder getGeneralOrBuilder() {
      return general_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance() : general_;
    }

    public static final int PHOTO_FIELD_NUMBER = 4;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo photo_;
    /**
     * <code>optional group Photo = 4 { ... }</code>
     * @return Whether the photo field is set.
     */
    @java.lang.Override
    public boolean hasPhoto() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional group Photo = 4 { ... }</code>
     * @return The photo.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo getPhoto() {
      return photo_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance() : photo_;
    }
    /**
     * <code>optional group Photo = 4 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder getPhotoOrBuilder() {
      return photo_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance() : photo_;
    }

    public static final int NAV_FIELD_NUMBER = 5;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV nAV_;
    /**
     * <code>optional group NAV = 5 { ... }</code>
     * @return Whether the nav field is set.
     */
    @java.lang.Override
    public boolean hasNAV() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional group NAV = 5 { ... }</code>
     * @return The nav.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV getNAV() {
      return nAV_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance() : nAV_;
    }
    /**
     * <code>optional group NAV = 5 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder getNAVOrBuilder() {
      return nAV_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance() : nAV_;
    }

    public static final int UNIDT_FIELD_NUMBER = 6;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt uniDt_;
    /**
     * <code>optional group UniDt = 6 { ... }</code>
     * @return Whether the unidt field is set.
     */
    @java.lang.Override
    public boolean hasUniDt() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional group UniDt = 6 { ... }</code>
     * @return The unidt.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt getUniDt() {
      return uniDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance() : uniDt_;
    }
    /**
     * <code>optional group UniDt = 6 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder getUniDtOrBuilder() {
      return uniDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance() : uniDt_;
    }

    public static final int CANDT_J1939_FIELD_NUMBER = 7;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 canDtJ1939_;
    /**
     * <code>optional group CanDt_J1939 = 7 { ... }</code>
     * @return Whether the candtJ1939 field is set.
     */
    @java.lang.Override
    public boolean hasCanDtJ1939() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional group CanDt_J1939 = 7 { ... }</code>
     * @return The candtJ1939.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getCanDtJ1939() {
      return canDtJ1939_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance() : canDtJ1939_;
    }
    /**
     * <code>optional group CanDt_J1939 = 7 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder getCanDtJ1939OrBuilder() {
      return canDtJ1939_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance() : canDtJ1939_;
    }

    public static final int LLSDT_FIELD_NUMBER = 8;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt lLSDt_;
    /**
     * <code>optional group LLSDt = 8 { ... }</code>
     * @return Whether the llsdt field is set.
     */
    @java.lang.Override
    public boolean hasLLSDt() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional group LLSDt = 8 { ... }</code>
     * @return The llsdt.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt getLLSDt() {
      return lLSDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance() : lLSDt_;
    }
    /**
     * <code>optional group LLSDt = 8 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder getLLSDtOrBuilder() {
      return lLSDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance() : lLSDt_;
    }

    public static final int OTHER_FIELD_NUMBER = 9;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other other_;
    /**
     * <code>optional group Other = 9 { ... }</code>
     * @return Whether the other field is set.
     */
    @java.lang.Override
    public boolean hasOther() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional group Other = 9 { ... }</code>
     * @return The other.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other getOther() {
      return other_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance() : other_;
    }
    /**
     * <code>optional group Other = 9 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder getOtherOrBuilder() {
      return other_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance() : other_;
    }

    public static final int ICONDT_FIELD_NUMBER = 10;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt iCONDt_;
    /**
     * <code>optional group ICONDt = 10 { ... }</code>
     * @return Whether the icondt field is set.
     */
    @java.lang.Override
    public boolean hasICONDt() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional group ICONDt = 10 { ... }</code>
     * @return The icondt.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt getICONDt() {
      return iCONDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance() : iCONDt_;
    }
    /**
     * <code>optional group ICONDt = 10 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder getICONDtOrBuilder() {
      return iCONDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance() : iCONDt_;
    }

    public static final int OBDDT_J1979_FIELD_NUMBER = 11;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 oBDDtJ1979_;
    /**
     * <code>optional group OBDDt_J1979 = 11 { ... }</code>
     * @return Whether the obddtJ1979 field is set.
     */
    @java.lang.Override
    public boolean hasOBDDtJ1979() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional group OBDDt_J1979 = 11 { ... }</code>
     * @return The obddtJ1979.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getOBDDtJ1979() {
      return oBDDtJ1979_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance() : oBDDtJ1979_;
    }
    /**
     * <code>optional group OBDDt_J1979 = 11 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder getOBDDtJ1979OrBuilder() {
      return oBDDtJ1979_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance() : oBDDtJ1979_;
    }

    public static final int LOG_FIELD_NUMBER = 16;
    private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG lOG_;
    /**
     * <code>optional group LOG = 16 { ... }</code>
     * @return Whether the log field is set.
     */
    @java.lang.Override
    public boolean hasLOG() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional group LOG = 16 { ... }</code>
     * @return The log.
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG getLOG() {
      return lOG_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance() : lOG_;
    }
    /**
     * <code>optional group LOG = 16 { ... }</code>
     */
    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder getLOGOrBuilder() {
      return lOG_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance() : lOG_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasNAV()) {
        if (!getNAV().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getMIDList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(mIDMemoizedSerializedSize);
      }
      for (int i = 0; i < mID_.size(); i++) {
        output.writeUInt32NoTag(mID_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeGroup(2, getGeneral());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeGroup(4, getPhoto());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeGroup(5, getNAV());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeGroup(6, getUniDt());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeGroup(7, getCanDtJ1939());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeGroup(8, getLLSDt());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeGroup(9, getOther());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeGroup(10, getICONDt());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeGroup(11, getOBDDtJ1979());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeGroup(16, getLOG());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < mID_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(mID_.getInt(i));
        }
        size += dataSize;
        if (!getMIDList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        mIDMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(2, getGeneral());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(4, getPhoto());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(5, getNAV());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(6, getUniDt());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(7, getCanDtJ1939());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(8, getLLSDt());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(9, getOther());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(10, getICONDt());
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(11, getOBDDtJ1979());
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeGroupSize(16, getLOG());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage)) {
        return super.equals(obj);
      }
      org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage other = (org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage) obj;

      if (!getMIDList()
          .equals(other.getMIDList())) return false;
      if (hasGeneral() != other.hasGeneral()) return false;
      if (hasGeneral()) {
        if (!getGeneral()
            .equals(other.getGeneral())) return false;
      }
      if (hasPhoto() != other.hasPhoto()) return false;
      if (hasPhoto()) {
        if (!getPhoto()
            .equals(other.getPhoto())) return false;
      }
      if (hasNAV() != other.hasNAV()) return false;
      if (hasNAV()) {
        if (!getNAV()
            .equals(other.getNAV())) return false;
      }
      if (hasUniDt() != other.hasUniDt()) return false;
      if (hasUniDt()) {
        if (!getUniDt()
            .equals(other.getUniDt())) return false;
      }
      if (hasCanDtJ1939() != other.hasCanDtJ1939()) return false;
      if (hasCanDtJ1939()) {
        if (!getCanDtJ1939()
            .equals(other.getCanDtJ1939())) return false;
      }
      if (hasLLSDt() != other.hasLLSDt()) return false;
      if (hasLLSDt()) {
        if (!getLLSDt()
            .equals(other.getLLSDt())) return false;
      }
      if (hasOther() != other.hasOther()) return false;
      if (hasOther()) {
        if (!getOther()
            .equals(other.getOther())) return false;
      }
      if (hasICONDt() != other.hasICONDt()) return false;
      if (hasICONDt()) {
        if (!getICONDt()
            .equals(other.getICONDt())) return false;
      }
      if (hasOBDDtJ1979() != other.hasOBDDtJ1979()) return false;
      if (hasOBDDtJ1979()) {
        if (!getOBDDtJ1979()
            .equals(other.getOBDDtJ1979())) return false;
      }
      if (hasLOG() != other.hasLOG()) return false;
      if (hasLOG()) {
        if (!getLOG()
            .equals(other.getLOG())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMIDCount() > 0) {
        hash = (37 * hash) + MID_FIELD_NUMBER;
        hash = (53 * hash) + getMIDList().hashCode();
      }
      if (hasGeneral()) {
        hash = (37 * hash) + GENERAL_FIELD_NUMBER;
        hash = (53 * hash) + getGeneral().hashCode();
      }
      if (hasPhoto()) {
        hash = (37 * hash) + PHOTO_FIELD_NUMBER;
        hash = (53 * hash) + getPhoto().hashCode();
      }
      if (hasNAV()) {
        hash = (37 * hash) + NAV_FIELD_NUMBER;
        hash = (53 * hash) + getNAV().hashCode();
      }
      if (hasUniDt()) {
        hash = (37 * hash) + UNIDT_FIELD_NUMBER;
        hash = (53 * hash) + getUniDt().hashCode();
      }
      if (hasCanDtJ1939()) {
        hash = (37 * hash) + CANDT_J1939_FIELD_NUMBER;
        hash = (53 * hash) + getCanDtJ1939().hashCode();
      }
      if (hasLLSDt()) {
        hash = (37 * hash) + LLSDT_FIELD_NUMBER;
        hash = (53 * hash) + getLLSDt().hashCode();
      }
      if (hasOther()) {
        hash = (37 * hash) + OTHER_FIELD_NUMBER;
        hash = (53 * hash) + getOther().hashCode();
      }
      if (hasICONDt()) {
        hash = (37 * hash) + ICONDT_FIELD_NUMBER;
        hash = (53 * hash) + getICONDt().hashCode();
      }
      if (hasOBDDtJ1979()) {
        hash = (37 * hash) + OBDDT_J1979_FIELD_NUMBER;
        hash = (53 * hash) + getOBDDtJ1979().hashCode();
      }
      if (hasLOG()) {
        hash = (37 * hash) + LOG_FIELD_NUMBER;
        hash = (53 * hash) + getLOG().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.traccar.protobuf.omnicomm.OmnicommMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.traccar.protobuf.omnicomm.OmnicommMessage)
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.class, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Builder.class);
      }

      // Construct using org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGeneralFieldBuilder();
          getPhotoFieldBuilder();
          getNAVFieldBuilder();
          getUniDtFieldBuilder();
          getCanDtJ1939FieldBuilder();
          getLLSDtFieldBuilder();
          getOtherFieldBuilder();
          getICONDtFieldBuilder();
          getOBDDtJ1979FieldBuilder();
          getLOGFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        mID_ = emptyIntList();
        general_ = null;
        if (generalBuilder_ != null) {
          generalBuilder_.dispose();
          generalBuilder_ = null;
        }
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        nAV_ = null;
        if (nAVBuilder_ != null) {
          nAVBuilder_.dispose();
          nAVBuilder_ = null;
        }
        uniDt_ = null;
        if (uniDtBuilder_ != null) {
          uniDtBuilder_.dispose();
          uniDtBuilder_ = null;
        }
        canDtJ1939_ = null;
        if (canDtJ1939Builder_ != null) {
          canDtJ1939Builder_.dispose();
          canDtJ1939Builder_ = null;
        }
        lLSDt_ = null;
        if (lLSDtBuilder_ != null) {
          lLSDtBuilder_.dispose();
          lLSDtBuilder_ = null;
        }
        other_ = null;
        if (otherBuilder_ != null) {
          otherBuilder_.dispose();
          otherBuilder_ = null;
        }
        iCONDt_ = null;
        if (iCONDtBuilder_ != null) {
          iCONDtBuilder_.dispose();
          iCONDtBuilder_ = null;
        }
        oBDDtJ1979_ = null;
        if (oBDDtJ1979Builder_ != null) {
          oBDDtJ1979Builder_.dispose();
          oBDDtJ1979Builder_ = null;
        }
        lOG_ = null;
        if (lOGBuilder_ != null) {
          lOGBuilder_.dispose();
          lOGBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage getDefaultInstanceForType() {
        return org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.getDefaultInstance();
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage build() {
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage buildPartial() {
        org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage result = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          mID_.makeImmutable();
          result.mID_ = mID_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.general_ = generalBuilder_ == null
              ? general_
              : generalBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.photo_ = photoBuilder_ == null
              ? photo_
              : photoBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.nAV_ = nAVBuilder_ == null
              ? nAV_
              : nAVBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.uniDt_ = uniDtBuilder_ == null
              ? uniDt_
              : uniDtBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.canDtJ1939_ = canDtJ1939Builder_ == null
              ? canDtJ1939_
              : canDtJ1939Builder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.lLSDt_ = lLSDtBuilder_ == null
              ? lLSDt_
              : lLSDtBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.other_ = otherBuilder_ == null
              ? other_
              : otherBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.iCONDt_ = iCONDtBuilder_ == null
              ? iCONDt_
              : iCONDtBuilder_.build();
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.oBDDtJ1979_ = oBDDtJ1979Builder_ == null
              ? oBDDtJ1979_
              : oBDDtJ1979Builder_.build();
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.lOG_ = lOGBuilder_ == null
              ? lOG_
              : lOGBuilder_.build();
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage) {
          return mergeFrom((org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage other) {
        if (other == org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.getDefaultInstance()) return this;
        if (!other.mID_.isEmpty()) {
          if (mID_.isEmpty()) {
            mID_ = other.mID_;
            mID_.makeImmutable();
            bitField0_ |= 0x00000001;
          } else {
            ensureMIDIsMutable();
            mID_.addAll(other.mID_);
          }
          onChanged();
        }
        if (other.hasGeneral()) {
          mergeGeneral(other.getGeneral());
        }
        if (other.hasPhoto()) {
          mergePhoto(other.getPhoto());
        }
        if (other.hasNAV()) {
          mergeNAV(other.getNAV());
        }
        if (other.hasUniDt()) {
          mergeUniDt(other.getUniDt());
        }
        if (other.hasCanDtJ1939()) {
          mergeCanDtJ1939(other.getCanDtJ1939());
        }
        if (other.hasLLSDt()) {
          mergeLLSDt(other.getLLSDt());
        }
        if (other.hasOther()) {
          mergeOther(other.getOther());
        }
        if (other.hasICONDt()) {
          mergeICONDt(other.getICONDt());
        }
        if (other.hasOBDDtJ1979()) {
          mergeOBDDtJ1979(other.getOBDDtJ1979());
        }
        if (other.hasLOG()) {
          mergeLOG(other.getLOG());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasNAV()) {
          if (!getNAV().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int v = input.readUInt32();
                ensureMIDIsMutable();
                mID_.addInt(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureMIDIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  mID_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 19: {
                input.readGroup(2,
                    getGeneralFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 19
              case 35: {
                input.readGroup(4,
                    getPhotoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 35
              case 43: {
                input.readGroup(5,
                    getNAVFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 43
              case 51: {
                input.readGroup(6,
                    getUniDtFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 51
              case 59: {
                input.readGroup(7,
                    getCanDtJ1939FieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 59
              case 67: {
                input.readGroup(8,
                    getLLSDtFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 67
              case 75: {
                input.readGroup(9,
                    getOtherFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 75
              case 83: {
                input.readGroup(10,
                    getICONDtFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000100;
                break;
              } // case 83
              case 91: {
                input.readGroup(11,
                    getOBDDtJ1979FieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 91
              case 131: {
                input.readGroup(16,
                    getLOGFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000400;
                break;
              } // case 131
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList mID_ = emptyIntList();
      private void ensureMIDIsMutable() {
        if (!mID_.isModifiable()) {
          mID_ = makeMutableCopy(mID_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @return A list containing the mID.
       */
      public java.util.List<java.lang.Integer>
          getMIDList() {
        mID_.makeImmutable();
        return mID_;
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @return The count of mID.
       */
      public int getMIDCount() {
        return mID_.size();
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The mID at the given index.
       */
      public int getMID(int index) {
        return mID_.getInt(index);
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The mID to set.
       * @return This builder for chaining.
       */
      public Builder setMID(
          int index, int value) {

        ensureMIDIsMutable();
        mID_.setInt(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @param value The mID to add.
       * @return This builder for chaining.
       */
      public Builder addMID(int value) {

        ensureMIDIsMutable();
        mID_.addInt(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @param values The mID to add.
       * @return This builder for chaining.
       */
      public Builder addAllMID(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMIDIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mID_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * идентификатор события (возможно несколько событий в одном сообщении.)
       * </pre>
       *
       * <code>repeated uint32 mID = 1 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearMID() {
        mID_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General general_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder> generalBuilder_;
      /**
       * <code>optional group General = 2 { ... }</code>
       * @return Whether the general field is set.
       */
      public boolean hasGeneral() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       * @return The general.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General getGeneral() {
        if (generalBuilder_ == null) {
          return general_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance() : general_;
        } else {
          return generalBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      public Builder setGeneral(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General value) {
        if (generalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          general_ = value;
        } else {
          generalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      public Builder setGeneral(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder builderForValue) {
        if (generalBuilder_ == null) {
          general_ = builderForValue.build();
        } else {
          generalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      public Builder mergeGeneral(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General value) {
        if (generalBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            general_ != null &&
            general_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance()) {
            getGeneralBuilder().mergeFrom(value);
          } else {
            general_ = value;
          }
        } else {
          generalBuilder_.mergeFrom(value);
        }
        if (general_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      public Builder clearGeneral() {
        bitField0_ = (bitField0_ & ~0x00000002);
        general_ = null;
        if (generalBuilder_ != null) {
          generalBuilder_.dispose();
          generalBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder getGeneralBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGeneralFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder getGeneralOrBuilder() {
        if (generalBuilder_ != null) {
          return generalBuilder_.getMessageOrBuilder();
        } else {
          return general_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.getDefaultInstance() : general_;
        }
      }
      /**
       * <code>optional group General = 2 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder> 
          getGeneralFieldBuilder() {
        if (generalBuilder_ == null) {
          generalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.General.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.GeneralOrBuilder>(
                  getGeneral(),
                  getParentForChildren(),
                  isClean());
          general_ = null;
        }
        return generalBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo photo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder> photoBuilder_;
      /**
       * <code>optional group Photo = 4 { ... }</code>
       * @return Whether the photo field is set.
       */
      public boolean hasPhoto() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       * @return The photo.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo getPhoto() {
        if (photoBuilder_ == null) {
          return photo_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance() : photo_;
        } else {
          return photoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      public Builder setPhoto(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo value) {
        if (photoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          photo_ = value;
        } else {
          photoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      public Builder setPhoto(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder builderForValue) {
        if (photoBuilder_ == null) {
          photo_ = builderForValue.build();
        } else {
          photoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      public Builder mergePhoto(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo value) {
        if (photoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            photo_ != null &&
            photo_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance()) {
            getPhotoBuilder().mergeFrom(value);
          } else {
            photo_ = value;
          }
        } else {
          photoBuilder_.mergeFrom(value);
        }
        if (photo_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      public Builder clearPhoto() {
        bitField0_ = (bitField0_ & ~0x00000004);
        photo_ = null;
        if (photoBuilder_ != null) {
          photoBuilder_.dispose();
          photoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder getPhotoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPhotoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder getPhotoOrBuilder() {
        if (photoBuilder_ != null) {
          return photoBuilder_.getMessageOrBuilder();
        } else {
          return photo_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.getDefaultInstance() : photo_;
        }
      }
      /**
       * <code>optional group Photo = 4 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder> 
          getPhotoFieldBuilder() {
        if (photoBuilder_ == null) {
          photoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Photo.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.PhotoOrBuilder>(
                  getPhoto(),
                  getParentForChildren(),
                  isClean());
          photo_ = null;
        }
        return photoBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV nAV_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder> nAVBuilder_;
      /**
       * <code>optional group NAV = 5 { ... }</code>
       * @return Whether the nav field is set.
       */
      public boolean hasNAV() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       * @return The nav.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV getNAV() {
        if (nAVBuilder_ == null) {
          return nAV_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance() : nAV_;
        } else {
          return nAVBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      public Builder setNAV(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV value) {
        if (nAVBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nAV_ = value;
        } else {
          nAVBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      public Builder setNAV(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder builderForValue) {
        if (nAVBuilder_ == null) {
          nAV_ = builderForValue.build();
        } else {
          nAVBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      public Builder mergeNAV(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV value) {
        if (nAVBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            nAV_ != null &&
            nAV_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance()) {
            getNAVBuilder().mergeFrom(value);
          } else {
            nAV_ = value;
          }
        } else {
          nAVBuilder_.mergeFrom(value);
        }
        if (nAV_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      public Builder clearNAV() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nAV_ = null;
        if (nAVBuilder_ != null) {
          nAVBuilder_.dispose();
          nAVBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder getNAVBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNAVFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder getNAVOrBuilder() {
        if (nAVBuilder_ != null) {
          return nAVBuilder_.getMessageOrBuilder();
        } else {
          return nAV_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.getDefaultInstance() : nAV_;
        }
      }
      /**
       * <code>optional group NAV = 5 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder> 
          getNAVFieldBuilder() {
        if (nAVBuilder_ == null) {
          nAVBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAV.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.NAVOrBuilder>(
                  getNAV(),
                  getParentForChildren(),
                  isClean());
          nAV_ = null;
        }
        return nAVBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt uniDt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder> uniDtBuilder_;
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       * @return Whether the unidt field is set.
       */
      public boolean hasUniDt() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       * @return The unidt.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt getUniDt() {
        if (uniDtBuilder_ == null) {
          return uniDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance() : uniDt_;
        } else {
          return uniDtBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      public Builder setUniDt(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt value) {
        if (uniDtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          uniDt_ = value;
        } else {
          uniDtBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      public Builder setUniDt(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder builderForValue) {
        if (uniDtBuilder_ == null) {
          uniDt_ = builderForValue.build();
        } else {
          uniDtBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      public Builder mergeUniDt(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt value) {
        if (uniDtBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            uniDt_ != null &&
            uniDt_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance()) {
            getUniDtBuilder().mergeFrom(value);
          } else {
            uniDt_ = value;
          }
        } else {
          uniDtBuilder_.mergeFrom(value);
        }
        if (uniDt_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      public Builder clearUniDt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uniDt_ = null;
        if (uniDtBuilder_ != null) {
          uniDtBuilder_.dispose();
          uniDtBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder getUniDtBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getUniDtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder getUniDtOrBuilder() {
        if (uniDtBuilder_ != null) {
          return uniDtBuilder_.getMessageOrBuilder();
        } else {
          return uniDt_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.getDefaultInstance() : uniDt_;
        }
      }
      /**
       * <code>optional group UniDt = 6 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder> 
          getUniDtFieldBuilder() {
        if (uniDtBuilder_ == null) {
          uniDtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.UniDtOrBuilder>(
                  getUniDt(),
                  getParentForChildren(),
                  isClean());
          uniDt_ = null;
        }
        return uniDtBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 canDtJ1939_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder> canDtJ1939Builder_;
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       * @return Whether the candtJ1939 field is set.
       */
      public boolean hasCanDtJ1939() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       * @return The candtJ1939.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 getCanDtJ1939() {
        if (canDtJ1939Builder_ == null) {
          return canDtJ1939_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance() : canDtJ1939_;
        } else {
          return canDtJ1939Builder_.getMessage();
        }
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      public Builder setCanDtJ1939(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 value) {
        if (canDtJ1939Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          canDtJ1939_ = value;
        } else {
          canDtJ1939Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      public Builder setCanDtJ1939(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder builderForValue) {
        if (canDtJ1939Builder_ == null) {
          canDtJ1939_ = builderForValue.build();
        } else {
          canDtJ1939Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      public Builder mergeCanDtJ1939(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939 value) {
        if (canDtJ1939Builder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            canDtJ1939_ != null &&
            canDtJ1939_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance()) {
            getCanDtJ1939Builder().mergeFrom(value);
          } else {
            canDtJ1939_ = value;
          }
        } else {
          canDtJ1939Builder_.mergeFrom(value);
        }
        if (canDtJ1939_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      public Builder clearCanDtJ1939() {
        bitField0_ = (bitField0_ & ~0x00000020);
        canDtJ1939_ = null;
        if (canDtJ1939Builder_ != null) {
          canDtJ1939Builder_.dispose();
          canDtJ1939Builder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder getCanDtJ1939Builder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getCanDtJ1939FieldBuilder().getBuilder();
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder getCanDtJ1939OrBuilder() {
        if (canDtJ1939Builder_ != null) {
          return canDtJ1939Builder_.getMessageOrBuilder();
        } else {
          return canDtJ1939_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.getDefaultInstance() : canDtJ1939_;
        }
      }
      /**
       * <code>optional group CanDt_J1939 = 7 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder> 
          getCanDtJ1939FieldBuilder() {
        if (canDtJ1939Builder_ == null) {
          canDtJ1939Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.CanDt_J1939OrBuilder>(
                  getCanDtJ1939(),
                  getParentForChildren(),
                  isClean());
          canDtJ1939_ = null;
        }
        return canDtJ1939Builder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt lLSDt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder> lLSDtBuilder_;
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       * @return Whether the llsdt field is set.
       */
      public boolean hasLLSDt() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       * @return The llsdt.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt getLLSDt() {
        if (lLSDtBuilder_ == null) {
          return lLSDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance() : lLSDt_;
        } else {
          return lLSDtBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      public Builder setLLSDt(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt value) {
        if (lLSDtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lLSDt_ = value;
        } else {
          lLSDtBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      public Builder setLLSDt(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder builderForValue) {
        if (lLSDtBuilder_ == null) {
          lLSDt_ = builderForValue.build();
        } else {
          lLSDtBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      public Builder mergeLLSDt(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt value) {
        if (lLSDtBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            lLSDt_ != null &&
            lLSDt_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance()) {
            getLLSDtBuilder().mergeFrom(value);
          } else {
            lLSDt_ = value;
          }
        } else {
          lLSDtBuilder_.mergeFrom(value);
        }
        if (lLSDt_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      public Builder clearLLSDt() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lLSDt_ = null;
        if (lLSDtBuilder_ != null) {
          lLSDtBuilder_.dispose();
          lLSDtBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder getLLSDtBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getLLSDtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder getLLSDtOrBuilder() {
        if (lLSDtBuilder_ != null) {
          return lLSDtBuilder_.getMessageOrBuilder();
        } else {
          return lLSDt_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.getDefaultInstance() : lLSDt_;
        }
      }
      /**
       * <code>optional group LLSDt = 8 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder> 
          getLLSDtFieldBuilder() {
        if (lLSDtBuilder_ == null) {
          lLSDtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LLSDtOrBuilder>(
                  getLLSDt(),
                  getParentForChildren(),
                  isClean());
          lLSDt_ = null;
        }
        return lLSDtBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other other_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder> otherBuilder_;
      /**
       * <code>optional group Other = 9 { ... }</code>
       * @return Whether the other field is set.
       */
      public boolean hasOther() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       * @return The other.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other getOther() {
        if (otherBuilder_ == null) {
          return other_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance() : other_;
        } else {
          return otherBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      public Builder setOther(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other value) {
        if (otherBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          other_ = value;
        } else {
          otherBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      public Builder setOther(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder builderForValue) {
        if (otherBuilder_ == null) {
          other_ = builderForValue.build();
        } else {
          otherBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      public Builder mergeOther(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other value) {
        if (otherBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            other_ != null &&
            other_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance()) {
            getOtherBuilder().mergeFrom(value);
          } else {
            other_ = value;
          }
        } else {
          otherBuilder_.mergeFrom(value);
        }
        if (other_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      public Builder clearOther() {
        bitField0_ = (bitField0_ & ~0x00000080);
        other_ = null;
        if (otherBuilder_ != null) {
          otherBuilder_.dispose();
          otherBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder getOtherBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getOtherFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder getOtherOrBuilder() {
        if (otherBuilder_ != null) {
          return otherBuilder_.getMessageOrBuilder();
        } else {
          return other_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.getDefaultInstance() : other_;
        }
      }
      /**
       * <code>optional group Other = 9 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder> 
          getOtherFieldBuilder() {
        if (otherBuilder_ == null) {
          otherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.Other.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OtherOrBuilder>(
                  getOther(),
                  getParentForChildren(),
                  isClean());
          other_ = null;
        }
        return otherBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt iCONDt_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder> iCONDtBuilder_;
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       * @return Whether the icondt field is set.
       */
      public boolean hasICONDt() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       * @return The icondt.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt getICONDt() {
        if (iCONDtBuilder_ == null) {
          return iCONDt_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance() : iCONDt_;
        } else {
          return iCONDtBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      public Builder setICONDt(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt value) {
        if (iCONDtBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iCONDt_ = value;
        } else {
          iCONDtBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      public Builder setICONDt(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder builderForValue) {
        if (iCONDtBuilder_ == null) {
          iCONDt_ = builderForValue.build();
        } else {
          iCONDtBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      public Builder mergeICONDt(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt value) {
        if (iCONDtBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0) &&
            iCONDt_ != null &&
            iCONDt_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance()) {
            getICONDtBuilder().mergeFrom(value);
          } else {
            iCONDt_ = value;
          }
        } else {
          iCONDtBuilder_.mergeFrom(value);
        }
        if (iCONDt_ != null) {
          bitField0_ |= 0x00000100;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      public Builder clearICONDt() {
        bitField0_ = (bitField0_ & ~0x00000100);
        iCONDt_ = null;
        if (iCONDtBuilder_ != null) {
          iCONDtBuilder_.dispose();
          iCONDtBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder getICONDtBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getICONDtFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder getICONDtOrBuilder() {
        if (iCONDtBuilder_ != null) {
          return iCONDtBuilder_.getMessageOrBuilder();
        } else {
          return iCONDt_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.getDefaultInstance() : iCONDt_;
        }
      }
      /**
       * <code>optional group ICONDt = 10 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder> 
          getICONDtFieldBuilder() {
        if (iCONDtBuilder_ == null) {
          iCONDtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDt.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.ICONDtOrBuilder>(
                  getICONDt(),
                  getParentForChildren(),
                  isClean());
          iCONDt_ = null;
        }
        return iCONDtBuilder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 oBDDtJ1979_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder> oBDDtJ1979Builder_;
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       * @return Whether the obddtJ1979 field is set.
       */
      public boolean hasOBDDtJ1979() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       * @return The obddtJ1979.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 getOBDDtJ1979() {
        if (oBDDtJ1979Builder_ == null) {
          return oBDDtJ1979_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance() : oBDDtJ1979_;
        } else {
          return oBDDtJ1979Builder_.getMessage();
        }
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      public Builder setOBDDtJ1979(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 value) {
        if (oBDDtJ1979Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          oBDDtJ1979_ = value;
        } else {
          oBDDtJ1979Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      public Builder setOBDDtJ1979(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder builderForValue) {
        if (oBDDtJ1979Builder_ == null) {
          oBDDtJ1979_ = builderForValue.build();
        } else {
          oBDDtJ1979Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      public Builder mergeOBDDtJ1979(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979 value) {
        if (oBDDtJ1979Builder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            oBDDtJ1979_ != null &&
            oBDDtJ1979_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance()) {
            getOBDDtJ1979Builder().mergeFrom(value);
          } else {
            oBDDtJ1979_ = value;
          }
        } else {
          oBDDtJ1979Builder_.mergeFrom(value);
        }
        if (oBDDtJ1979_ != null) {
          bitField0_ |= 0x00000200;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      public Builder clearOBDDtJ1979() {
        bitField0_ = (bitField0_ & ~0x00000200);
        oBDDtJ1979_ = null;
        if (oBDDtJ1979Builder_ != null) {
          oBDDtJ1979Builder_.dispose();
          oBDDtJ1979Builder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder getOBDDtJ1979Builder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getOBDDtJ1979FieldBuilder().getBuilder();
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder getOBDDtJ1979OrBuilder() {
        if (oBDDtJ1979Builder_ != null) {
          return oBDDtJ1979Builder_.getMessageOrBuilder();
        } else {
          return oBDDtJ1979_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.getDefaultInstance() : oBDDtJ1979_;
        }
      }
      /**
       * <code>optional group OBDDt_J1979 = 11 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder> 
          getOBDDtJ1979FieldBuilder() {
        if (oBDDtJ1979Builder_ == null) {
          oBDDtJ1979Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.OBDDt_J1979OrBuilder>(
                  getOBDDtJ1979(),
                  getParentForChildren(),
                  isClean());
          oBDDtJ1979_ = null;
        }
        return oBDDtJ1979Builder_;
      }

      private org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG lOG_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder> lOGBuilder_;
      /**
       * <code>optional group LOG = 16 { ... }</code>
       * @return Whether the log field is set.
       */
      public boolean hasLOG() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       * @return The log.
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG getLOG() {
        if (lOGBuilder_ == null) {
          return lOG_ == null ? org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance() : lOG_;
        } else {
          return lOGBuilder_.getMessage();
        }
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      public Builder setLOG(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG value) {
        if (lOGBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lOG_ = value;
        } else {
          lOGBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      public Builder setLOG(
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder builderForValue) {
        if (lOGBuilder_ == null) {
          lOG_ = builderForValue.build();
        } else {
          lOGBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      public Builder mergeLOG(org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG value) {
        if (lOGBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0) &&
            lOG_ != null &&
            lOG_ != org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance()) {
            getLOGBuilder().mergeFrom(value);
          } else {
            lOG_ = value;
          }
        } else {
          lOGBuilder_.mergeFrom(value);
        }
        if (lOG_ != null) {
          bitField0_ |= 0x00000400;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      public Builder clearLOG() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lOG_ = null;
        if (lOGBuilder_ != null) {
          lOGBuilder_.dispose();
          lOGBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder getLOGBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getLOGFieldBuilder().getBuilder();
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder getLOGOrBuilder() {
        if (lOGBuilder_ != null) {
          return lOGBuilder_.getMessageOrBuilder();
        } else {
          return lOG_ == null ?
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.getDefaultInstance() : lOG_;
        }
      }
      /**
       * <code>optional group LOG = 16 { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder> 
          getLOGFieldBuilder() {
        if (lOGBuilder_ == null) {
          lOGBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOG.Builder, org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage.LOGOrBuilder>(
                  getLOG(),
                  getParentForChildren(),
                  isClean());
          lOG_ = null;
        }
        return lOGBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.traccar.protobuf.omnicomm.OmnicommMessage)
    }

    // @@protoc_insertion_point(class_scope:org.traccar.protobuf.omnicomm.OmnicommMessage)
    private static final org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage();
    }

    public static org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OmnicommMessage>
        PARSER = new com.google.protobuf.AbstractParser<OmnicommMessage>() {
      @java.lang.Override
      public OmnicommMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OmnicommMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OmnicommMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.traccar.protobuf.omnicomm.OmnicommMessageOuterClass.OmnicommMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025OmnicommMessage.proto\022\035org.traccar.pro" +
      "tobuf.omnicomm\"\3541\n\017OmnicommMessage\022\017\n\003mI" +
      "D\030\001 \003(\rB\002\020\001\022G\n\007general\030\002 \001(\n26.org.tracc" +
      "ar.protobuf.omnicomm.OmnicommMessage.Gen" +
      "eral\022C\n\005photo\030\004 \001(\n24.org.traccar.protob" +
      "uf.omnicomm.OmnicommMessage.Photo\022?\n\003nav" +
      "\030\005 \001(\n22.org.traccar.protobuf.omnicomm.O" +
      "mnicommMessage.NAV\022C\n\005unidt\030\006 \001(\n24.org." +
      "traccar.protobuf.omnicomm.OmnicommMessag" +
      "e.UniDt\022O\n\013candt_j1939\030\007 \001(\n2:.org.tracc" +
      "ar.protobuf.omnicomm.OmnicommMessage.Can" +
      "Dt_J1939\022C\n\005llsdt\030\010 \001(\n24.org.traccar.pr" +
      "otobuf.omnicomm.OmnicommMessage.LLSDt\022C\n" +
      "\005other\030\t \001(\n24.org.traccar.protobuf.omni" +
      "comm.OmnicommMessage.Other\022E\n\006icondt\030\n \001" +
      "(\n25.org.traccar.protobuf.omnicomm.Omnic" +
      "ommMessage.ICONDt\022O\n\013obddt_j1979\030\013 \001(\n2:" +
      ".org.traccar.protobuf.omnicomm.OmnicommM" +
      "essage.OBDDt_J1979\022?\n\003log\030\020 \001(\n22.org.tr" +
      "accar.protobuf.omnicomm.OmnicommMessage." +
      "LOG\032\316\002\n\007General\022\014\n\004Time\030\001 \001(\r\022\r\n\005IDFAS\030\002" +
      " \001(\r\022\r\n\005IDDrv\030\003 \001(\014\022\013\n\003FLG\030\004 \001(\r\022\017\n\007Mile" +
      "age\030\005 \001(\r\022\014\n\004VImp\030\006 \001(\r\022\014\n\004TImp\030\007 \001(\r\022\016\n" +
      "\006Uboard\030\010 \001(\r\022\017\n\007BatLife\030\t \001(\r\022\016\n\006SumAcc" +
      "\030\n \001(\021\022\r\n\005Phone\030\013 \001(\014\022\r\n\005AmtrX\030\014 \001(\021\022\r\n\005" +
      "AmtrY\030\r \001(\021\022\r\n\005AmtrZ\030\016 \001(\021\022\023\n\013TachoCardI" +
      "D\030\017 \001(\014\022\023\n\013AccelStatus\030\020 \001(\r\022\021\n\tHoursKoe" +
      "f\030\021 \001(\r\022\030\n\020GsmSignalQuality\030\022 \001(\r\022\031\n\021Wif" +
      "iSignalQuality\030\023 \001(\r\032h\n\005Photo\022\016\n\006POSBLK\030" +
      "\001 \001(\r\022\017\n\007SZPHOTO\030\002 \001(\r\022\017\n\007SIZEBLK\030\003 \001(\r\022" +
      "\016\n\006IMGDAT\030\004 \001(\014\022\014\n\004IDPH\030\005 \001(\r\022\017\n\007IMGSTAT" +
      "\030\006 \001(\r\032q\n\003NAV\022\013\n\003LAT\030\001 \002(\021\022\013\n\003LON\030\002 \002(\021\022" +
      "\016\n\006GPSVel\030\003 \002(\r\022\016\n\006GPSDir\030\004 \002(\r\022\017\n\007GPSNS" +
      "at\030\005 \002(\r\022\016\n\006GPSAlt\030\006 \002(\021\022\017\n\007GPSTime\030\007 \001(" +
      "\r\032m\n\005UniDt\022\017\n\007UniVal0\030\001 \001(\021\022\017\n\007UniVal1\030\002" +
      " \001(\021\022\017\n\007UniVal2\030\003 \001(\021\022\017\n\007UniVal3\030\004 \001(\021\022\017" +
      "\n\007UniVal4\030\005 \001(\021\022\017\n\007UniVal5\030\006 \001(\021\032\312\003\n\013Can" +
      "Dt_J1939\022\r\n\005SPN70\030F \001(\r\022\r\n\005SPN91\030[ \001(\r\022\r" +
      "\n\005SPN96\030` \001(\r\022\016\n\006SPN100\030d \001(\r\022\016\n\006SPN110\030" +
      "n \001(\r\022\017\n\006SPN174\030\256\001 \001(\r\022\017\n\006SPN175\030\257\001 \001(\r\022" +
      "\017\n\006SPN182\030\266\001 \001(\r\022\017\n\006SPN184\030\270\001 \001(\r\022\017\n\006SPN" +
      "190\030\276\001 \001(\r\022\017\n\006SPN244\030\364\001 \001(\r\022\017\n\006SPN245\030\365\001" +
      " \001(\r\022\017\n\006SPN247\030\367\001 \001(\r\022\017\n\006SPN250\030\372\001 \001(\r\022\017" +
      "\n\006SPN521\030\211\004 \001(\r\022\017\n\006SPN522\030\212\004 \001(\r\022\017\n\006SPN5" +
      "27\030\217\004 \001(\r\022\023\n\006SPN582\030\306\004 \003(\rB\002\020\001\022\017\n\006SPN597" +
      "\030\325\004 \001(\r\022\017\n\006SPN598\030\326\004 \001(\r\022\017\n\006SPN914\030\222\007 \001(" +
      "\r\022\017\n\006SPN916\030\224\007 \001(\r\022\023\n\006SPN928\030\240\007 \003(\rB\002\020\001\022" +
      "\020\n\007SPN1624\030\330\014 \001(\r\022\020\n\007SPN1821\030\235\016 \001(\r\022\020\n\007S" +
      "PN1856\030\300\016 \001(\r\032\207\003\n\005LLSDt\022\r\n\005TLLS1\030\001 \001(\021\022\r" +
      "\n\005CLLS1\030\002 \001(\r\022\r\n\005FLLS1\030\003 \001(\021\022\r\n\005TLLS2\030\004 " +
      "\001(\021\022\r\n\005CLLS2\030\005 \001(\r\022\r\n\005FLLS2\030\006 \001(\021\022\r\n\005TLL" +
      "S3\030\007 \001(\021\022\r\n\005CLLS3\030\010 \001(\r\022\r\n\005FLLS3\030\t \001(\021\022\r" +
      "\n\005TLLS4\030\n \001(\021\022\r\n\005CLLS4\030\013 \001(\r\022\r\n\005FLLS4\030\014 " +
      "\001(\021\022\r\n\005TLLS5\030\r \001(\021\022\r\n\005CLLS5\030\016 \001(\r\022\r\n\005FLL" +
      "S5\030\017 \001(\021\022\r\n\005TLLS6\030\020 \001(\021\022\r\n\005CLLS6\030\021 \001(\r\022\r" +
      "\n\005FLLS6\030\022 \001(\021\022\r\n\005TLLS7\030\023 \001(\021\022\r\n\005CLLS7\030\024 " +
      "\001(\r\022\r\n\005FLLS7\030\025 \001(\021\022\r\n\005TLLS8\030\026 \001(\021\022\r\n\005CLL" +
      "S8\030\027 \001(\r\022\r\n\005FLLS8\030\030 \001(\021\022\026\n\nLLSRefKoef\030\031 " +
      "\003(\rB\002\020\001\032\276\032\n\005Other\022M\n\007onewire\030\001 \001(\n2<.org" +
      ".traccar.protobuf.omnicomm.OmnicommMessa" +
      "ge.Other.OneWire\022K\n\006pherip\030\002 \001(\n2;.org.t" +
      "raccar.protobuf.omnicomm.OmnicommMessage" +
      ".Other.Pherip\022I\n\005excan\030\003 \001(\n2:.org.tracc" +
      "ar.protobuf.omnicomm.OmnicommMessage.Oth" +
      "er.ExCAN\022O\n\010taho_ddd\030\004 \001(\n2=.org.traccar" +
      ".protobuf.omnicomm.OmnicommMessage.Other" +
      ".Taho_DDD\022E\n\003apc\030\005 \001(\n28.org.traccar.pro" +
      "tobuf.omnicomm.OmnicommMessage.Other.APC" +
      "\022Q\n\tmobileeye\030\006 \001(\n2>.org.traccar.protob" +
      "uf.omnicomm.OmnicommMessage.Other.Mobile" +
      "Eye\022U\n\013safedriving\030\007 \001(\n2@.org.traccar.p" +
      "rotobuf.omnicomm.OmnicommMessage.Other.S" +
      "afeDriving\022M\n\007gencomm\030\010 \001(\n2<.org.tracca" +
      "r.protobuf.omnicomm.OmnicommMessage.Othe" +
      "r.GenComm\022_\n\020fuelsensormodbus\030\t \001(\n2E.or" +
      "g.traccar.protobuf.omnicomm.OmnicommMess" +
      "age.Other.FuelSensorModbus\022Y\n\rweightcont" +
      "rol\030\n \001(\n2B.org.traccar.protobuf.omnicom" +
      "m.OmnicommMessage.Other.WeightControl\032\231\001" +
      "\n\007OneWire\022\020\n\010OneWire1\030\001 \001(\021\022\020\n\010OneWire2\030" +
      "\002 \001(\021\022\020\n\010OneWire3\030\003 \001(\021\022\020\n\010OneWire4\030\004 \001(" +
      "\021\022\020\n\010OneWire5\030\005 \001(\021\022\020\n\010OneWire6\030\006 \001(\021\022\020\n" +
      "\010OneWire7\030\007 \001(\021\022\020\n\010OneWire8\030\010 \001(\021\032{\n\006Phe" +
      "rip\022\023\n\013PassengerIn\030\001 \001(\r\022\024\n\014PassengerOut" +
      "\030\002 \001(\r\022\020\n\010DoorMask\030\003 \001(\r\022\024\n\014DriverStatus" +
      "\030\004 \001(\r\022\014\n\004TPMS\030\005 \001(\014\022\020\n\010iQFreeze\030\006 \001(\014\032\236" +
      "\001\n\005ExCAN\022\r\n\005SPNid\030\001 \003(\r\022\016\n\006SPNval\030\002 \003(\r\022" +
      "\022\n\nAdr64TEREX\030\n \001(\004\022\022\n\nAdr65TEREX\030\013 \001(\004\022" +
      "\022\n\nAdr66TEREX\030\014 \001(\004\022\022\n\nAdr67TEREX\030\r \001(\004\022" +
      "\022\n\nAdr11TEREX\030\016 \003(\004\022\022\n\nAdr69TEREX\030\017 \001(\004\032" +
      "Q\n\010Taho_DDD\022\016\n\006BLKPOS\030\001 \001(\r\022\020\n\010FILEDATA\030" +
      "\002 \001(\014\022\016\n\006CARDID\030\003 \001(\014\022\023\n\013STATUS_DATA\030\004 \001" +
      "(\r\032\212\002\n\003APC\022\022\n\nAPCStatus1\030\001 \001(\r\022\022\n\nAPCSta" +
      "tus2\030\002 \001(\r\022\022\n\nAPCStatus3\030\003 \001(\r\022\022\n\nAPCSta" +
      "tus4\030\004 \001(\r\022\024\n\014APCNumberIn1\030\005 \001(\r\022\025\n\rAPCN" +
      "umberOut1\030\006 \001(\r\022\024\n\014APCNumberIn2\030\007 \001(\r\022\025\n" +
      "\rAPCNumberOut2\030\010 \001(\r\022\024\n\014APCNumberIn3\030\t \001" +
      "(\r\022\026\n\016APCNumberOut31\030\n \001(\r\022\024\n\014APCNumberI" +
      "n4\030\013 \001(\r\022\025\n\rAPCNumberOut4\030\014 \001(\r\032T\n\tMobil" +
      "eEye\022\027\n\017MobileEyeStatus\030\001 \001(\r\022\016\n\006CAN700\030" +
      "\002 \003(\014\022\016\n\006CAN727\030\003 \003(\014\022\016\n\006CAN760\030\004 \003(\014\032h\n" +
      "\013SafeDriving\022\021\n\tEventMask\030\001 \001(\r\022\026\n\016Speed" +
      "Threshold\030\002 \001(\r\022\024\n\014RPMThreshold\030\003 \001(\r\022\030\n" +
      "\014AccelDangThs\030\004 \003(\002B\002\020\001\032\314\t\n\007GenComm\022\025\n\rG" +
      "EN_OILPRESS1\030\001 \001(\r\022\021\n\tGEN_TEMP1\030\002 \001(\021\022\021\n" +
      "\tGEN_VOLT1\030\003 \001(\002\022\020\n\010GEN_RPM1\030\004 \001(\r\022\021\n\tGE" +
      "N_UL1_1\030\005 \001(\002\022\021\n\tGEN_UL2_1\030\006 \001(\002\022\021\n\tGEN_" +
      "UL3_1\030\007 \001(\002\022\021\n\tGEN_IL1_1\030\010 \001(\002\022\021\n\tGEN_IL" +
      "2_1\030\t \001(\002\022\021\n\tGEN_IL3_1\030\n \001(\002\022\023\n\013GEN_STAT" +
      "US1\030\013 \001(\r\022\022\n\nGEN_HOURS1\030\014 \001(\r\022\022\n\nGEN_ALA" +
      "RM1\030\r \003(\014\022\025\n\rGEN_OILPRESS2\030\016 \001(\r\022\021\n\tGEN_" +
      "TEMP2\030\017 \001(\021\022\021\n\tGEN_VOLT2\030\020 \001(\002\022\020\n\010GEN_RP" +
      "M2\030\021 \001(\r\022\021\n\tGEN_UL1_2\030\022 \001(\002\022\021\n\tGEN_UL2_2" +
      "\030\023 \001(\002\022\021\n\tGEN_UL3_2\030\024 \001(\002\022\021\n\tGEN_IL1_2\030\025" +
      " \001(\002\022\021\n\tGEN_IL2_2\030\026 \001(\002\022\021\n\tGEN_IL3_2\030\027 \001" +
      "(\002\022\023\n\013GEN_STATUS2\030\030 \001(\r\022\022\n\nGEN_HOURS2\030\031 " +
      "\001(\r\022\022\n\nGEN_ALARM2\030\032 \003(\014\022\025\n\rGEN_OILPRESS3" +
      "\030\033 \001(\r\022\021\n\tGEN_TEMP3\030\034 \001(\021\022\021\n\tGEN_VOLT3\030\035" +
      " \001(\002\022\020\n\010GEN_RPM3\030\036 \001(\r\022\021\n\tGEN_UL1_3\030\037 \001(" +
      "\002\022\021\n\tGEN_UL2_3\030  \001(\002\022\021\n\tGEN_UL3_3\030! \001(\002\022" +
      "\021\n\tGEN_IL1_3\030\" \001(\002\022\021\n\tGEN_IL2_3\030# \001(\002\022\021\n" +
      "\tGEN_IL3_3\030$ \001(\002\022\023\n\013GEN_STATUS3\030% \001(\r\022\022\n" +
      "\nGEN_HOURS3\030& \001(\r\022\022\n\nGEN_ALARM3\030\' \003(\014\022\016\n" +
      "\006GEN_UC\030( \001(\002\022\016\n\006GEN_IC\030) \001(\r\022\020\n\010GEN_FRE" +
      "Q\030* \001(\002\022\021\n\tGEN_UL1L2\030+ \001(\002\022\021\n\tGEN_UL2L3\030" +
      ", \001(\002\022\021\n\tGEN_UL1L3\030- \001(\002\022\022\n\nPOW_ACT_L1\030." +
      " \001(\r\022\022\n\nPOW_ACT_L2\030/ \001(\r\022\022\n\nPOW_ACT_L3\0300" +
      " \001(\r\022\023\n\013POW_FULL_L1\0301 \001(\r\022\023\n\013POW_FULL_L2" +
      "\0302 \001(\r\022\023\n\013POW_FULL_L3\0303 \001(\r\022\024\n\014POW_REACT" +
      "_L1\0304 \001(\r\022\024\n\014POW_REACT_L2\0305 \001(\r\022\024\n\014POW_R" +
      "EACT_L3\0306 \001(\r\022\020\n\010POW_KOEF\0307 \001(\002\022\025\n\rPOW_G" +
      "EN_TOTAL\0308 \001(\r\022\022\n\nFUEL_LEVEL\0309 \001(\r\022\022\n\nSM" +
      "S_REGS_0\030< \001(\r\022\022\n\nSMS_REGS_1\030= \001(\r\022\022\n\nSM" +
      "S_REGS_2\030> \001(\r\022\022\n\nSMS_REGS_3\030? \001(\r\022\022\n\nSM" +
      "S_REGS_4\030@ \001(\r\032\360\001\n\020FuelSensorModbus\022\021\n\tF" +
      "uelLevel\030\001 \001(\002\022\023\n\013MedianLevel\030\002 \001(\002\022\024\n\014L" +
      "evelPercent\030\003 \001(\r\022\022\n\nFuelVolume\030\004 \001(\002\022\020\n" +
      "\010FuelTemp\030\005 \001(\021\022\022\n\nFuelWeight\030\006 \001(\002\022\023\n\013F" +
      "uelDensity\030\007 \001(\002\022\021\n\tVaporTemp\030\010 \001(\021\022\023\n\013V" +
      "aporWeight\030\t \001(\002\022\024\n\014LiquidWeight\030\n \001(\002\022\021" +
      "\n\tPointTemp\030\013 \003(\021\032e\n\rWeightControl\022\022\n\nAx" +
      "elWeight\030\001 \003(\002\022\021\n\tAxelLimit\030\002 \003(\002\022\023\n\013Tot" +
      "alWeight\030\003 \001(\002\022\030\n\020TotalWeightLimit\030\004 \001(\002" +
      "\032\301\001\n\006ICONDt\022\025\n\rVehicleStatus\030\001 \001(\014\022\027\n\017Ve" +
      "hicleStatusID\030\002 \001(\r\022\034\n\024VehicleStatusGrou" +
      "pID\030\003 \001(\r\022\r\n\005MsgID\030\004 \001(\004\022\021\n\tMsgStatus\030\005 " +
      "\001(\r\022\020\n\010StatDate\030\006 \001(\r\022\031\n\021VehicleStatusPr" +
      "ev\030\007 \001(\014\022\032\n\022VehicleStatusFlags\030\010 \001(\r\032\332\002\n" +
      "\013OBDDt_J1979\022\031\n\021SID_0x01_PID_0x0D\030\001 \001(\r\022" +
      "\031\n\021SID_0x01_PID_0x31\030\002 \001(\r\022\031\n\021SID_0x01_P" +
      "ID_0x4E\030\003 \001(\r\022\031\n\021SID_0x01_PID_0x42\030\004 \001(\r" +
      "\022\031\n\021SID_0x01_PID_0x0C\030\005 \001(\r\022\031\n\021SID_0x01_" +
      "PID_0x2F\030\006 \001(\r\022\031\n\021SID_0x01_PID_0x5E\030\007 \001(" +
      "\r\022\031\n\021SID_0x01_PID_0x5C\030\010 \001(\r\022\031\n\021SID_0x01" +
      "_PID_0x05\030\t \001(\r\022\031\n\021SID_0x01_PID_0x01\030\n \001" +
      "(\r\022\031\n\021SID_0x09_PID_0x02\030\013 \001(\014\022\"\n\032SID_0x0" +
      "1_PID_0x5E_quantity\030\014 \001(\r\032\251\001\n\003LOG\022\r\n\005Deb" +
      "ug\030\001 \003(\t\022\021\n\tLLSRefNum\030\002 \001(\r\022\032\n\016LLSRefLev" +
      "elBef\030\003 \003(\rB\002\020\001\022\034\n\020LLSRefLevelAfter\030\004 \003(" +
      "\rB\002\020\001\022\026\n\nLLSRefKoef\030\005 \003(\rB\002\020\001\022\026\n\nLLSRefS" +
      "ens\030\006 \003(\rB\002\020\001\022\026\n\nLLSRefTemp\030\007 \003(\rB\002\020\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor,
        new java.lang.String[] { "MID", "General", "Photo", "NAV", "UniDt", "CanDtJ1939", "LLSDt", "Other", "ICONDt", "OBDDtJ1979", "LOG", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(0);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_General_descriptor,
        new java.lang.String[] { "Time", "IDFAS", "IDDrv", "FLG", "Mileage", "VImp", "TImp", "Uboard", "BatLife", "SumAcc", "Phone", "AmtrX", "AmtrY", "AmtrZ", "TachoCardID", "AccelStatus", "HoursKoef", "GsmSignalQuality", "WifiSignalQuality", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(1);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Photo_descriptor,
        new java.lang.String[] { "POSBLK", "SZPHOTO", "SIZEBLK", "IMGDAT", "IDPH", "IMGSTAT", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(2);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_NAV_descriptor,
        new java.lang.String[] { "LAT", "LON", "GPSVel", "GPSDir", "GPSNSat", "GPSAlt", "GPSTime", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(3);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_UniDt_descriptor,
        new java.lang.String[] { "UniVal0", "UniVal1", "UniVal2", "UniVal3", "UniVal4", "UniVal5", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(4);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_CanDt_J1939_descriptor,
        new java.lang.String[] { "SPN70", "SPN91", "SPN96", "SPN100", "SPN110", "SPN174", "SPN175", "SPN182", "SPN184", "SPN190", "SPN244", "SPN245", "SPN247", "SPN250", "SPN521", "SPN522", "SPN527", "SPN582", "SPN597", "SPN598", "SPN914", "SPN916", "SPN928", "SPN1624", "SPN1821", "SPN1856", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(5);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LLSDt_descriptor,
        new java.lang.String[] { "TLLS1", "CLLS1", "FLLS1", "TLLS2", "CLLS2", "FLLS2", "TLLS3", "CLLS3", "FLLS3", "TLLS4", "CLLS4", "FLLS4", "TLLS5", "CLLS5", "FLLS5", "TLLS6", "CLLS6", "FLLS6", "TLLS7", "CLLS7", "FLLS7", "TLLS8", "CLLS8", "FLLS8", "LLSRefKoef", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(6);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor,
        new java.lang.String[] { "OneWire", "Pherip", "ExCAN", "TahoDDD", "APC", "MobileEye", "SafeDriving", "GenComm", "FuelSensorModbus", "WeightControl", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(0);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_OneWire_descriptor,
        new java.lang.String[] { "OneWire1", "OneWire2", "OneWire3", "OneWire4", "OneWire5", "OneWire6", "OneWire7", "OneWire8", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(1);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Pherip_descriptor,
        new java.lang.String[] { "PassengerIn", "PassengerOut", "DoorMask", "DriverStatus", "TPMS", "IQFreeze", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(2);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_ExCAN_descriptor,
        new java.lang.String[] { "SPNid", "SPNval", "Adr64TEREX", "Adr65TEREX", "Adr66TEREX", "Adr67TEREX", "Adr11TEREX", "Adr69TEREX", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(3);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_Taho_DDD_descriptor,
        new java.lang.String[] { "BLKPOS", "FILEDATA", "CARDID", "STATUSDATA", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(4);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_APC_descriptor,
        new java.lang.String[] { "APCStatus1", "APCStatus2", "APCStatus3", "APCStatus4", "APCNumberIn1", "APCNumberOut1", "APCNumberIn2", "APCNumberOut2", "APCNumberIn3", "APCNumberOut31", "APCNumberIn4", "APCNumberOut4", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(5);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_MobileEye_descriptor,
        new java.lang.String[] { "MobileEyeStatus", "CAN700", "CAN727", "CAN760", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(6);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_SafeDriving_descriptor,
        new java.lang.String[] { "EventMask", "SpeedThreshold", "RPMThreshold", "AccelDangThs", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(7);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_GenComm_descriptor,
        new java.lang.String[] { "GENOILPRESS1", "GENTEMP1", "GENVOLT1", "GENRPM1", "GENUL11", "GENUL21", "GENUL31", "GENIL11", "GENIL21", "GENIL31", "GENSTATUS1", "GENHOURS1", "GENALARM1", "GENOILPRESS2", "GENTEMP2", "GENVOLT2", "GENRPM2", "GENUL12", "GENUL22", "GENUL32", "GENIL12", "GENIL22", "GENIL32", "GENSTATUS2", "GENHOURS2", "GENALARM2", "GENOILPRESS3", "GENTEMP3", "GENVOLT3", "GENRPM3", "GENUL13", "GENUL23", "GENUL33", "GENIL13", "GENIL23", "GENIL33", "GENSTATUS3", "GENHOURS3", "GENALARM3", "GENUC", "GENIC", "GENFREQ", "GENUL1L2", "GENUL2L3", "GENUL1L3", "POWACTL1", "POWACTL2", "POWACTL3", "POWFULLL1", "POWFULLL2", "POWFULLL3", "POWREACTL1", "POWREACTL2", "POWREACTL3", "POWKOEF", "POWGENTOTAL", "FUELLEVEL", "SMSREGS0", "SMSREGS1", "SMSREGS2", "SMSREGS3", "SMSREGS4", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(8);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_FuelSensorModbus_descriptor,
        new java.lang.String[] { "FuelLevel", "MedianLevel", "LevelPercent", "FuelVolume", "FuelTemp", "FuelWeight", "FuelDensity", "VaporTemp", "VaporWeight", "LiquidWeight", "PointTemp", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_descriptor.getNestedTypes().get(9);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_Other_WeightControl_descriptor,
        new java.lang.String[] { "AxelWeight", "AxelLimit", "TotalWeight", "TotalWeightLimit", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(7);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_ICONDt_descriptor,
        new java.lang.String[] { "VehicleStatus", "VehicleStatusID", "VehicleStatusGroupID", "MsgID", "MsgStatus", "StatDate", "VehicleStatusPrev", "VehicleStatusFlags", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(8);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_OBDDt_J1979_descriptor,
        new java.lang.String[] { "SID0X01PID0X0D", "SID0X01PID0X31", "SID0X01PID0X4E", "SID0X01PID0X42", "SID0X01PID0X0C", "SID0X01PID0X2F", "SID0X01PID0X5E", "SID0X01PID0X5C", "SID0X01PID0X05", "SID0X01PID0X01", "SID0X09PID0X02", "SID0X01PID0X5EQuantity", });
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor =
      internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_descriptor.getNestedTypes().get(9);
    internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_traccar_protobuf_omnicomm_OmnicommMessage_LOG_descriptor,
        new java.lang.String[] { "Debug", "LLSRefNum", "LLSRefLevelBef", "LLSRefLevelAfter", "LLSRefKoef", "LLSRefSens", "LLSRefTemp", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
